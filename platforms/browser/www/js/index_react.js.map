{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/chars/index.js","webpack:///./node_modules/fbjs/lib/emptyFunction.js","webpack:///./node_modules/fbjs/lib/emptyObject.js","webpack:///./node_modules/fbjs/lib/invariant.js","webpack:///./node_modules/object-assign/index.js","webpack:///./node_modules/react/index.js","webpack:///./src/chars/你.js","webpack:///./src/chars/我.js","webpack:///./src/characters.js","webpack:///./node_modules/hanzi-writer/dist/hanzi-writer-lib.js","webpack:///./node_modules/fbjs/lib/isNode.js","webpack:///./node_modules/fbjs/lib/isTextNode.js","webpack:///./node_modules/fbjs/lib/containsNode.js","webpack:///./node_modules/fbjs/lib/shallowEqual.js","webpack:///./node_modules/fbjs/lib/getActiveElement.js","webpack:///./node_modules/fbjs/lib/ExecutionEnvironment.js","webpack:///./node_modules/react-dom/cjs/react-dom.production.min.js","webpack:///./node_modules/react-dom/index.js","webpack:///./node_modules/react/cjs/react.production.min.js","webpack:///./src/app.js","webpack:///./src/chars/哈.js","webpack:///./src/chars/关.js","webpack:///./src/chars/始.js","webpack:///./src/chars/开.js","webpack:///./src/chars/怕.js","webpack:///./src/chars/您.js","webpack:///./src/chars/闷.js","webpack:///./src/chars/心.js","webpack:///./src/chars/岁.js","webpack:///./src/chars/山.js","webpack:///./src/chars/的.js","webpack:///./src/chars/猫.js","webpack:///./src/chars/田.js","webpack:///./src/chars/狗.js","webpack:///./src/chars/句.js","webpack:///./src/chars/包.js","webpack:///./src/chars/所.js","webpack:///./src/chars/因.js","webpack:///./src/chars/为.js","webpack:///./src/chars/名.js","webpack:///./src/chars/字.js","webpack:///./src/chars/么.js","webpack:///./src/chars/什.js","webpack:///./src/chars/教.js","webpack:///./src/chars/叫.js","webpack:///./src/chars/妹.js","webpack:///./src/chars/未.js","webpack:///./src/chars/弟.js","webpack:///./src/chars/帅.js","webpack:///./src/chars/哥.js","webpack:///./src/chars/且.js","webpack:///./src/chars/姐.js","webpack:///./src/chars/爸.js","webpack:///./src/chars/父.js","webpack:///./src/chars/以.js","webpack:///./src/chars/可.js","webpack:///./src/chars/吧.js","webpack:///./src/chars/巴.js","webpack:///./src/chars/呢.js","webpack:///./src/chars/吗.js","webpack:///./src/chars/骂.js","webpack:///./src/chars/妈.js","webpack:///./src/chars/马.js","webpack:///./src/chars/十.js","webpack:///./src/chars/九.js","webpack:///./src/chars/七.js","webpack:///./src/chars/六.js","webpack:///./src/chars/五.js","webpack:///./src/chars/恨.js","webpack:///./src/chars/很.js","webpack:///./src/chars/艮.js","webpack:///./src/chars/好.js","webpack:///./src/chars/孩.js","webpack:///./src/chars/胖.js","webpack:///./src/chars/半.js","webpack:///./src/chars/月.js","webpack:///./src/chars/子.js","webpack:///./src/chars/死.js","webpack:///./src/chars/四.js","webpack:///./src/chars/儿.js","webpack:///./src/chars/八.js","webpack:///./src/chars/都.js","webpack:///./src/chars/门.js","webpack:///./src/chars/两.js","webpack:///./src/chars/那.js","webpack:///./src/chars/个.js","webpack:///./src/chars/它.js","webpack:///./src/chars/她.js","webpack:///./src/chars/他.js","webpack:///./src/chars/也.js","webpack:///./src/chars/块.js","webpack:///./src/chars/土.js","webpack:///./src/chars/钱.js","webpack:///./src/chars/少.js","webpack:///./src/chars/多.js","webpack:///./src/chars/夕.js","webpack:///./src/chars/刀.js","webpack:///./src/chars/小.js","webpack:///./src/chars/大.js","webpack:///./src/chars/帮.js","webpack:///./src/chars/啡.js","webpack:///./src/chars/咖.js","webpack:///./src/chars/力.js","webpack:///./src/chars/克.js","webpack:///./src/chars/巧.js","webpack:///./src/chars/要.js","webpack:///./src/chars/饿.js","webpack:///./src/chars/不.js","webpack:///./src/chars/哦.js","webpack:///./src/chars/拜.js","webpack:///./src/chars/打.js","webpack:///./src/chars/手.js","webpack:///./src/chars/订.js","webpack:///./src/chars/丁.js","webpack:///./src/chars/是.js","webpack:///./src/chars/英.js","webpack:///./src/chars/美.js","webpack:///./src/chars/国.js","webpack:///./src/chars/玉.js","webpack:///./src/chars/王.js","webpack:///./src/chars/中.js","webpack:///./src/chars/人.js","webpack:///./src/chars/百.js","webpack:///./src/chars/白.js","webpack:///./src/chars/日.js","webpack:///./src/chars/口.js","webpack:///./src/chars/谢.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","charData","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","this","thatReturnsArgument","validateFormat","format","condition","a","b","e","f","error","undefined","Error","args","argIndex","replace","framesToPop","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","val","TypeError","toObject","arguments","length","key","strokes","medians","radStrokes","characterList","character","pinyin","translation","data","我","你","谢","口","日","白","百","人","中","王","玉","国","美","英","是","丁","订","手","打","拜","哦","不","饿","要","巧","克","力","咖","啡","帮","大","小","刀","夕","多","少","钱","土","块","也","他","她","它","个","那","两","门","都","八","儿","四","死","子","月","半","胖","孩","好","艮","很","恨","五","六","七","九","十","马","妈","骂","吗","呢","巴","吧","可","以","父","爸","姐","且","哥","帅","弟","未","妹","叫","教","什","么","字","名","为","因","所","包","句","狗","田","猫","的","山","岁","心","闷","您","怕","开","始","关","哈","global","_typeof","Symbol","iterator","obj","constructor","performanceNow","performance","now","Date","requestAnimationFrame","callback","setTimeout","cancelAnimationFrame","clearTimeout","_assign","overrideTarget","_len","overrides","Array","_key","override","count","arrLast","arr","average","reduce","acc","callIfExists","colorStringToVals","colorString","normalizedColor","toUpperCase","trim","test","hexParts","substring","hexStr","parseInt","slice","g","rgbMatch","match","parseFloat","copyAndMergeDeep","base","output","baseVal","overrideVal","isArray","counter","emptyFunc","inflate","scope","parts","final","current","cap","objRepeat","item","times","timeout","duration","Promise","resolve","reject","string","round","createElm","elmType","document","createElementNS","attr","elm","setAttributeNS","attrs","attrsMap","attrName","Canvas","svg","defs","createSubCanvas","group","appendChild","init","elmOrId","width","height","getElementById","nodeType","nodeName","getPathString","points","close","start","remainingPoints","pathString","x","y","point","roundedPoint","removeElm","parentNode","removeChild","_require","subtract","p1","p2","magnitude","Math","sqrt","pow","distance","point1","point2","lastPoint","dist","extendPointOnLine","vect","norm","subdivideCurve","curve","maxLen","newCurve","prevPoint","segLen","numNewPoints","ceil","newSegLen","push","outlineCurve","numPoints","segmentLen","outlinePoints","endPoint","remainingCurvePoints","remainingDist","outlinePointFound","nextPointDist","shift","nextPoint","multiplier","equals","frechetDist","curve1","curve2","results","j","recursiveCalc","max","min","Infinity","rotate","theta","cos","sin","cosineSimilarity","filterParallelPoints","filteredPoints","numFilteredPoints","curVect","prevVect","pop","normalizeCurve","outlinedCurve","mean","translatedCurve","scale","scaledCurve","Function","eval","window","Mutation","showStrokes","charName","opacity","displayPortion","force","hideCharacter","concat","animateStroke","stroke","speed","strokeNum","getLength","writable","animateCharacter","fadeDuration","delayBetweenStrokes","mutations","Pause","showCharacter","animateCharacterLoop","delayBetweenLoops","animateSingleStroke","state","curCharState","mutationState","showStroke","updateColor","colorName","colorVal","valuesOrCallable","options","_valuesOrCallable","_duration","_force","_tickBound","_tick","bind","run","renderState","_this","_values","_inflateValues","updateState","isAlreadyAtEnd","startValues","endValues","endValue","startValue","_renderState","_startState","_startTime","_frameHandle","_resolve","timing","progress","cancel","easedProgress","PI","getPartialValues","values","_this2","timeoutPromise","_timeout","HanziWriterRenderer","RenderState","CharDataParser","Positioner","Quiz","defaultCharDataLoader","LoadingManager","characterActions","defaultOptions","charDataLoader","onLoadCharDataError","onLoadCharDataSuccess","showOutline","padding","strokeAnimationSpeed","strokeFadeDuration","strokeHighlightDuration","strokeHighlightSpeed","strokeColor","radicalColor","highlightColor","outlineColor","drawingColor","leniency","showHintAfterMisses","highlightOnComplete","highlightCompleteColor","drawingFadeDuration","drawingWidth","strokeWidth","outlineWidth","HanziWriter","element","console","warn","_init","setCharacter","_options","_withData","_character","then","res","onComplete","_this3","cancelQuiz","_this4","loopCharacterAnimation","_this5","loop","_this6","hideOutline","_this7","_this8","fixedColorVal","mappedColor","mutation","quiz","_this9","quizOptions","_quiz","_positioner","startQuiz","char","_this10","_char","_hanziWriterRenderer","destroy","cancelAll","_withDataPromise","_loadingManager","loadCharData","pathStrings","loadingFailed","charDataParser","generateCharacter","hanziWriterRenderer","nextState","render","mount","_canvas","createSVGPoint","_pt","_assignOptions","_setupListeners","mergedOptions","strokeAnimationDuration","_fillWidthAndHeight","filledOpts","_canvas$svg$getBoundi","getBoundingClientRect","minDim","func","_this11","_this12","addEventListener","evt","isLoadingCharData","preventDefault","_forwardToQuiz","_getMousePoint","_getTouchPoint","method","apply","clientX","clientY","localPt","matrixTransform","getScreenCTM","inverse","box","left","top","touches","create","writer","lastLoadingManager","lastLoadingOptions","loadCharacterData","loadingManager","getScalingTransform","positioner","getXOffset","getYOffset","getScale","transform","getHeight","previousHanziWriter","noConflict","CharacterRenderer","UserStrokeRenderer","_mainCharRenderer","_outlineCharRenderer","_highlightCharRenderer","_userStrokeRenderers","canvas","positionedCanvas","_positionedCanvas","props","outline","main","highlight","userStrokes","userStrokeId","userStrokeProps","strokeRenderer","innerHTML","StrokeRenderer","_oldProps","strokeRenderers","subCanvas","_group","style","display","colorsChanged","_require2","STROKE_WIDTH","_stroke","_pathLength","_animationPath","_clip","_strokePath","maskId","path","extendedMaskPoints","newStart","extendedPoints","unshift","extendStart","stroke-width","fill","stroke-linecap","stroke-linejoin","stroke-dasharray","strokeDashoffset","_getStrokeDashoffset","color","_getColor","_ref","isInRadical","_path","_props$strokeColor","onStateChange","_onStateChange","_mutationChains","stateChanges","scopes","mut","filter","cancelMutations","mutationChain","_isActive","_index","_mutations","_loop","_scopes","_run","chain","canceled","chainScope","indexOf","_cancelMutationChain","_slicedToArray","_arr","_n","_d","_e","_s","_i","next","done","sliceIterator","Stroke","Character","symbol","charJson","generateStrokes","index","pointData","_pointData","getStartingPoint","getEndingPoint","getVectors","vector","getDistance","distances","strokePoint","getAverageDistance","CHARACTER_BOUNDS","_calculateScaleAndOffset","convertExternalPoint","_xOffset","_scale","_yOffset","bounds","preScaledWidth","preScaledHeight","effectiveWidth","effectiveHeight","scaleX","scaleY","xCenteringBuffer","yCenteringBuffer","strokeMatches","UserStroke","quizActions","geometry","getDrawnPath","userStroke","externalPoints","_currentStrokeIndex","_numRecentMistakes","_totalMistakes","_drawnStrokes","startUserStroke","externalPoint","_userStroke","endUserStroke","strokeId","continueUserStroke","appendPoint","nextPoints","updateUserStroke","id","removeUserStroke","currentStroke","_getCurrentStroke","isOutlineVisible","_handleSuccess","_handleFailure","highlightStroke","onCorrectStroke","mistakesOnStroke","totalMistakes","strokesRemaining","drawnPath","animation","highlightCompleteChar","onMistake","directionMatches","edgeVectors","vectors","getEdgeVectors","strokeVectors","similarities","edgeVector","strokeSimilarities","strokeVector","SHAPE_FIT_ROTATIONS","getMatchData","_options$leniency","_options$isOutlineVis","avgDist","withinDistThresh","isMatch","startAndEndMatch","closestStroke","startingDist","endingDist","startAndEndMatches","directionMatch","shapeMatch","normCurve1","normCurve2","minDist","shapeFit","lengthMatch","lengthMatches","dedupedPoints","stripDuplicates","strokeMatchData","laterStrokes","closestMatchDist","laterMatchData","leniencyAdjustment","newLeniency","adjustedOptions","startingPoint","startingExternalPoint","onLoad","onError","xhr","XMLHttpRequest","overrideMimeType","open","getCharDataUrl","onerror","event","onreadystatechange","readyState","status","JSON","parse","responseText","send","_loadCounter","_isLoading","_loadingPromise","_debouncedLoad","wrappedResolve","returnedData","reason","_reject","_setupLoadingPromise","_loadingChar","defaultView","ownerDocument","Node","isNode","isTextNode","containsNode","outerNode","innerNode","contains","compareDocumentPosition","is","objA","objB","keysA","keysB","doc","activeElement","body","canUseDOM","createElement","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","attachEvent","canUseViewport","screen","isInWorker","ba","ea","A","C","fa","ha","ja","ka","D","encodeURIComponent","E","_caughtError","_hasCaughtError","_rethrowError","_hasRethrowError","invokeGuardedCallback","h","k","v","invokeGuardedCallbackAndCatchFirstError","hasCaughtError","clearCaughtError","rethrowCaughtError","oa","pa","qa","ra","extractEvents","eventTypes","sa","phasedRegistrationNames","ta","registrationName","ua","va","dependencies","wa","xa","Ca","freeze","plugins","eventNameDispatchConfigs","registrationNameModules","registrationNameDependencies","possibleRegistrationNames","injectEventPluginOrder","injectEventPluginsByName","Da","Ea","Fa","Ga","type","currentTarget","Ha","Ia","Ja","Ka","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","La","Ma","Na","Oa","stateNode","disabled","Pa","Qa","Ra","injection","getListener","runEventsInBatch","runExtractedEventsInBatch","Sa","random","toString","F","Ta","Ua","tag","Va","Xa","bb","precacheFiberNode","getClosestInstanceFromNode","getInstanceFromNode","getNodeFromInstance","getFiberCurrentPropsFromNode","updateFiberProps","L","cb","db","dispatchConfig","eb","_targetInst","fb","gb","hb","ib","jb","alternate","kb","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","accumulateDirectDispatches","lb","mb","documentElement","M","_root","_startText","_fallbackText","nb","ob","pb","qb","eventPhase","bubbles","cancelable","timeStamp","defaultPrevented","isTrusted","N","nativeEvent","Interface","isDefaultPrevented","returnValue","sb","eventPool","tb","destructor","rb","getPooled","stopPropagation","cancelBubble","persist","extend","ub","vb","wb","xb","yb","documentMode","zb","Ab","Bb","Kb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","Lb","Mb","keyCode","Nb","detail","Ob","Rb","which","Pb","ctrlKey","altKey","metaKey","Qb","Sb","Tb","injectFiberControlledHostComponent","Ub","Vb","Wb","restoreControlledState","Xb","Yb","Zb","$b","enqueueStateRestore","needsStateRestore","restoreStateIfNeeded","ac","bc","cc","dc","ec","fc","date","datetime","datetime-local","email","month","number","password","range","search","tel","text","time","url","week","gc","toLowerCase","hc","correspondingUseElement","ic","setAttribute","jc","lc","_valueTracker","getOwnPropertyDescriptor","set","getValue","setValue","stopTracking","kc","mc","checked","nc","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","O","oc","pc","qc","rc","sc","tc","uc","vc","wc","xc","yc","zc","Ac","displayName","$$typeof","Bc","_debugOwner","_debugSource","fileName","lineNumber","Cc","Dc","Ec","U","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","V","Sc","Tc","Uc","Gc","isNaN","Hc","Fc","removeAttribute","Vc","defaultChecked","defaultValue","_wrapperState","initialChecked","Wc","Xc","initialValue","controlled","Yc","Zc","$c","ad","tabIndex","bd","change","cd","dd","ed","fd","gd","hd","jd","detachEvent","kd","ld","md","nd","od","pd","_isInputEventSupported","qd","view","rd","Alt","Control","Meta","Shift","sd","getModifierState","td","ud","screenX","screenY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","srcElement","toElement","vd","mouseEnter","mouseLeave","wd","parentWindow","xd","effectTag","yd","_reactInternalFiber","zd","Ad","child","sibling","Bd","Dd","animationName","elapsedTime","pseudoElement","Ed","clipboardData","Fd","Gd","charCode","Hd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Id","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","Jd","location","repeat","locale","Kd","dataTransfer","Ld","targetTouches","changedTouches","Md","Nd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Od","Pd","Qd","isInteractive","Rd","isInteractiveTopLevelEventType","Sd","Td","Ud","targetInst","ancestors","containerInfo","topLevelType","Vd","Wd","W","Xd","Yd","Zd","$d","_enabled","setEnabled","isEnabled","trapBubbledEvent","trapCapturedEvent","dispatchEvent","ae","be","animationend","animationiteration","animationstart","transitionend","ce","de","ee","transition","fe","topAnimationEnd","topAnimationIteration","topAnimationStart","topBlur","topCancel","topChange","topClick","topClose","topCompositionEnd","topCompositionStart","topCompositionUpdate","topContextMenu","topCopy","topCut","topDoubleClick","topDrag","topDragEnd","topDragEnter","topDragExit","topDragLeave","topDragOver","topDragStart","topDrop","topFocus","topInput","topKeyDown","topKeyPress","topKeyUp","topLoad","topLoadStart","topMouseDown","topMouseMove","topMouseOut","topMouseOver","topMouseUp","topPaste","topScroll","topSelectionChange","topTextInput","topToggle","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","topTransitionEnd","topWheel","ge","topAbort","topCanPlay","topCanPlayThrough","topDurationChange","topEmptied","topEncrypted","topEnded","topError","topLoadedData","topLoadedMetadata","topPause","topPlay","topPlaying","topProgress","topRateChange","topSeeked","topSeeking","topStalled","topSuspend","topTimeUpdate","topVolumeChange","topWaiting","he","ie","je","ke","le","firstChild","me","textContent","node","offset","nextSibling","ne","contentEditable","oe","pe","select","qe","re","se","te","ue","selectionStart","end","selectionEnd","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","ve","onSelect","xe","ref","pendingProps","memoizedState","updateQueue","memoizedProps","mode","lastEffect","firstEffect","nextEffect","expirationTime","ze","Ae","isReactComponent","Be","children","Ce","De","pendingChildren","implementation","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","Ee","Fe","Ge","Ie","Je","Ke","baseState","first","last","callbackList","hasForceUpdate","isInitialized","capturedValues","Le","Set","Me","Ne","Oe","Pe","Qe","partialState","Re","isReplace","isForced","capturedValue","Se","Ue","Ve","_owner","_stringRef","refs","We","Xe","Map","z","B","q","u","t","Q","H","Ye","Ze","$e","pendingContext","context","Y","shouldSetTextContent","shouldDeprioritizeSubtree","pushHostContext","pushHostContainer","G","pushProvider","R","getMaskedContext","S","getUnmaskedContext","hasContextChanged","pushContextProvider","pushTopLevelContextObject","invalidateContextProvider","enterHydrationState","Wa","resetHydrationState","Cb","tryToClaimNextHydratableInstance","Jc","shouldComponentUpdate","isPureReactComponent","updater","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","enqueueReplaceState","getDerivedStateFromProps","cacheContext","isContextConsumer","isMounted","enqueueSetState","enqueueForceUpdate","adoptClassInstance","callGetDerivedStateFromProps","constructClassInstance","mountClassInstance","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","resumeMountClassInstance","updateClassInstance","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","Te","Kc","Lc","Db","Mc","Eb","beginWork","hydrate","_context","_calculateChangedBits","_currentValue","_changedBits","unstable_observedBits","cf","stack","suppressReactErrorLogging","ef","lf","I","Ya","Z","Nc","ya","has","ca","pendingCommitExpirationTime","Oc","Za","getDerivedStateFromCatch","componentDidCatch","ia","za","da","Fb","xg","ye","Ic","Pc","Gb","mg","Qc","lg","nextScheduledRoot","remainingExpirationTime","K","la","T","J","Hb","aa","P","$a","Ib","Aa","_onComplete","wg","Ba","Jb","finishedWork","firstBatch","_expirationTime","_defer","zg","w","ab","kg","we","gg","Ag","hg","ig","jg","timeRemaining","Bg","createCursor","isEmpty","checkThatStackIsEmpty","resetStackAfterFatalErrorInDev","kf","getChildHostContext","getRootHostContext","getHostContext","getRootHostContainer","popHostContainer","popHostContext","ff","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","getChildContext","contextTypes","isContextProvider","popContextProvider","popTopLevelContextObject","cursor","processChildContext","__reactInternalMemoizedMergedChildContext","findCurrentUnmaskedContext","hf","popProvider","jf","hydration","prepareToHydrateHostInstance","prepareToHydrateHostTextInstance","popHydrationState","canHydrateInstance","canHydrateTextInstance","getNextHydratableSibling","getFirstHydratableChild","hydrateInstance","hydrateTextInstance","gf","createInstance","createTextInstance","appendInitialChild","finalizeInitialChildren","prepareUpdate","persistence","completeWork","handler","af","throwException","unwindWork","unwindInterruptedWork","bf","componentWillUnmount","getPublicInstance","commitMount","commitUpdate","resetTextContent","commitTextUpdate","appendChildToContainer","insertBefore","insertInContainerBefore","removeChildFromContainer","commitBeforeMutationLifeCycles","__reactInternalSnapshotBeforeUpdate","commitResetTextContent","commitPlacement","commitDeletion","commitWork","commitLifeCycles","commitErrorLogging","componentStack","commitAttachRef","commitDetachRef","df","add","scheduleDeferredCallback","cancelDeferredCallback","prepareForCommit","resetAfterCommit","Rc","recalculateCurrentTime","computeExpirationForFiber","scheduleWork","requestWork","flushRoot","batchedUpdates","unbatchedUpdates","flushSync","flushControlled","deferredUpdates","syncUpdates","interactiveUpdates","flushInteractiveUpdates","computeUniqueAsyncExpiration","legacyContext","mf","createContainer","updateContainer","updateContainerAtExpirationTime","getPublicRootInstance","findHostInstance","findHostInstanceWithNoPortals","Cd","injectIntoDevTools","findFiberByHostInstance","__REACT_DEVTOOLS_GLOBAL_HOOK__","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","He","findHostInstanceByFiber","nf","default","of","pf","rf","sf","tf","uf","requestIdleCallback","cancelIdleCallback","vf","wf","xf","yf","zf","Af","Bf","Cf","didTimeout","Df","Ef","postMessage","Gf","Children","Ff","Hf","selected","defaultSelected","If","wasMultiple","multiple","Jf","dangerouslySetInnerHTML","Kf","Lf","Mf","Nf","html","mathml","Of","Pf","Qf","Rf","namespaceURI","MSApp","execUnsafeLocalFunction","Sf","lastChild","nodeValue","Tf","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeMiterlimit","strokeOpacity","Uf","Vf","setProperty","charAt","Wf","menuitem","area","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","Xf","Yf","Zf","$f","ag","bg","createTextNode","cg","__html","onClick","onclick","dg","eg","fg","ng","og","setInitialProperties","diffProperties","updateProperties","diffHydratedProperties","diffHydratedText","warnForUnmatchedText","warnForDeletedHydratableElement","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","querySelectorAll","stringify","form","pg","qg","rg","X","_callbacks","_next","_hasChildren","_didComplete","_children","sg","_didCommit","_onCommit","tg","_internalRoot","ug","vg","autoFocus","commit","unmount","legacy_renderSubtreeIntoContainer","createBatch","tagName","rangeCount","focusedElem","selectionRange","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","scrollTop","focus","hidden","didNotMatchHydratedContainerTextInstance","didNotMatchHydratedTextInstance","didNotHydrateContainerInstance","didNotHydrateInstance","didNotFindHydratableContainerInstance","didNotFindHydratableContainerTextInstance","didNotFindHydratableInstance","didNotFindHydratableTextInstance","Cg","Eg","_reactRootContainer","hasAttribute","Dg","Fg","qf","Gg","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_deferredUpdates","unstable_flushControlled","EventPluginHub","EventPluginRegistry","EventPropagators","ReactControlledComponent","ReactDOMComponentTree","ReactDOMEventListener","unstable_createRoot","bundleType","version","rendererPackageName","Hg","Ig","checkDCE","setState","forceUpdate","__self","__source","defaultProps","result","keyPrefix","=",":","escape","toArray","only","createRef","Component","PureComponent","createContext","_defaultValue","Provider","Consumer","forwardRef","Fragment","StrictMode","unstable_AsyncMode","cloneElement","createFactory","isValidElement","_characters","HelloMessage","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","resetQuiz","loadNewCharacter","cl","log","_react2","_characterList$index","charIndex","_state","constainerClassName","_hanziWriter2","summaryData","gElement","querySelector","_state2","class","className","xmlns","x1","y1","x2","y2","app","initialize","bindEvents","onDeviceReady","receivedEvent","mountNode","_reactDom2"],"mappings":"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","file":"index_react.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","export { charData as 我 } from './我'\r\nexport { charData as 你 } from './你'\r\nexport { charData as 谢 } from './谢'\r\nexport { charData as 口 } from './口'\r\nexport { charData as 日 } from './日'\r\nexport { charData as 白 } from './白'\r\nexport { charData as 百 } from './百'\r\nexport { charData as 人 } from './人'\r\nexport { charData as 中 } from './中'\r\nexport { charData as 王 } from './王'\r\nexport { charData as 玉 } from './玉'\r\nexport { charData as 国 } from './国'\r\nexport { charData as 美 } from './美'\r\nexport { charData as 英 } from './英'\r\nexport { charData as 是 } from './是'\r\nexport { charData as 丁 } from './丁'\r\nexport { charData as 订 } from './订'\r\nexport { charData as 手 } from './手'\r\nexport { charData as 打 } from './打'\r\nexport { charData as 拜 } from './拜'\r\nexport { charData as 哦 } from './哦'\r\nexport { charData as 不 } from './不'\r\nexport { charData as 饿 } from './饿'\r\nexport { charData as 要 } from './要'\r\nexport { charData as 巧 } from './巧'\r\nexport { charData as 克 } from './克'\r\nexport { charData as 力 } from './力'\r\nexport { charData as 咖 } from './咖'\r\nexport { charData as 啡 } from './啡'\r\nexport { charData as 帮 } from './帮'\r\nexport { charData as 大 } from './大'\r\nexport { charData as 小 } from './小'\r\nexport { charData as 刀 } from './刀'\r\nexport { charData as 夕 } from './夕'\r\nexport { charData as 多 } from './多'\r\nexport { charData as 少 } from './少'\r\nexport { charData as 钱 } from './钱'\r\nexport { charData as 土 } from './土'\r\nexport { charData as 块 } from './块'\r\nexport { charData as 也 } from './也'\r\nexport { charData as 他 } from './他'\r\nexport { charData as 她 } from './她'\r\nexport { charData as 它 } from './它'\r\nexport { charData as 个 } from './个'\r\nexport { charData as 那 } from './那'\r\nexport { charData as 两 } from './两'\r\nexport { charData as 门 } from './门'\r\nexport { charData as 都 } from './都'\r\nexport { charData as 八 } from './八'\r\nexport { charData as 儿 } from './儿'\r\nexport { charData as 四 } from './四'\r\nexport { charData as 死 } from './死'\r\nexport { charData as 子 } from './子'\r\nexport { charData as 月 } from './月'\r\nexport { charData as 半 } from './半'\r\nexport { charData as 胖 } from './胖'\r\nexport { charData as 孩 } from './孩'\r\nexport { charData as 好 } from './好'\r\nexport { charData as 艮 } from './艮'\r\nexport { charData as 很 } from './很'\r\nexport { charData as 恨 } from './恨'\r\nexport { charData as 五 } from './五'\r\nexport { charData as 六 } from './六'\r\nexport { charData as 七 } from './七'\r\nexport { charData as 九 } from './九'\r\nexport { charData as 十 } from './十'\r\nexport { charData as 马 } from './马'\r\nexport { charData as 妈 } from './妈'\r\nexport { charData as 骂 } from './骂'\r\nexport { charData as 吗 } from './吗'\r\nexport { charData as 呢 } from './呢'\r\nexport { charData as 巴 } from './巴'\r\nexport { charData as 吧 } from './吧'\r\nexport { charData as 可 } from './可'\r\nexport { charData as 以 } from './以'\r\nexport { charData as 父 } from './父'\r\nexport { charData as 爸 } from './爸'\r\nexport { charData as 姐 } from './姐'\r\nexport { charData as 且 } from './且'\r\nexport { charData as 哥 } from './哥'\r\nexport { charData as 帅 } from './帅'\r\nexport { charData as 弟 } from './弟'\r\nexport { charData as 未 } from './未'\r\nexport { charData as 妹 } from './妹'\r\nexport { charData as 叫 } from './叫'\r\nexport { charData as 教 } from './教'\r\nexport { charData as 什 } from './什'\r\nexport { charData as 么 } from './么'\r\nexport { charData as 字 } from './字'\r\nexport { charData as 名 } from './名'\r\nexport { charData as 为 } from './为'\r\nexport { charData as 因 } from './因'\r\nexport { charData as 所 } from './所'\r\nexport { charData as 包 } from './包'\r\nexport { charData as 句 } from './句'\r\nexport { charData as 狗 } from './狗'\r\nexport { charData as 田 } from './田'\r\nexport { charData as 猫 } from './猫'\r\nexport { charData as 的 } from './的'\r\nexport { charData as 山 } from './山'\r\nexport { charData as 岁 } from './岁'\r\nexport { charData as 心 } from './心'\r\nexport { charData as 闷 } from './闷'\r\nexport { charData as 您 } from './您'\r\nexport { charData as 怕 } from './怕'\r\nexport { charData as 开 } from './开'\r\nexport { charData as 始 } from './始'\r\nexport { charData as 关 } from './关'\r\nexport { charData as 哈 } from './哈'","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","export const charData = \n{\"strokes\": [\"M 272 567 Q 306 613 342 669 Q 370 718 395 743 Q 405 753 400 769 Q 396 782 365 808 Q 337 827 316 828 Q 297 827 305 802 Q 318 769 306 741 Q 267 647 207 560 Q 150 476 72 385 Q 60 375 58 367 Q 54 355 70 358 Q 82 359 109 384 Q 155 421 213 493 Q 226 509 241 527 L 272 567 Z\", \"M 241 527 Q 262 506 258 375 Q 258 374 258 370 Q 254 253 221 135 Q 215 114 224 80 Q 236 44 248 32 Q 267 16 279 44 Q 294 86 294 134 Q 303 420 314 485 Q 321 515 295 543 Q 289 549 272 567 C 251 589 227 553 241 527 Z\", \"M 521 560 Q 561 621 602 708 Q 620 751 638 773 Q 645 786 639 799 Q 633 811 602 830 Q 572 846 554 843 Q 535 839 546 817 Q 561 795 552 757 Q 513 619 407 448 Q 398 436 397 430 Q 394 418 409 423 Q 439 432 503 532 L 521 560 Z\", \"M 503 532 Q 527 510 555 520 Q 795 608 782 549 Q 783 543 743 468 Q 736 458 741 453 Q 745 447 756 459 Q 852 532 894 549 Q 904 552 905 561 Q 906 574 876 592 Q 852 605 828 621 Q 800 637 783 630 Q 686 590 521 560 C 492 555 479 550 503 532 Z\", \"M 568 72 Q 531 81 494 91 Q 482 94 483 86 Q 484 79 494 71 Q 569 7 596 -33 Q 611 -49 626 -36 Q 659 -3 661 82 Q 655 149 655 345 Q 656 382 667 407 Q 676 426 659 439 Q 634 461 604 470 Q 585 477 577 469 Q 571 462 582 447 Q 619 384 603 127 Q 597 82 589 74 Q 582 67 568 72 Z\", \"M 444 320 Q 419 262 385 208 Q 364 180 381 144 Q 388 128 409 139 Q 460 181 468 264 Q 472 295 467 319 Q 463 328 456 328 Q 449 327 444 320 Z\", \"M 738 307 Q 789 249 847 168 Q 860 146 876 139 Q 885 138 893 146 Q 908 159 900 204 Q 891 264 743 338 Q 734 345 731 332 Q 728 319 738 307 Z\"], \"medians\": [[[317, 812], [342, 786], [353, 759], [303, 663], [249, 577], [181, 485], [93, 386], [68, 367]], [[273, 558], [274, 525], [285, 495], [284, 441], [273, 243], [256, 123], [260, 41]], [[556, 828], [574, 817], [595, 783], [584, 746], [539, 640], [481, 531], [428, 453], [406, 431]], [[513, 532], [704, 585], [796, 597], [813, 585], [827, 563], [798, 519], [746, 460]], [[586, 463], [615, 438], [632, 412], [627, 73], [616, 41], [604, 30], [558, 47], [490, 85]], [[455, 316], [437, 243], [397, 151]], [[742, 326], [812, 265], [856, 216], [871, 190], [878, 154]]], \"radStrokes\": [0, 1]}","export const charData = \n{\"strokes\": [\"M 350 571 Q 380 593 449 614 Q 465 615 468 623 Q 471 633 458 643 Q 439 656 396 668 Q 381 674 370 672 Q 363 668 363 657 Q 364 621 200 527 Q 196 518 201 516 Q 213 516 290 546 Q 303 550 316 556 L 350 571 Z\", \"M 584 466 Q 666 485 734 497 Q 746 496 754 511 Q 755 524 729 533 Q 693 554 622 527 Q 598 520 575 511 L 537 499 Q 518 495 500 488 Q 442 472 386 457 L 337 446 Q 327 446 179 416 Q 148 409 173 392 Q 212 365 241 376 Q 287 389 339 404 L 387 416 Q 460 438 545 457 L 584 466 Z\", \"M 386 457 Q 387 493 398 517 Q 405 535 390 548 Q 371 564 350 571 C 323 583 303 583 316 556 Q 315 556 316 555 Q 338 519 337 478 Q 337 462 337 446 L 339 404 Q 340 343 339 289 L 338 241 Q 337 180 334 133 Q 333 115 323 109 Q 317 105 250 119 Q 238 122 239 114 Q 240 108 249 100 Q 309 42 328 6 Q 341 -10 357 3 Q 390 36 390 126 Q 387 169 387 265 L 387 306 Q 387 355 387 416 L 386 457 Z\", \"M 339 289 Q 254 261 161 229 Q 139 222 101 221 Q 86 220 85 207 Q 84 192 94 184 Q 119 166 157 147 Q 169 144 182 154 Q 239 199 338 241 L 387 265 Q 477 314 484 318 Q 499 327 498 337 Q 492 343 479 340 Q 434 324 387 306 L 339 289 Z\", \"M 635 195 Q 690 75 797 -14 Q 876 -62 898 -47 Q 920 -37 914 3 Q 905 34 899 152 Q 900 174 894 178 Q 890 179 884 160 Q 857 75 838 60 Q 823 56 785 88 Q 710 155 670 226 L 644 279 Q 599 381 584 466 L 575 511 Q 547 659 576 752 Q 586 779 543 805 Q 509 827 489 825 Q 470 824 479 795 Q 503 752 507 707 Q 517 601 537 499 L 545 457 Q 573 334 612 245 L 635 195 Z\", \"M 612 245 Q 558 197 452 138 Q 442 132 448 128 Q 455 124 468 126 Q 523 135 574 160 Q 608 175 635 195 L 670 226 Q 706 260 747 317 Q 762 336 778 354 Q 788 361 785 374 Q 781 386 753 410 Q 734 428 723 428 Q 708 427 707 411 Q 701 354 644 279 L 612 245 Z\", \"M 687 669 Q 718 648 754 623 Q 770 613 786 615 Q 798 618 801 632 Q 802 648 789 678 Q 780 697 746 708 Q 665 726 651 715 Q 647 711 651 697 Q 655 687 687 669 Z\"], \"medians\": [[[458, 627], [392, 631], [336, 588], [274, 552], [258, 550], [253, 542], [220, 530], [212, 532], [203, 522]], [[174, 404], [215, 398], [241, 402], [672, 514], [742, 512]], [[323, 556], [351, 542], [365, 522], [361, 116], [340, 67], [246, 113]], [[100, 206], [124, 195], [163, 189], [492, 334]], [[492, 807], [537, 760], [538, 627], [569, 435], [612, 299], [676, 170], [717, 112], [779, 48], [817, 22], [859, 12], [880, 78], [891, 140], [886, 147], [894, 173]], [[723, 412], [737, 365], [664, 259], [594, 198], [489, 142], [454, 132]], [[657, 710], [750, 668], [781, 634]]], \"radStrokes\": [1, 4, 5, 6]}","import * as charData from './chars'\r\n\r\nexport const characterList = [\r\n{\r\n  character: '我',\r\n  pinyin: 'wǒ',\r\n  translation: 'I; me',\r\n  data: charData.我\r\n  },\r\n    {\r\n  character: '你',\r\n  pinyin: 'nǐ',\r\n  translation: 'you (singular)',\r\n  data: charData.你\r\n  },\r\n    {\r\n  character: '谢',\r\n  pinyin: 'xiè',\r\n  translation: 'thank; wither (plants); surname Xie',\r\n  data: charData.谢\r\n  },\r\n    {\r\n  character: '口',\r\n  pinyin: 'kǒu',\r\n  translation: 'mouth (Kangxi radical 30)',\r\n  data: charData.口\r\n  },\r\n    {\r\n  character: '日',\r\n  pinyin: 'rì',\r\n  translation: 'sun; day; date; time (Kangxi radical 72)',\r\n  data: charData.日\r\n  },\r\n    {\r\n  character: '白',\r\n  pinyin: 'bái',\r\n  translation: 'white; snowy; pure; bright; empty (Kangxi radical 106)',\r\n  data: charData.白\r\n  },\r\n    {\r\n  character: '百',\r\n  pinyin: 'bǎi',\r\n  translation: 'hundred',\r\n  data: charData.百\r\n  },\r\n    {\r\n  character: '人',\r\n  pinyin: 'rén',\r\n  translation: 'person; man; people (Kangxi radical 9)',\r\n  data: charData.人\r\n  },\r\n    {\r\n  character: '中',\r\n  pinyin: 'zhōng, zhòng',\r\n  translation: 'middle; among; China\\nto hit (the mark); be hit; receive',\r\n  data: charData.中\r\n  },\r\n    {\r\n  character: '王',\r\n  pinyin: 'wáng',\r\n  translation: 'king; (common surname) (Kangxi radical 96, variant)',\r\n  data: charData.王\r\n  },\r\n    {\r\n  character: '玉',\r\n  pinyin: 'yù',\r\n  translation: 'jade (Kangxi radical 96)',\r\n  data: charData.玉\r\n  },\r\n    {\r\n  character: '国',\r\n  pinyin: 'guó',\r\n  translation: 'country; state; nation',\r\n  data: charData.国\r\n  },\r\n    {\r\n  character: '美',\r\n  pinyin: 'měi',\r\n  translation: 'beautiful; America',\r\n  data: charData.美\r\n  },\r\n    {\r\n  character: '英',\r\n  pinyin: 'yīng',\r\n  translation: 'flower; hero; England',\r\n  data: charData.英\r\n  },\r\n    {\r\n  character: '是',\r\n  pinyin: 'shì',\r\n  translation: 'be',\r\n  data: charData.是\r\n  },\r\n    {\r\n  character: '丁',\r\n  pinyin: 'dīng',\r\n  translation: 'fourth; male adult; robust; cubes (of food); T-shaped; (4th Heavenly Stem)',\r\n  data: charData.丁\r\n  },\r\n    {\r\n  character: '订',\r\n  pinyin: 'dìng',\r\n  translation: 'agree upon; to reserve (seats, tickets, etc.); draw up (plans, contracts, etc.); bind together; subscribe to (a newspaper, etc.)',\r\n  data: charData.订\r\n  },\r\n    {\r\n  character: '手',\r\n  pinyin: 'shǒu',\r\n  translation: 'hand (Kangxi radical 64)',\r\n  data: charData.手\r\n  },\r\n    {\r\n  character: '打',\r\n  pinyin: 'dǎ, dá',\r\n  translation: 'to hit; to beat; to play; to type\\ndozen',\r\n  data: charData.打\r\n  },\r\n    {\r\n  character: '拜',\r\n  pinyin: 'bài',\r\n  translation: 'pay respect; pay a visit to; worship',\r\n  data: charData.拜\r\n  },\r\n    {\r\n  character: '哦',\r\n  pinyin: 'ò, ó, é',\r\n  translation: 'oh (indicates understanding)\\noh (indicates doubt)\\nto chant',\r\n  data: charData.哦\r\n  },\r\n    {\r\n  character: '不',\r\n  pinyin: 'bù',\r\n  translation: 'no; not',\r\n  data: charData.不\r\n  },\r\n    {\r\n  character: '饿',\r\n  pinyin: 'è',\r\n  translation: 'hungry',\r\n  data: charData.饿\r\n  },\r\n    {\r\n  character: '要',\r\n  pinyin: 'yào, yāo',\r\n  translation: 'to want; to need; will/shall; important\\ndemand; request',\r\n  data: charData.要\r\n  },\r\n    {\r\n  character: '巧',\r\n  pinyin: 'qiǎo',\r\n  translation: 'opportunely; coincidentally; skillful',\r\n  data: charData.巧\r\n  },\r\n    {\r\n  character: '克',\r\n  pinyin: 'kè',\r\n  translation: 'gram; overcome; restrain',\r\n  data: charData.克\r\n  },\r\n    {\r\n  character: '力',\r\n  pinyin: 'lì',\r\n  translation: 'power; force; strength (Kangxi radical 19)',\r\n  data: charData.力\r\n  },\r\n    {\r\n  character: '咖',\r\n  pinyin: 'kā, gā',\r\n  translation: '(phonetic \\ka\\, \\ga\\); coffee',\r\n  data: charData.咖\r\n  },\r\n    {\r\n  character: '啡',\r\n  pinyin: 'fēi',\r\n  translation: 'coffee',\r\n  data: charData.啡\r\n  },\r\n    {\r\n  character: '帮',\r\n  pinyin: 'bāng',\r\n  translation: 'to help; assist; group; gang',\r\n  data: charData.帮\r\n  },\r\n    {\r\n  character: '大',\r\n  pinyin: 'dà, dài',\r\n  translation: 'big; large; great (Kangxi radical 37)',\r\n  data: charData.大\r\n  },\r\n    {\r\n  character: '小',\r\n  pinyin: 'xiǎo',\r\n  translation: 'small; young (Kangxi radical 42)',\r\n  data: charData.小\r\n  },\r\n    {\r\n  character: '刀',\r\n  pinyin: 'dāo',\r\n  translation: 'knife; blade (Kangxi radical 18)',\r\n  data: charData.刀\r\n  },\r\n    {\r\n  character: '夕',\r\n  pinyin: 'xī',\r\n  translation: 'sunset; evening (Kangxi radical 36)',\r\n  data: charData.夕\r\n  },\r\n    {\r\n  character: '多',\r\n  pinyin: 'duō',\r\n  translation: 'many; much; a lot of; more than',\r\n  data: charData.多\r\n  },\r\n    {\r\n  character: '少',\r\n  pinyin: 'shǎo, shào',\r\n  translation: 'few; little; lack; lose\\nyoung',\r\n  data: charData.少\r\n  },\r\n    {\r\n  character: '钱',\r\n  pinyin: 'qián',\r\n  translation: 'money; coin; Chinese Surname',\r\n  data: charData.钱\r\n  },\r\n    {\r\n  character: '土',\r\n  pinyin: 'tǔ',\r\n  translation: 'earth; soil; land; local (Kangxi radical 32)',\r\n  data: charData.土\r\n  },\r\n    {\r\n  character: '块',\r\n  pinyin: 'kuài',\r\n  translation: 'lump; chunk (mw for pieces of soap, cake, cloth, units of currency, etc)',\r\n  data: charData.块\r\n  },\r\n    {\r\n  character: '也',\r\n  pinyin: 'yě',\r\n  translation: 'also; too',\r\n  data: charData.也\r\n  },\r\n    {\r\n  character: '他',\r\n  pinyin: 'tā',\r\n  translation: 'he; him',\r\n  data: charData.他\r\n  },\r\n    {\r\n  character: '她',\r\n  pinyin: 'tā',\r\n  translation: 'she',\r\n  data: charData.她\r\n  },\r\n    {\r\n  character: '它',\r\n  pinyin: 'tā',\r\n  translation: 'it',\r\n  data: charData.它\r\n  },\r\n    {\r\n  character: '个',\r\n  pinyin: 'ge, gè',\r\n  translation: 'general measure word\\nindividual',\r\n  data: charData.个\r\n  },\r\n    {\r\n  character: '那',\r\n  pinyin: 'nà, nèi',\r\n  translation: 'that; in that case; then',\r\n  data: charData.那\r\n  },\r\n    {\r\n  character: '两',\r\n  pinyin: 'liǎng',\r\n  translation: 'two (cardinal number); both; (unit of weight equal to 50 grams)',\r\n  data: charData.两\r\n  },\r\n    {\r\n  character: '门',\r\n  pinyin: 'mén',\r\n  translation: 'door; opening; gate; (mw for classes and languages) (Kangxi radical 169)',\r\n  data: charData.门\r\n  },\r\n    {\r\n  character: '都',\r\n  pinyin: 'dōu, dū',\r\n  translation: 'all; both\\ncapital; metropolis',\r\n  data: charData.都\r\n  },\r\n    {\r\n  character: '八',\r\n  pinyin: 'bā',\r\n  translation: 'eight (Kangxi radical 12)',\r\n  data: charData.八\r\n  },\r\n    {\r\n  character: '儿',\r\n  pinyin: 'ér',\r\n  translation: 'child; son (Kangxi radical 10);\\n(retroflex final)',\r\n  data: charData.儿\r\n  },\r\n    {\r\n  character: '四',\r\n  pinyin: 'sì',\r\n  translation: 'four',\r\n  data: charData.四\r\n  },\r\n    {\r\n  character: '死',\r\n  pinyin: 'sǐ',\r\n  translation: 'to die; dead; fixed; impassible; extremely',\r\n  data: charData.死\r\n  },\r\n    {\r\n  character: '子',\r\n  pinyin: 'zǐ, zi',\r\n  translation: 'son; child; 1st Earthly Branch (Kangxi radical 39); seed\\n(noun suffix)',\r\n  data: charData.子\r\n  },\r\n    {\r\n  character: '月',\r\n  pinyin: 'yuè',\r\n  translation: 'moon; month; (Kangxi radical 74: moon; Kangxi radical 130: flesh)',\r\n  data: charData.月\r\n  },\r\n    {\r\n  character: '半',\r\n  pinyin: 'bàn',\r\n  translation: 'half; semi-; incomplete',\r\n  data: charData.半\r\n  },\r\n    {\r\n  character: '胖',\r\n  pinyin: 'pàng',\r\n  translation: 'fat; plump',\r\n  data: charData.胖\r\n  },\r\n    {\r\n  character: '孩',\r\n  pinyin: 'hái',\r\n  translation: 'child; infant',\r\n  data: charData.孩\r\n  },\r\n    {\r\n  character: '好',\r\n  pinyin: 'hǎo, hào',\r\n  translation: 'good; well; nice; very; quite\\nbe fond of',\r\n  data: charData.好\r\n  },\r\n    {\r\n  character: '艮',\r\n  pinyin: 'gěn, gèn',\r\n  translation: 'blunt; straightforward; tough; chewy\\none of the Eight Trigrams, symbolizing mountain (Kangxi Radical 138)',\r\n  data: charData.艮\r\n  },\r\n    {\r\n  character: '很',\r\n  pinyin: 'hěn',\r\n  translation: 'very; rather; quite',\r\n  data: charData.很\r\n  },\r\n    {\r\n  character: '恨',\r\n  pinyin: 'hèn',\r\n  translation: 'hate; regret',\r\n  data: charData.恨\r\n  },\r\n    {\r\n  character: '五',\r\n  pinyin: 'wǔ',\r\n  translation: 'five',\r\n  data: charData.五\r\n  },\r\n    {\r\n  character: '六',\r\n  pinyin: 'liù',\r\n  translation: 'six',\r\n  data: charData.六\r\n  },\r\n    {\r\n  character: '七',\r\n  pinyin: 'qī',\r\n  translation: 'seven',\r\n  data: charData.七\r\n  },\r\n    {\r\n  character: '九',\r\n  pinyin: 'jiǔ',\r\n  translation: 'nine',\r\n  data: charData.九\r\n  },\r\n    {\r\n  character: '十',\r\n  pinyin: 'shí',\r\n  translation: 'ten (Kangxi radical 24)',\r\n  data: charData.十\r\n  },\r\n    {\r\n  character: '马',\r\n  pinyin: 'mǎ',\r\n  translation: 'horse (Kangxi radical 187)',\r\n  data: charData.马\r\n  },\r\n    {\r\n  character: '妈',\r\n  pinyin: 'mā',\r\n  translation: 'ma; mom',\r\n  data: charData.妈\r\n  },\r\n    {\r\n  character: '骂',\r\n  pinyin: 'mà',\r\n  translation: 'scold; curse; condemn; verbally abuse',\r\n  data: charData.骂\r\n  },\r\n    {\r\n  character: '吗',\r\n  pinyin: 'ma',\r\n  translation: '(question particle for yes/no questions)',\r\n  data: charData.吗\r\n  },\r\n    {\r\n  character: '呢',\r\n  pinyin: 'ne, ní',\r\n  translation: '(modal particle ending a question); how about...?; what about...?\\nwoolen cloth',\r\n  data: charData.呢\r\n  },\r\n    {\r\n  character: '巴',\r\n  pinyin: 'bā',\r\n  translation: '(phonetic); hope for; cling to; be near; a bar',\r\n  data: charData.巴\r\n  },\r\n    {\r\n  character: '吧',\r\n  pinyin: 'ba, bā',\r\n  translation: 'particle indicating polite suggestion;\\nonomatopoeia\\nbar (serving drinks, providing internet access, etc.)',\r\n  data: charData.吧\r\n  },\r\n    {\r\n  character: '可',\r\n  pinyin: 'kě',\r\n  translation: 'can; may; able to; but; approve; very',\r\n  data: charData.可\r\n  },\r\n    {\r\n  character: '以',\r\n  pinyin: 'yǐ',\r\n  translation: 'to use; according to; so as to; for; by',\r\n  data: charData.以\r\n  },\r\n    {\r\n  character: '父',\r\n  pinyin: 'fù',\r\n  translation: 'father (Kangxi radical 88)',\r\n  data: charData.父\r\n  },\r\n    {\r\n  character: '爸',\r\n  pinyin: 'bà',\r\n  translation: 'father; dad; pa',\r\n  data: charData.爸\r\n  },\r\n    {\r\n  character: '姐',\r\n  pinyin: 'jiě',\r\n  translation: 'elder sister',\r\n  data: charData.姐\r\n  },\r\n    {\r\n  character: '且',\r\n  pinyin: 'qiě',\r\n  translation: 'further; moreover; for the time being; about to ...',\r\n  data: charData.且\r\n  },\r\n    {\r\n  character: '哥',\r\n  pinyin: 'gē',\r\n  translation: 'elder brother',\r\n  data: charData.哥\r\n  },\r\n    {\r\n  character: '帅',\r\n  pinyin: 'shuài',\r\n  translation: 'handsome; graceful; commander-in-chief',\r\n  data: charData.帅\r\n  },\r\n    {\r\n  character: '弟',\r\n  pinyin: 'dì',\r\n  translation: 'younger brother',\r\n  data: charData.弟\r\n  },\r\n    {\r\n  character: '未',\r\n  pinyin: 'wèi',\r\n  translation: 'not yet; did not; have not (8th Earthly Branch)',\r\n  data: charData.未\r\n  },\r\n    {\r\n  character: '妹',\r\n  pinyin: 'mèi',\r\n  translation: 'younger sister',\r\n  data: charData.妹\r\n  },\r\n    {\r\n  character: '叫',\r\n  pinyin: 'jiào',\r\n  translation: 'cry; shout; call; to name; be called; to greet; to hire; to order',\r\n  data: charData.叫\r\n  },\r\n    {\r\n  character: '教',\r\n  pinyin: 'jiāo, jiào',\r\n  translation: 'to teach; instruct\\nreligion; teaching',\r\n  data: charData.教\r\n  },\r\n    {\r\n  character: '什',\r\n  pinyin: 'shén, shí',\r\n  translation: 'what\\nassorted; ten',\r\n  data: charData.什\r\n  },\r\n    {\r\n  character: '么',\r\n  pinyin: 'me, ma, yāo',\r\n  translation: '(interrogative or indefinite final particle)',\r\n  data: charData.么\r\n  },\r\n    {\r\n  character: '字',\r\n  pinyin: 'zì',\r\n  translation: 'word; letter; character',\r\n  data: charData.字\r\n  },\r\n    {\r\n  character: '名',\r\n  pinyin: 'míng',\r\n  translation: 'name; reputation; famous; (mw for people)',\r\n  data: charData.名\r\n  },\r\n    {\r\n  character: '为',\r\n  pinyin: 'wéi, wèi',\r\n  translation: 'to act (as); become; to mean\\nfor; because of; to; for the sake of; to do; to handle',\r\n  data: charData.为\r\n  },\r\n    {\r\n  character: '因',\r\n  pinyin: 'yīn',\r\n  translation: 'cause; reason; because; on account of',\r\n  data: charData.因\r\n  },\r\n    {\r\n  character: '所',\r\n  pinyin: 'suǒ',\r\n  translation: 'place; that which; (mw for houses, buildings, facilities)',\r\n  data: charData.所\r\n  },\r\n    {\r\n  character: '包',\r\n  pinyin: 'bāo',\r\n  translation: 'to cover; to wrap; to hold; include; bag; (mw for containers, packages, etc.)',\r\n  data: charData.包\r\n  },\r\n    {\r\n  character: '句',\r\n  pinyin: 'jù',\r\n  translation: '(mw for sentences or lines); clause; phrase',\r\n  data: charData.句\r\n  },\r\n    {\r\n  character: '狗',\r\n  pinyin: 'gǒu',\r\n  translation: 'dog',\r\n  data: charData.狗\r\n  },\r\n    {\r\n  character: '田',\r\n  pinyin: 'tián',\r\n  translation: 'field (Kangxi radical 102)， surname',\r\n  data: charData.田\r\n  },\r\n    {\r\n  character: '猫',\r\n  pinyin: 'māo',\r\n  translation: 'cat',\r\n  data: charData.猫\r\n  },\r\n    {\r\n  character: '的',\r\n  pinyin: 'de, dì, dí',\r\n  translation: '(possessive, modifying, or descriptive particle)',\r\n  data: charData.的\r\n  },\r\n    {\r\n  character: '山',\r\n  pinyin: 'shān',\r\n  translation: 'mountain; hill; peak (Kangxi radical 46)',\r\n  data: charData.山\r\n  },\r\n    {\r\n  character: '岁',\r\n  pinyin: 'suì',\r\n  translation: 'years old; age',\r\n  data: charData.岁\r\n  },\r\n    {\r\n  character: '心',\r\n  pinyin: 'xīn',\r\n  translation: 'heart; mind (Kangxi radical 61)',\r\n  data: charData.心\r\n  },\r\n    {\r\n  character: '闷',\r\n  pinyin: 'mēn, mèn',\r\n  translation: 'stuffy; muffled; cover tightly; to seal; shut indoors; keep silent\\nbored; melancholy; depressed; sealed; tightly closed',\r\n  data: charData.闷\r\n  },\r\n    {\r\n  character: '您',\r\n  pinyin: 'nín',\r\n  translation: 'you (polite)',\r\n  data: charData.您\r\n  },\r\n    {\r\n  character: '怕',\r\n  pinyin: 'pà',\r\n  translation: 'be afraid; fear',\r\n  data: charData.怕\r\n  },\r\n    {\r\n  character: '开',\r\n  pinyin: 'kāi',\r\n  translation: 'to open; to start; to turn on; to operate (a vehicle)',\r\n  data: charData.开\r\n  },\r\n    {\r\n  character: '始',\r\n  pinyin: 'shǐ',\r\n  translation: 'begin; start',\r\n  data: charData.始\r\n  },\r\n    {\r\n  character: '关',\r\n  pinyin: 'guān',\r\n  translation: 'to close; shut; concern; relationship; turn off; mountain pass',\r\n  data: charData.关\r\n  },\r\n    {\r\n  character: '哈',\r\n  pinyin: 'hā',\r\n  translation: 'exhale; sip; (sound of laughter)',\r\n  data: charData.哈\r\n  }\r\n]","/*!\n * Hanzi Writer v1.3.0\n * https://chanind.github.io/hanzi-writer\n */\nmodule.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction emptyFunc() {}\n\nvar performanceNow = global.performance && function () {\n  return global.performance.now();\n} || function () {\n  return Date.now();\n};\nvar requestAnimationFrame = global.requestAnimationFrame || function (callback) {\n  return setTimeout(function () {\n    return callback(performanceNow());\n  }, 1000 / 60);\n};\nvar cancelAnimationFrame = global.cancelAnimationFrame || clearTimeout;\n\n// Object.assign polyfill, because IE :/\nvar _assign = function _assign(target) {\n  var overrideTarget = Object(target);\n\n  for (var _len = arguments.length, overrides = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    overrides[_key - 1] = arguments[_key];\n  }\n\n  overrides.forEach(function (override) {\n    if (override != null) {\n      for (var key in override) {\n        if (Object.prototype.hasOwnProperty.call(override, key)) {\n          overrideTarget[key] = override[key];\n        }\n      }\n    }\n  });\n  return overrideTarget;\n};\n\nvar assign = Object.assign || _assign;\n\nvar arrLast = function arrLast(arr) {\n  return arr[arr.length - 1];\n};\n\nfunction copyAndMergeDeep(base, override) {\n  var output = assign({}, base);\n  for (var key in override) {\n    // eslint-disable-line guard-for-in\n    // skipping hasOwnProperty check for performance reasons - we shouldn't be passing any objects\n    // in here that aren't plain objects anyway and this is a hot code path\n    var baseVal = base[key];\n    var overrideVal = override[key];\n    if (baseVal === overrideVal) continue; // eslint-disable-line no-continue\n    if (baseVal && overrideVal && (typeof baseVal === 'undefined' ? 'undefined' : _typeof(baseVal)) === 'object' && (typeof overrideVal === 'undefined' ? 'undefined' : _typeof(overrideVal)) === 'object' && !Array.isArray(overrideVal)) {\n      output[key] = copyAndMergeDeep(baseVal, overrideVal);\n    } else {\n      output[key] = overrideVal;\n    }\n  }\n  return output;\n}\n\nfunction inflate(scope, obj) {\n  var parts = scope.split('.');\n  var final = {};\n  var current = final;\n  for (var i = 0; i < parts.length; i++) {\n    var cap = i === parts.length - 1 ? obj : {};\n    current[parts[i]] = cap;\n    current = cap;\n  }\n  return final;\n}\n\nfunction callIfExists(callback, arg) {\n  if (callback) callback(arg);\n  return arg;\n}\n\nvar count = 0;\nfunction counter() {\n  count++;\n  return count;\n}\n\nfunction average(arr) {\n  var sum = arr.reduce(function (acc, val) {\n    return val + acc;\n  }, 0);\n  return sum / arr.length;\n}\n\nfunction timeout() {\n  var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n  return new Promise(function (resolve, reject) {\n    setTimeout(resolve, duration);\n  });\n}\n\nfunction colorStringToVals(colorString) {\n  var normalizedColor = colorString.toUpperCase().trim();\n  // based on https://stackoverflow.com/a/21648508\n  if (/^#([A-F0-9]{3}){1,2}$/.test(normalizedColor)) {\n    var hexParts = normalizedColor.substring(1).split('');\n    if (hexParts.length === 3) {\n      hexParts = [hexParts[0], hexParts[0], hexParts[1], hexParts[1], hexParts[2], hexParts[2]];\n    }\n    var hexStr = '' + hexParts.join('');\n    return {\n      r: parseInt(hexStr.slice(0, 2), 16),\n      g: parseInt(hexStr.slice(2, 4), 16),\n      b: parseInt(hexStr.slice(4, 6), 16),\n      a: 1\n    };\n  }\n  var rgbMatch = normalizedColor.match(/^RGBA?\\((\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d*\\.?\\d+))?\\)$/);\n  if (rgbMatch) {\n    return {\n      r: parseInt(rgbMatch[1], 10),\n      g: parseInt(rgbMatch[2], 10),\n      b: parseInt(rgbMatch[3], 10),\n      a: parseFloat(rgbMatch[4] || 1, 10)\n    };\n  }\n  throw new Error('Invalid color: ' + colorString);\n}\n\nvar trim = function trim(string) {\n  return string.replace(/^\\s+/, '').replace(/\\s+$/, '');\n};\n\n// return a new array-like object with int keys where each key is item\n// ex: objRepeat({x: 8}, 3) === {0: {x: 8}, 1: {x: 8}, 2: {x: 8}}\nvar objRepeat = function objRepeat(item, times) {\n  var obj = {};\n  for (var i = 0; i < times; i++) {\n    obj[i] = item;\n  }\n  return obj;\n};\n\nmodule.exports = {\n  _assign: _assign,\n  arrLast: arrLast,\n  assign: assign,\n  average: average,\n  callIfExists: callIfExists,\n  cancelAnimationFrame: cancelAnimationFrame,\n  colorStringToVals: colorStringToVals,\n  copyAndMergeDeep: copyAndMergeDeep,\n  counter: counter,\n  emptyFunc: emptyFunc,\n  inflate: inflate,\n  objRepeat: objRepeat,\n  performanceNow: performanceNow,\n  requestAnimationFrame: requestAnimationFrame,\n  timeout: timeout,\n  trim: trim\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nvar _require = __webpack_require__(2),\n    round = _require.round;\n\nfunction createElm(elmType) {\n  return global.document.createElementNS('http://www.w3.org/2000/svg', elmType);\n}\n\nfunction attr(elm, name, value) {\n  elm.setAttributeNS(null, name, value);\n}\n\nfunction attrs(elm, attrsMap) {\n  Object.keys(attrsMap).forEach(function (attrName) {\n    return attr(elm, attrName, attrsMap[attrName]);\n  });\n}\n\nfunction getPathString(points) {\n  var close = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var start = round(points[0]);\n  var remainingPoints = points.slice(1);\n  var pathString = 'M ' + start.x + ' ' + start.y;\n  remainingPoints.forEach(function (point) {\n    var roundedPoint = round(point);\n    pathString += ' L ' + roundedPoint.x + ' ' + roundedPoint.y;\n  });\n  if (close) pathString += 'Z';\n  return pathString;\n}\n\nfunction removeElm(elm) {\n  if (elm) elm.parentNode.removeChild(elm);\n}\n\n// -------- CANVAS CLASS --------\n\nfunction Canvas(svg, defs) {\n  this.svg = svg;\n  this.defs = defs;\n}\n\nCanvas.prototype.createSubCanvas = function () {\n  var group = createElm('g');\n  this.svg.appendChild(group);\n  return new Canvas(group, this.defs);\n};\n\nCanvas.init = function (elmOrId) {\n  var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '100%';\n  var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '100%';\n\n  var svg = void 0;\n  var elm = elmOrId;\n  if (typeof elmOrId === 'string') {\n    elm = global.document.getElementById(elmOrId);\n  }\n  var nodeType = elm.nodeName.toUpperCase();\n  if (nodeType === 'SVG' || nodeType === 'G') {\n    svg = elm;\n  } else {\n    svg = createElm('svg');\n    elm.appendChild(svg);\n  }\n  attrs(svg, { width: width, height: height });\n  var defs = createElm('defs');\n  svg.appendChild(defs);\n  return new Canvas(svg, defs);\n};\n\nmodule.exports = { createElm: createElm, attrs: attrs, attr: attr, Canvas: Canvas, getPathString: getPathString, removeElm: removeElm };\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _require = __webpack_require__(0),\n    average = _require.average,\n    arrLast = _require.arrLast;\n\nvar subtract = function subtract(p1, p2) {\n  return { x: p1.x - p2.x, y: p1.y - p2.y };\n};\nvar magnitude = function magnitude(point) {\n  return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));\n};\nvar distance = function distance(point1, point2) {\n  return magnitude(subtract(point1, point2));\n};\nvar equals = function equals(point1, point2) {\n  return point1.x === point2.x && point1.y === point2.y;\n};\nvar round = function round(point) {\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n  var multiplier = precision * 10;\n  return {\n    x: Math.round(multiplier * point.x) / multiplier,\n    y: Math.round(multiplier * point.y) / multiplier\n  };\n};\n\nvar length = function length(points) {\n  var lastPoint = points[0];\n  var pointsSansFirst = points.slice(1);\n  return pointsSansFirst.reduce(function (acc, point) {\n    var dist = distance(point, lastPoint);\n    lastPoint = point;\n    return acc + dist;\n  }, 0);\n};\n\nvar cosineSimilarity = function cosineSimilarity(point1, point2) {\n  var rawDotProduct = point1.x * point2.x + point1.y * point2.y;\n  return rawDotProduct / magnitude(point1) / magnitude(point2);\n};\n\n// return a new point, p3, which is on the same line as p1 and p2, but distance away\n// from p2. p1, p2, p3 will always lie on the line in that order\nvar extendPointOnLine = function extendPointOnLine(p1, p2, dist) {\n  var vect = subtract(p2, p1);\n  var norm = dist / magnitude(vect);\n  return { x: p2.x + norm * vect.x, y: p2.y + norm * vect.y };\n};\n\n// based on http://www.kr.tuwien.ac.at/staff/eiter/et-archive/cdtr9464.pdf\nvar frechetDist = function frechetDist(curve1, curve2) {\n  var results = [];\n  for (var i = 0; i < curve1.length; i++) {\n    results.push([]);\n    for (var j = 0; j < curve2.length; j++) {\n      results[i].push(-1);\n    }\n  }\n\n  var recursiveCalc = function recursiveCalc(i, j) {\n    if (results[i][j] > -1) return results[i][j];\n    if (i === 0 && j === 0) {\n      results[i][j] = distance(curve1[0], curve2[0]);\n    } else if (i > 0 && j === 0) {\n      results[i][j] = Math.max(recursiveCalc(i - 1, 0), distance(curve1[i], curve2[0]));\n    } else if (i === 0 && j > 0) {\n      results[i][j] = Math.max(recursiveCalc(0, j - 1), distance(curve1[0], curve2[j]));\n    } else if (i > 0 && j > 0) {\n      results[i][j] = Math.max(Math.min(recursiveCalc(i - 1, j), recursiveCalc(i - 1, j - 1), recursiveCalc(i, j - 1)), distance(curve1[i], curve2[j]));\n    } else {\n      results[i][j] = Infinity;\n    }\n    return results[i][j];\n  };\n\n  return recursiveCalc(curve1.length - 1, curve2.length - 1);\n};\n\n// break up long segments in the curve into smaller segments of len maxLen or smaller\nvar subdivideCurve = function subdivideCurve(curve) {\n  var maxLen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.05;\n\n  var newCurve = curve.slice(0, 1);\n  curve.slice(1).forEach(function (point) {\n    var prevPoint = newCurve[newCurve.length - 1];\n    var segLen = distance(point, prevPoint);\n    if (segLen > maxLen) {\n      var numNewPoints = Math.ceil(segLen / maxLen);\n      var newSegLen = segLen / numNewPoints;\n      for (var i = 0; i < numNewPoints; i++) {\n        newCurve.push(extendPointOnLine(point, prevPoint, -1 * newSegLen * (i + 1)));\n      }\n    } else {\n      newCurve.push(point);\n    }\n  });\n  return newCurve;\n};\n\n// redraw the curve using numPoints equally spaced out along the length of the curve\nvar outlineCurve = function outlineCurve(curve) {\n  var numPoints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30;\n\n  var curveLen = length(curve);\n  var segmentLen = curveLen / (numPoints - 1);\n  var outlinePoints = [curve[0]];\n  var endPoint = arrLast(curve);\n  var remainingCurvePoints = curve.slice(1);\n  for (var i = 0; i < numPoints - 2; i++) {\n    var lastPoint = arrLast(outlinePoints);\n    var remainingDist = segmentLen;\n    var outlinePointFound = false;\n    while (!outlinePointFound) {\n      var nextPointDist = distance(lastPoint, remainingCurvePoints[0]);\n      if (nextPointDist < remainingDist) {\n        remainingDist -= nextPointDist;\n        lastPoint = remainingCurvePoints.shift();\n      } else {\n        var nextPoint = extendPointOnLine(lastPoint, remainingCurvePoints[0], remainingDist - nextPointDist);\n        outlinePoints.push(nextPoint);\n        outlinePointFound = true;\n      }\n    }\n  }\n  outlinePoints.push(endPoint);\n  return outlinePoints;\n};\n\n// translate and scale from https://en.wikipedia.org/wiki/Procrustes_analysis\nvar normalizeCurve = function normalizeCurve(curve) {\n  var outlinedCurve = outlineCurve(curve);\n  var meanX = average(outlinedCurve.map(function (point) {\n    return point.x;\n  }));\n  var meanY = average(outlinedCurve.map(function (point) {\n    return point.y;\n  }));\n  var mean = { x: meanX, y: meanY };\n  var translatedCurve = outlinedCurve.map(function (point) {\n    return subtract(point, mean);\n  });\n  var scale = Math.sqrt(average([Math.pow(translatedCurve[0].x, 2) + Math.pow(translatedCurve[0].y, 2), Math.pow(arrLast(translatedCurve).x, 2) + Math.pow(arrLast(translatedCurve).y, 2)]));\n  var scaledCurve = translatedCurve.map(function (point) {\n    return { x: point.x / scale, y: point.y / scale };\n  });\n  return subdivideCurve(scaledCurve);\n};\n\n// rotate around the origin\nvar rotate = function rotate(curve, theta) {\n  return curve.map(function (point) {\n    return {\n      x: Math.cos(theta) * point.x - Math.sin(theta) * point.y,\n      y: Math.sin(theta) * point.x + Math.cos(theta) * point.y\n    };\n  });\n};\n\n// remove intermediate points that are on the same line as the points to either side\nvar filterParallelPoints = function filterParallelPoints(points) {\n  if (points.length < 3) return points;\n  var filteredPoints = [points[0], points[1]];\n  points.slice(2).forEach(function (point, i) {\n    var numFilteredPoints = filteredPoints.length;\n    var curVect = subtract(point, filteredPoints[numFilteredPoints - 1]);\n    var prevVect = subtract(filteredPoints[numFilteredPoints - 1], filteredPoints[numFilteredPoints - 2]);\n    // this is the z coord of the cross-product. If this is 0 then they're parallel\n    var isParallel = curVect.y * prevVect.x - curVect.x * prevVect.y === 0;\n    if (isParallel) {\n      filteredPoints.pop();\n    }\n    filteredPoints.push(point);\n  });\n  return filteredPoints;\n};\n\nmodule.exports = {\n  round: round,\n  equals: equals,\n  distance: distance,\n  frechetDist: frechetDist,\n  length: length,\n  rotate: rotate,\n  subtract: subtract,\n  cosineSimilarity: cosineSimilarity,\n  outlineCurve: outlineCurve,\n  extendPointOnLine: extendPointOnLine,\n  filterParallelPoints: filterParallelPoints,\n  subdivideCurve: subdivideCurve,\n  normalizeCurve: normalizeCurve\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Mutation = __webpack_require__(5);\n\nvar _require = __webpack_require__(0),\n    objRepeat = _require.objRepeat;\n\nvar showStrokes = function showStrokes(charName, character, duration) {\n  return [new Mutation('character.' + charName + '.strokes', objRepeat({ opacity: 1, displayPortion: 1 }, character.strokes.length), { duration: duration, force: true })];\n};\n\nvar showCharacter = function showCharacter(charName, character, duration) {\n  return [new Mutation('character.' + charName, {\n    opacity: 1,\n    strokes: objRepeat({ opacity: 1, displayPortion: 1 }, character.strokes.length)\n  }, { duration: duration, force: true })];\n};\n\nvar hideCharacter = function hideCharacter(charName, character, duration) {\n  return [new Mutation('character.' + charName + '.opacity', 0, { duration: duration, force: true })].concat(showStrokes(charName, character, 0));\n};\n\nvar updateColor = function updateColor(colorName, colorVal, duration) {\n  return [new Mutation('options.' + colorName, colorVal, { duration: duration })];\n};\n\nvar animateStroke = function animateStroke(charName, stroke, speed) {\n  var strokeNum = stroke.strokeNum;\n  var duration = (stroke.getLength() + 600) / (3 * speed);\n  return [new Mutation('character.' + charName, {\n    opacity: 1,\n    strokes: _defineProperty({}, strokeNum, {\n      displayPortion: 0,\n      opacity: 1\n    })\n  }), new Mutation('character.' + charName + '.strokes.' + strokeNum + '.displayPortion', 1, { duration: duration })];\n};\n\nvar animateSingleStroke = function animateSingleStroke(charName, character, strokeNum, speed) {\n  var mutationStateFunc = function mutationStateFunc(state) {\n    var curCharState = state.character[charName];\n    var mutationState = {\n      opacity: 1,\n      strokes: {}\n    };\n    for (var i = 0; i < character.strokes.length; i++) {\n      mutationState.strokes[i] = {\n        opacity: curCharState.opacity * curCharState.strokes[i].opacity\n      };\n    }\n    return mutationState;\n  };\n  return [new Mutation('character.' + charName, mutationStateFunc)].concat(animateStroke(charName, character.strokes[strokeNum], speed));\n};\n\nvar showStroke = function showStroke(charName, strokeNum, duration) {\n  return [new Mutation('character.' + charName + '.strokes.' + strokeNum, {\n    displayPortion: 1,\n    opacity: 1\n  }, { duration: duration, force: true })];\n};\n\nvar animateCharacter = function animateCharacter(charName, character, fadeDuration, speed, delayBetweenStrokes) {\n  var mutations = hideCharacter(charName, character, fadeDuration);\n  mutations = mutations.concat(showStrokes(charName, character, 0));\n  mutations.push(new Mutation('character.' + charName, {\n    opacity: 1,\n    strokes: objRepeat({ opacity: 0 }, character.strokes.length)\n  }, { force: true }));\n  character.strokes.forEach(function (stroke, i) {\n    if (i > 0) mutations.push(new Mutation.Pause(delayBetweenStrokes));\n    mutations = mutations.concat(animateStroke(charName, stroke, speed));\n  });\n  return mutations;\n};\n\nvar animateCharacterLoop = function animateCharacterLoop(charName, character, fadeDuration, speed, delayBetweenStrokes, delayBetweenLoops) {\n  var mutations = animateCharacter(charName, character, fadeDuration, speed, delayBetweenStrokes);\n  mutations.push(new Mutation.Pause(delayBetweenLoops));\n  return mutations;\n};\n\nmodule.exports = {\n  showStrokes: showStrokes,\n  showCharacter: showCharacter,\n  hideCharacter: hideCharacter,\n  animateCharacter: animateCharacter,\n  animateCharacterLoop: animateCharacterLoop,\n  animateStroke: animateStroke,\n  animateSingleStroke: animateSingleStroke,\n  showStroke: showStroke,\n  updateColor: updateColor\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _require = __webpack_require__(0),\n    inflate = _require.inflate,\n    performanceNow = _require.performanceNow,\n    requestAnimationFrame = _require.requestAnimationFrame,\n    cancelAnimationFrame = _require.cancelAnimationFrame;\n\n// ------ Mutation class --------\n\nvar getPartialValues = function getPartialValues(startValues, endValues, progress) {\n  var target = {};\n  for (var key in endValues) {\n    // eslint-disable-line guard-for-in\n    // skipping hasOwnProperty check for performance reasons - we shouldn't be passing any objects\n    // in here that aren't plain objects anyway and this is a hot code path\n    var endValue = endValues[key];\n    var startValue = startValues[key];\n    if (endValue >= 0) {\n      target[key] = progress * (endValue - startValue) + startValue;\n    } else {\n      target[key] = getPartialValues(startValue, endValue, progress);\n    }\n  }\n  return target;\n};\n\nvar isAlreadyAtEnd = function isAlreadyAtEnd(startValues, endValues) {\n  for (var key in endValues) {\n    if (endValues.hasOwnProperty(key)) {\n      var endValue = endValues[key];\n      var startValue = startValues[key];\n      if (endValue >= 0) {\n        if (endValue !== startValue) return false;\n      } else if (!isAlreadyAtEnd(startValue, endValue)) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\n// from https://github.com/maxwellito/vivus\nvar ease = function ease(x) {\n  return -Math.cos(x * Math.PI) / 2 + 0.5;\n};\n\nfunction Mutation(scope, valuesOrCallable) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  this.scope = scope;\n  this._valuesOrCallable = valuesOrCallable;\n  this._duration = options.duration || 0;\n  this._force = options.force;\n  this._tickBound = this._tick.bind(this);\n}\n\nMutation.prototype.run = function (renderState) {\n  var _this = this;\n\n  if (!this._values) this._inflateValues(renderState);\n  if (this._duration === 0) renderState.updateState(this._values);\n  if (this._duration === 0 || isAlreadyAtEnd(renderState.state, this._values)) {\n    return Promise.resolve();\n  }\n  this._renderState = renderState;\n  this._startState = renderState.state;\n  this._startTime = performanceNow();\n  this._frameHandle = requestAnimationFrame(this._tickBound);\n  return new Promise(function (resolve) {\n    _this._resolve = resolve;\n  });\n};\n\nMutation.prototype._tick = function (timing) {\n  var progress = Math.min(1, (timing - this._startTime) / this._duration);\n  if (progress === 1) {\n    this._renderState.updateState(this._values);\n    this._frameHandle = null;\n    this.cancel(this._renderState);\n  } else {\n    var easedProgress = ease(progress);\n    this._renderState.updateState(getPartialValues(this._startState, this._values, easedProgress));\n    this._frameHandle = requestAnimationFrame(this._tickBound);\n  }\n};\n\nMutation.prototype._inflateValues = function (renderState) {\n  var values = this._valuesOrCallable;\n  if (typeof this._valuesOrCallable === 'function') {\n    values = this._valuesOrCallable(renderState.state);\n  }\n  this._values = inflate(this.scope, values);\n};\n\nMutation.prototype.cancel = function (renderState) {\n  if (this._resolve) this._resolve();\n  this._resolve = null;\n  if (this._frameHandle) cancelAnimationFrame(this._frameHandle);\n  this._frameHandle = null;\n  if (this._force) {\n    if (!this._values) this._inflateValues(renderState);\n    renderState.updateState(this._values);\n  }\n};\n\n// ------ Mutation.Pause Class --------\n\nfunction Pause(duration) {\n  this._duration = duration;\n}\n\nPause.prototype.run = function () {\n  var _this2 = this;\n\n  var timeoutPromise = new Promise(function (resolve) {\n    _this2._resolve = resolve;\n  });\n  this._timeout = setTimeout(function () {\n    return _this2.cancel();\n  }, this._duration);\n  return timeoutPromise;\n};\n\nPause.prototype.cancel = function () {\n  clearTimeout(this._timeout);\n  if (this._resolve) this._resolve();\n  this._resolve = false;\n};\n\nMutation.Pause = Pause;\n\n// -------------------------------------\n\n\nmodule.exports = Mutation;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nvar HanziWriterRenderer = __webpack_require__(7);\nvar RenderState = __webpack_require__(11);\nvar CharDataParser = __webpack_require__(12);\nvar Positioner = __webpack_require__(15);\nvar Quiz = __webpack_require__(16);\nvar svg = __webpack_require__(1);\nvar defaultCharDataLoader = __webpack_require__(20);\nvar LoadingManager = __webpack_require__(21);\nvar characterActions = __webpack_require__(4);\n\nvar _require = __webpack_require__(0),\n    assign = _require.assign,\n    callIfExists = _require.callIfExists,\n    trim = _require.trim,\n    colorStringToVals = _require.colorStringToVals;\n\nvar defaultOptions = {\n  charDataLoader: defaultCharDataLoader,\n  onLoadCharDataError: null,\n  onLoadCharDataSuccess: null,\n  showOutline: true,\n  showCharacter: true,\n\n  // positioning options\n\n  width: null,\n  height: null,\n  padding: 20,\n\n  // animation options\n\n  strokeAnimationSpeed: 1,\n  strokeFadeDuration: 400,\n  strokeHighlightDuration: 200,\n  strokeHighlightSpeed: 2,\n  delayBetweenStrokes: 1000,\n  delayBetweenLoops: 2000,\n\n  // colors\n\n  strokeColor: '#555',\n  radicalColor: null,\n  highlightColor: '#AAF',\n  outlineColor: '#DDD',\n  drawingColor: '#333',\n\n  // quiz options\n\n  leniency: 1,\n  showHintAfterMisses: 3,\n  highlightOnComplete: true,\n  highlightCompleteColor: null,\n\n  // undocumented obscure options\n\n  drawingFadeDuration: 300,\n  drawingWidth: 4,\n  strokeWidth: 2,\n  outlineWidth: 2\n};\n\nfunction HanziWriter() {\n  if (arguments.length > 0) {\n    var character = void 0;\n    var options = {};\n    var element = arguments.length <= 0 ? undefined : arguments[0];\n    if (arguments.length > 1) {\n      if (typeof (arguments.length <= 1 ? undefined : arguments[1]) === 'string') {\n        // eslint-disable-next-line\n        console.warn('Using new HanziWriter() to set a character is deprecated. Use HanziWriter.create() instead');\n        character = arguments.length <= 1 ? undefined : arguments[1];\n        options = (arguments.length <= 2 ? undefined : arguments[2]) || {};\n      } else {\n        options = arguments.length <= 1 ? undefined : arguments[1];\n      }\n    }\n    this._init(element, options);\n    if (character) {\n      this.setCharacter(character);\n    }\n  }\n}\n\n// ------ public API ------ //\n\nHanziWriter.prototype.showCharacter = function () {\n  var _this = this;\n\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  this._options.showCharacter = true;\n  return this._withData(function () {\n    return _this._renderState.run(characterActions.showCharacter('main', _this._character, typeof options.duration === 'number' ? options.duration : _this._options.strokeFadeDuration)).then(function (res) {\n      return callIfExists(options.onComplete, res);\n    });\n  });\n};\nHanziWriter.prototype.hideCharacter = function () {\n  var _this2 = this;\n\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  this._options.showCharacter = false;\n  return this._withData(function () {\n    return _this2._renderState.run(characterActions.hideCharacter('main', _this2._character, typeof options.duration === 'number' ? options.duration : _this2._options.strokeFadeDuration)).then(function (res) {\n      return callIfExists(options.onComplete, res);\n    });\n  });\n};\nHanziWriter.prototype.animateCharacter = function () {\n  var _this3 = this;\n\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  this.cancelQuiz();\n  return this._withData(function () {\n    return _this3._renderState.run(characterActions.animateCharacter('main', _this3._character, _this3._options.strokeFadeDuration, _this3._options.strokeAnimationSpeed, _this3._options.delayBetweenStrokes)).then(function (res) {\n      return callIfExists(options.onComplete, res);\n    });\n  });\n};\nHanziWriter.prototype.animateStroke = function (strokeNum) {\n  var _this4 = this;\n\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  this.cancelQuiz();\n  return this._withData(function () {\n    return _this4._renderState.run(characterActions.animateSingleStroke('main', _this4._character, strokeNum, _this4._options.strokeAnimationSpeed)).then(function (res) {\n      return callIfExists(options.onComplete, res);\n    });\n  });\n};\nHanziWriter.prototype.loopCharacterAnimation = function () {\n  var _this5 = this;\n\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  this.cancelQuiz();\n  return this._withData(function () {\n    return _this5._renderState.run(characterActions.animateCharacterLoop('main', _this5._character, _this5._options.strokeFadeDuration, _this5._options.strokeAnimationSpeed, _this5._options.delayBetweenStrokes, _this5._options.delayBetweenLoops), { loop: true });\n  });\n};\n\nHanziWriter.prototype.showOutline = function () {\n  var _this6 = this;\n\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  this._options.showOutline = true;\n  return this._withData(function () {\n    return _this6._renderState.run(characterActions.showCharacter('outline', _this6._character, typeof options.duration === 'number' ? options.duration : _this6._options.strokeFadeDuration)).then(function (res) {\n      return callIfExists(options.onComplete, res);\n    });\n  });\n};\n\nHanziWriter.prototype.hideOutline = function () {\n  var _this7 = this;\n\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  this._options.showOutline = false;\n  return this._withData(function () {\n    return _this7._renderState.run(characterActions.hideCharacter('outline', _this7._character, typeof options.duration === 'number' ? options.duration : _this7._options.strokeFadeDuration)).then(function (res) {\n      return callIfExists(options.onComplete, res);\n    });\n  });\n};\n\nHanziWriter.prototype.updateColor = function (colorName, colorVal) {\n  var _this8 = this;\n\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return this._withData(function () {\n    var duration = typeof options.duration === 'number' ? options.duration : _this8._options.strokeFadeDuration;\n    var fixedColorVal = colorVal;\n    // If we're removing radical color, tween it to the stroke color\n    if (colorName === 'radicalColor' && !colorVal) {\n      fixedColorVal = _this8._options.strokeColor;\n    }\n    var mappedColor = colorStringToVals(fixedColorVal);\n    _this8._options[colorName] = colorVal;\n    var mutation = characterActions.updateColor(colorName, mappedColor, duration);\n    // make sure to set radicalColor back to null after the transition finishes if val == null\n    if (colorName === 'radicalColor' && !colorVal) {\n      mutation = mutation.concat(characterActions.updateColor(colorName, null, 0));\n    }\n    return _this8._renderState.run(mutation).then(function (res) {\n      return callIfExists(options.onComplete, res);\n    });\n  });\n};\n\nHanziWriter.prototype.quiz = function () {\n  var _this9 = this;\n\n  var quizOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  this._withData(function () {\n    _this9.cancelQuiz();\n    _this9._quiz = new Quiz(_this9._character, _this9._renderState, _this9._positioner);\n    _this9._quiz.startQuiz(assign({}, _this9._options, quizOptions));\n  });\n};\n\nHanziWriter.prototype.cancelQuiz = function () {\n  if (this._quiz) {\n    this._quiz.cancel();\n    this._quiz = null;\n  }\n};\n\nHanziWriter.prototype.setCharacter = function (char) {\n  var _this10 = this;\n\n  this.cancelQuiz();\n  this._char = char;\n  if (this._hanziWriterRenderer) this._hanziWriterRenderer.destroy();\n  if (this._renderState) this._renderState.cancelAll();\n  this._hanziWriterRenderer = null;\n  this._withDataPromise = this._loadingManager.loadCharData(char).then(function (pathStrings) {\n    if (_this10._loadingManager.loadingFailed) return;\n\n    var charDataParser = new CharDataParser();\n    _this10._character = charDataParser.generateCharacter(char, pathStrings);\n    _this10._positioner = new Positioner(_this10._options);\n    var hanziWriterRenderer = new HanziWriterRenderer(_this10._character, _this10._positioner);\n    _this10._hanziWriterRenderer = hanziWriterRenderer;\n    _this10._renderState = new RenderState(_this10._character, _this10._options, function (nextState) {\n      hanziWriterRenderer.render(nextState);\n    });\n    _this10._hanziWriterRenderer.mount(_this10._canvas, _this10._renderState.state);\n    _this10._hanziWriterRenderer.render(_this10._renderState.state);\n  });\n  return this._withDataPromise;\n};\n\n// ------------- //\n\nHanziWriter.prototype._init = function (element, options) {\n  this._canvas = svg.Canvas.init(element, options.width, options.height);\n  if (this._canvas.svg.createSVGPoint) {\n    this._pt = this._canvas.svg.createSVGPoint();\n  }\n  this._options = this._assignOptions(options);\n  this._loadingManager = new LoadingManager(this._options);\n  this._setupListeners();\n  this._quiz = null;\n  return this;\n};\n\nHanziWriter.prototype._assignOptions = function (options) {\n  var mergedOptions = assign({}, defaultOptions, options);\n\n  // backfill strokeAnimationSpeed if deprecated strokeAnimationDuration is provided instead\n  if (options.strokeAnimationDuration && !options.strokeAnimationSpeed) {\n    mergedOptions.strokeAnimationSpeed = 500 / mergedOptions.strokeAnimationDuration;\n  }\n  if (options.strokeHighlightDuration && !options.strokeHighlightSpeed) {\n    mergedOptions.strokeHighlightSpeed = 500 / mergedOptions.strokeHighlightDuration;\n  }\n\n  if (!options.highlightCompleteColor) {\n    mergedOptions.highlightCompleteColor = mergedOptions.highlightColor;\n  }\n\n  return this._fillWidthAndHeight(mergedOptions);\n};\n\n// returns a new options object with width and height filled in if missing\nHanziWriter.prototype._fillWidthAndHeight = function (options) {\n  var filledOpts = assign({}, options);\n  if (filledOpts.width && !filledOpts.height) {\n    filledOpts.height = filledOpts.width;\n  } else if (filledOpts.height && !filledOpts.width) {\n    filledOpts.width = filledOpts.height;\n  } else if (!filledOpts.width && !filledOpts.height) {\n    var _canvas$svg$getBoundi = this._canvas.svg.getBoundingClientRect(),\n        width = _canvas$svg$getBoundi.width,\n        height = _canvas$svg$getBoundi.height;\n\n    var minDim = Math.min(width, height);\n    filledOpts.width = minDim;\n    filledOpts.height = minDim;\n  }\n  return filledOpts;\n};\n\nHanziWriter.prototype._withData = function (func) {\n  var _this11 = this;\n\n  // if this._loadingManager.loadingFailed, then loading failed before this method was called\n  if (this._loadingManager.loadingFailed) {\n    throw Error('Failed to load character data. Call setCharacter and try again.');\n  }\n  return this._withDataPromise.then(function () {\n    if (!_this11._loadingManager.loadingFailed) {\n      return func();\n    }\n  });\n};\n\nHanziWriter.prototype._setupListeners = function () {\n  var _this12 = this;\n\n  this._canvas.svg.addEventListener('mousedown', function (evt) {\n    if (_this12.isLoadingCharData || !_this12._quiz) return;\n    evt.preventDefault();\n    _this12._forwardToQuiz('startUserStroke', _this12._getMousePoint(evt));\n  });\n  this._canvas.svg.addEventListener('touchstart', function (evt) {\n    if (_this12.isLoadingCharData || !_this12._quiz) return;\n    evt.preventDefault();\n    _this12._forwardToQuiz('startUserStroke', _this12._getTouchPoint(evt));\n  });\n  this._canvas.svg.addEventListener('mousemove', function (evt) {\n    if (_this12.isLoadingCharData || !_this12._quiz) return;\n    evt.preventDefault();\n    _this12._forwardToQuiz('continueUserStroke', _this12._getMousePoint(evt));\n  });\n  this._canvas.svg.addEventListener('touchmove', function (evt) {\n    if (_this12.isLoadingCharData || !_this12._quiz) return;\n    evt.preventDefault();\n    _this12._forwardToQuiz('continueUserStroke', _this12._getTouchPoint(evt));\n  });\n\n  // TODO: fix\n  global.document.addEventListener('mouseup', function () {\n    return _this12._forwardToQuiz('endUserStroke');\n  });\n  global.document.addEventListener('touchend', function () {\n    return _this12._forwardToQuiz('endUserStroke');\n  });\n};\n\nHanziWriter.prototype._forwardToQuiz = function (method) {\n  var _quiz;\n\n  if (!this._quiz) return;\n\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  (_quiz = this._quiz)[method].apply(_quiz, args);\n};\n\nHanziWriter.prototype._getMousePoint = function (evt) {\n  if (this._pt) {\n    this._pt.x = evt.clientX;\n    this._pt.y = evt.clientY;\n    var localPt = this._pt.matrixTransform(this._canvas.svg.getScreenCTM().inverse());\n    return { x: localPt.x, y: localPt.y };\n  }\n  // fallback in case SVG matrix transforms aren't supported\n  var box = this._canvas.svg.getBoundingClientRect();\n  var x = evt.clientX - box.left;\n  var y = evt.clientY - box.top;\n  return { x: x, y: y };\n};\n\nHanziWriter.prototype._getTouchPoint = function (evt) {\n  if (this._pt) {\n    this._pt.x = evt.touches[0].clientX;\n    this._pt.y = evt.touches[0].clientY;\n    var localPt = this._pt.matrixTransform(this._canvas.svg.getScreenCTM().inverse());\n    return { x: localPt.x, y: localPt.y };\n  }\n  // fallback in case SVG matrix transforms aren't supported\n  var box = this._canvas.svg.getBoundingClientRect();\n  var x = evt.touches[0].clientX - box.left;\n  var y = evt.touches[0].clientY - box.top;\n  return { x: x, y: y };\n};\n\n// --- Static Public API --- //\n\nHanziWriter.create = function (element, character) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var writer = new HanziWriter(element, options);\n  writer.setCharacter(character);\n  return writer;\n};\n\nvar lastLoadingManager = null;\nvar lastLoadingOptions = null;\n\nHanziWriter.loadCharacterData = function (character) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var loadingManager = void 0;\n  if (lastLoadingManager && lastLoadingOptions === options) {\n    loadingManager = lastLoadingManager;\n  } else {\n    loadingManager = new LoadingManager(assign({}, defaultOptions, options));\n  }\n  lastLoadingManager = loadingManager;\n  lastLoadingOptions = options;\n  return loadingManager.loadCharData(character);\n};\n\nHanziWriter.getScalingTransform = function (width, height) {\n  var padding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  var positioner = new Positioner({ width: width, height: height, padding: padding });\n  return {\n    x: positioner.getXOffset(),\n    y: positioner.getYOffset(),\n    scale: positioner.getScale(),\n    transform: trim('\\n      translate(' + positioner.getXOffset() + ', ' + (positioner.getHeight() - positioner.getYOffset()) + ')\\n      scale(' + positioner.getScale() + ', ' + -1 * positioner.getScale() + ')\\n    ').replace(/\\s+/g, ' ')\n  };\n};\n\n// set up window.HanziWriter if we're in the browser\nif (typeof global.window !== 'undefined') {\n  // store whatever used to be called HanziWriter in case of a conflict\n  var previousHanziWriter = global.window.HanziWriter;\n\n  // add a jQuery-esque noConflict method to restore the previous global.window.HanziWriter if necessary\n  HanziWriter.noConflict = function () {\n    global.window.HanziWriter = previousHanziWriter;\n    return HanziWriter;\n  };\n\n  global.window.HanziWriter = HanziWriter;\n}\n\n// set up module.exports if we're in node/webpack\nif (true) {\n  module.exports = HanziWriter;\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar CharacterRenderer = __webpack_require__(8);\nvar UserStrokeRenderer = __webpack_require__(10);\n\nvar _require = __webpack_require__(0),\n    assign = _require.assign;\n\nvar svg = __webpack_require__(1);\n\nfunction HanziWriterRenderer(character, positioner) {\n  this._character = character;\n  this._positioner = positioner;\n  this._mainCharRenderer = new CharacterRenderer(character);\n  this._outlineCharRenderer = new CharacterRenderer(character);\n  this._highlightCharRenderer = new CharacterRenderer(character);\n  this._userStrokeRenderers = {};\n}\n\nHanziWriterRenderer.prototype.mount = function (canvas) {\n  var positionedCanvas = canvas.createSubCanvas();\n  var group = positionedCanvas.svg;\n  svg.attr(group, 'transform', '\\n    translate(' + this._positioner.getXOffset() + ', ' + (this._positioner.getHeight() - this._positioner.getYOffset()) + ')\\n    scale(' + this._positioner.getScale() + ', ' + -1 * this._positioner.getScale() + ')\\n  ');\n  this._outlineCharRenderer.mount(positionedCanvas);\n  this._mainCharRenderer.mount(positionedCanvas);\n  this._highlightCharRenderer.mount(positionedCanvas);\n  this._positionedCanvas = positionedCanvas;\n};\n\nHanziWriterRenderer.prototype.render = function (props) {\n  var _this = this;\n\n  this._outlineCharRenderer.render({\n    opacity: props.character.outline.opacity,\n    strokes: props.character.outline.strokes,\n    strokeColor: props.options.outlineColor\n  });\n  this._mainCharRenderer.render({\n    opacity: props.character.main.opacity,\n    strokes: props.character.main.strokes,\n    strokeColor: props.options.strokeColor,\n    radicalColor: props.options.radicalColor\n  });\n  this._highlightCharRenderer.render({\n    opacity: props.character.highlight.opacity,\n    strokes: props.character.highlight.strokes,\n    strokeColor: props.options.highlightColor\n  });\n\n  var userStrokes = props.userStrokes || {};\n  Object.keys(this._userStrokeRenderers).forEach(function (userStrokeId) {\n    if (!userStrokes[userStrokeId]) {\n      _this._userStrokeRenderers[userStrokeId].destroy();\n      delete _this._userStrokeRenderers[userStrokeId];\n    }\n  });\n\n  Object.keys(userStrokes).forEach(function (userStrokeId) {\n    if (!userStrokes[userStrokeId]) return;\n    var userStrokeProps = assign({\n      strokeWidth: props.options.drawingWidth,\n      strokeColor: props.options.drawingColor\n    }, userStrokes[userStrokeId]);\n    var strokeRenderer = _this._userStrokeRenderers[userStrokeId];\n    if (!strokeRenderer) {\n      strokeRenderer = new UserStrokeRenderer();\n      strokeRenderer.mount(_this._positionedCanvas, userStrokeProps);\n      _this._userStrokeRenderers[userStrokeId] = strokeRenderer;\n    }\n    strokeRenderer.render(userStrokeProps);\n  });\n};\n\nHanziWriterRenderer.prototype.destroy = function () {\n  svg.removeElm(this._positionedCanvas.svg);\n  this._positionedCanvas.defs.innerHTML = '';\n};\n\nmodule.exports = HanziWriterRenderer;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar StrokeRenderer = __webpack_require__(9);\n\nfunction CharacterRenderer(character) {\n  this._oldProps = {};\n  this.character = character;\n  this.strokeRenderers = this.character.strokes.map(function (stroke) {\n    return new StrokeRenderer(stroke);\n  });\n}\n\nCharacterRenderer.prototype.mount = function (canvas) {\n  var subCanvas = canvas.createSubCanvas();\n  this._group = subCanvas.svg;\n  this.strokeRenderers.forEach(function (strokeRenderer, i) {\n    strokeRenderer.mount(subCanvas);\n  });\n};\n\nCharacterRenderer.prototype.render = function (props) {\n  if (props === this._oldProps) return;\n  if (props.opacity !== this._oldProps.opacity) {\n    this._group.style.opacity = props.opacity;\n    if (props.opacity === 0) {\n      this._group.style.display = 'none';\n    } else if (this._oldProps.opacity === 0) {\n      this._group.style.display = 'initial';\n    }\n  }\n  var colorsChanged = !this._oldProps || props.strokeColor !== this._oldProps.strokeColor || props.radicalColor !== this._oldProps.radicalColor;\n  if (colorsChanged || props.strokes !== this._oldProps.strokes) {\n    for (var i = 0; i < this.strokeRenderers.length; i++) {\n      if (!colorsChanged && this._oldProps.strokes && props.strokes[i] === this._oldProps.strokes[i]) continue;\n      this.strokeRenderers[i].render({\n        strokeColor: props.strokeColor,\n        radicalColor: props.radicalColor,\n        opacity: props.strokes[i].opacity,\n        displayPortion: props.strokes[i].displayPortion\n      });\n    }\n  }\n  this._oldProps = props;\n};\n\nmodule.exports = CharacterRenderer;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _require = __webpack_require__(0),\n    counter = _require.counter;\n\nvar svg = __webpack_require__(1);\n\nvar _require2 = __webpack_require__(2),\n    extendPointOnLine = _require2.extendPointOnLine,\n    filterParallelPoints = _require2.filterParallelPoints;\n\nvar STROKE_WIDTH = 200;\n\n// take points on a path and move their start point backwards by distance\nvar extendStart = function extendStart(points, distance) {\n  if (points.length < 2) return points;\n  var p1 = points[1];\n  var p2 = points[0];\n  var newStart = extendPointOnLine(p1, p2, distance);\n  var extendedPoints = points.slice(1);\n  extendedPoints.unshift(newStart);\n  return extendedPoints;\n};\n\n// this is a stroke composed of several stroke parts\nfunction StrokeRenderer(stroke) {\n  this._oldProps = {};\n  this._stroke = stroke;\n  this._pathLength = stroke.getLength() + STROKE_WIDTH / 2;\n}\n\nStrokeRenderer.prototype.mount = function (canvas) {\n  this._animationPath = svg.createElm('path');\n  this._clip = svg.createElm('clipPath');\n  this._strokePath = svg.createElm('path');\n  var maskId = 'mask-' + counter();\n  svg.attr(this._clip, 'id', maskId);\n\n  svg.attr(this._strokePath, 'd', this._stroke.path);\n  this._animationPath.style.opacity = 0;\n  svg.attr(this._animationPath, 'clip-path', 'url(#' + maskId + ')');\n\n  var extendedMaskPoints = extendStart(filterParallelPoints(this._stroke.points), STROKE_WIDTH / 2);\n  svg.attr(this._animationPath, 'd', svg.getPathString(extendedMaskPoints));\n  svg.attrs(this._animationPath, {\n    stroke: '#FFFFFF',\n    'stroke-width': STROKE_WIDTH,\n    fill: 'none',\n    'stroke-linecap': 'round',\n    'stroke-linejoin': 'miter',\n    'stroke-dasharray': this._pathLength + ',' + this._pathLength\n  });\n\n  this._clip.appendChild(this._strokePath);\n  canvas.defs.appendChild(this._clip);\n  canvas.svg.appendChild(this._animationPath);\n  return this;\n};\n\nStrokeRenderer.prototype.render = function (props) {\n  if (props === this._oldProps) return;\n  if (props.displayPortion !== this._oldProps.displayPortion) {\n    this._animationPath.style.strokeDashoffset = this._getStrokeDashoffset(props.displayPortion);\n  }\n\n  var color = this._getColor(props);\n  if (color !== this._getColor(this._oldProps)) {\n    var r = color.r,\n        g = color.g,\n        b = color.b,\n        a = color.a;\n\n    svg.attrs(this._animationPath, { stroke: 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')' });\n  }\n\n  if (props.opacity !== this._oldProps.opacity) {\n    this._animationPath.style.opacity = props.opacity;\n  }\n  this._oldProps = props;\n};\n\nStrokeRenderer.prototype._getStrokeDashoffset = function (displayPortion) {\n  return this._pathLength * 0.999 * (1 - displayPortion);\n};\n\nStrokeRenderer.prototype._getColor = function (_ref) {\n  var strokeColor = _ref.strokeColor,\n      radicalColor = _ref.radicalColor;\n\n  return radicalColor && this._stroke.isInRadical ? radicalColor : strokeColor;\n};\n\nmodule.exports = StrokeRenderer;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar svg = __webpack_require__(1);\n\nfunction UserStrokeRenderer() {\n  this._oldProps = {};\n}\n\nUserStrokeRenderer.prototype.mount = function (canvas) {\n  this._path = svg.createElm('path');\n  canvas.svg.appendChild(this._path);\n};\n\nUserStrokeRenderer.prototype.render = function (props) {\n  if (props === this._oldProps) return;\n  if (props.strokeColor !== this._oldProps.strokeColor || props.strokeWidth !== this._oldProps.strokeWidth) {\n    var _props$strokeColor = props.strokeColor,\n        r = _props$strokeColor.r,\n        g = _props$strokeColor.g,\n        b = _props$strokeColor.b,\n        a = _props$strokeColor.a;\n\n    svg.attrs(this._path, {\n      fill: 'none',\n      stroke: 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')',\n      'stroke-width': props.strokeWidth,\n      'stroke-linecap': 'round',\n      'stroke-linejoin': 'round'\n    });\n  }\n  if (props.opacity !== this._oldProps.opacity) {\n    svg.attr(this._path, 'opacity', props.opacity);\n  }\n  if (props.points !== this._oldProps.points) {\n    svg.attr(this._path, 'd', svg.getPathString(props.points));\n  }\n  this._oldProps = props;\n};\n\nUserStrokeRenderer.prototype.destroy = function () {\n  svg.removeElm(this._path);\n};\n\nmodule.exports = UserStrokeRenderer;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _require = __webpack_require__(0),\n    copyAndMergeDeep = _require.copyAndMergeDeep,\n    colorStringToVals = _require.colorStringToVals;\n\nfunction RenderState(character, options, onStateChange) {\n  this._onStateChange = onStateChange;\n  this._mutationChains = [];\n  this.state = {\n    options: {\n      drawingFadeDuration: options.drawingFadeDuration,\n      drawingWidth: options.drawingWidth,\n      drawingColor: colorStringToVals(options.drawingColor),\n      strokeColor: colorStringToVals(options.strokeColor),\n      outlineColor: colorStringToVals(options.outlineColor),\n      radicalColor: colorStringToVals(options.radicalColor || options.strokeColor),\n      highlightColor: colorStringToVals(options.highlightColor)\n    },\n    character: {\n      main: {\n        opacity: options.showCharacter ? 1 : 0,\n        strokes: {}\n      },\n      outline: {\n        opacity: options.showOutline ? 1 : 0,\n        strokes: {}\n      },\n      highlight: {\n        opacity: 1,\n        strokes: {}\n      }\n    },\n    userStrokes: null\n  };\n  for (var i = 0; i < character.strokes.length; i++) {\n    this.state.character.main.strokes[i] = {\n      opacity: 1,\n      displayPortion: 1\n    };\n    this.state.character.outline.strokes[i] = {\n      opacity: 1,\n      displayPortion: 1\n    };\n    this.state.character.highlight.strokes[i] = {\n      opacity: 0,\n      displayPortion: 1\n    };\n  }\n}\n\nRenderState.prototype.updateState = function (stateChanges) {\n  var nextState = copyAndMergeDeep(this.state, stateChanges);\n  this._onStateChange(nextState, this.state);\n  this.state = nextState;\n};\n\nRenderState.prototype.run = function (mutations) {\n  var _this = this;\n\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var scopes = mutations.map(function (mut) {\n    return mut.scope;\n  }).filter(function (x) {\n    return x;\n  });\n  this.cancelMutations(scopes);\n  return new Promise(function (resolve) {\n    var mutationChain = {\n      _isActive: true,\n      _index: 0,\n      _resolve: resolve,\n      _mutations: mutations,\n      _loop: options.loop,\n      _scopes: scopes\n    };\n    _this._mutationChains.push(mutationChain);\n    _this._run(mutationChain);\n  });\n};\n\nRenderState.prototype._run = function (mutationChain) {\n  var _this2 = this;\n\n  if (!mutationChain._isActive) return;\n  var mutations = mutationChain._mutations;\n  if (mutationChain._index >= mutations.length) {\n    if (mutationChain._loop) {\n      mutationChain._index = 0; // eslint-disable-line no-param-reassign\n    } else {\n      mutationChain._isActive = false; // eslint-disable-line no-param-reassign\n      this._mutationChains = this._mutationChains.filter(function (chain) {\n        return chain !== mutationChain;\n      });\n      // The chain is done - resolve the promise to signal it finished successfully\n      mutationChain._resolve({ canceled: false });\n      return;\n    }\n  }\n\n  var activeMutation = mutationChain._mutations[mutationChain._index];\n  activeMutation.run(this).then(function () {\n    if (mutationChain._isActive) {\n      mutationChain._index++; // eslint-disable-line no-param-reassign\n      _this2._run(mutationChain);\n    }\n  });\n};\n\nRenderState.prototype.cancelMutations = function (scopes) {\n  var _this3 = this;\n\n  this._mutationChains.forEach(function (chain) {\n    chain._scopes.forEach(function (chainScope) {\n      scopes.forEach(function (scope) {\n        if (chainScope.indexOf(scope) >= 0 || scope.indexOf(chainScope) >= 0) {\n          _this3._cancelMutationChain(chain);\n        }\n      });\n    });\n  });\n};\n\nRenderState.prototype.cancelAll = function () {\n  this.cancelMutations(['']);\n};\n\nRenderState.prototype._cancelMutationChain = function (mutationChain) {\n  mutationChain._isActive = false; // eslint-disable-line no-param-reassign\n  for (var i = mutationChain._index; i < mutationChain._mutations.length; i++) {\n    mutationChain._mutations[i].cancel(this);\n  }\n  if (mutationChain._resolve) {\n    mutationChain._resolve({ canceled: true });\n  }\n  this._mutationChains = this._mutationChains.filter(function (chain) {\n    return chain !== mutationChain;\n  });\n};\n\nmodule.exports = RenderState;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar Stroke = __webpack_require__(13);\nvar Character = __webpack_require__(14);\n\nfunction CharDataParser() {}\n\nCharDataParser.prototype.generateCharacter = function (symbol, charJson) {\n  var strokes = this.generateStrokes(charJson);\n  return new Character(symbol, strokes);\n};\n\nCharDataParser.prototype.generateStrokes = function (charJson) {\n  var isInRadical = function isInRadical(strokeNum) {\n    return charJson.radStrokes && charJson.radStrokes.indexOf(strokeNum) >= 0;\n  };\n\n  return charJson.strokes.map(function (path, index) {\n    var points = charJson.medians[index].map(function (pointData) {\n      var _pointData = _slicedToArray(pointData, 2),\n          x = _pointData[0],\n          y = _pointData[1];\n\n      return { x: x, y: y };\n    });\n    return new Stroke(path, points, index, isInRadical(index));\n  });\n};\n\nmodule.exports = CharDataParser;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _require = __webpack_require__(2),\n    subtract = _require.subtract,\n    distance = _require.distance,\n    length = _require.length;\n\nfunction Stroke(path, points, strokeNum) {\n  var isInRadical = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  this.path = path;\n  this.points = points;\n  this.strokeNum = strokeNum;\n  this.isInRadical = isInRadical;\n}\n\nStroke.prototype.getStartingPoint = function () {\n  return this.points[0];\n};\n\nStroke.prototype.getEndingPoint = function () {\n  return this.points[this.points.length - 1];\n};\n\nStroke.prototype.getLength = function () {\n  return length(this.points);\n};\n\nStroke.prototype.getVectors = function () {\n  var lastPoint = this.points[0];\n  var pointsSansFirst = this.points.slice(1);\n  return pointsSansFirst.map(function (point) {\n    var vector = subtract(point, lastPoint);\n    lastPoint = point;\n    return vector;\n  });\n};\n\nStroke.prototype.getDistance = function (point) {\n  var distances = this.points.map(function (strokePoint) {\n    return distance(strokePoint, point);\n  });\n  return Math.min.apply(Math, distances);\n};\n\nStroke.prototype.getAverageDistance = function (points) {\n  var _this = this;\n\n  var totalDist = points.reduce(function (acc, point) {\n    return acc + _this.getDistance(point);\n  }, 0);\n  return totalDist / points.length;\n};\n\nmodule.exports = Stroke;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction Character(symbol, strokes) {\n  this.symbol = symbol;\n  this.strokes = strokes;\n}\n\nmodule.exports = Character;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// All makemeahanzi characters have the same bounding box\nvar CHARACTER_BOUNDS = [{ x: 0, y: -124 }, { x: 1024, y: 900 }];\n\nfunction Positioner(options) {\n  this._options = options;\n  this._calculateScaleAndOffset();\n}\n\nPositioner.prototype.convertExternalPoint = function (point) {\n  var x = (point.x - this._xOffset) / this._scale;\n  var y = (this.getHeight() - this._yOffset - point.y) / this._scale;\n  return { x: x, y: y };\n};\n\nPositioner.prototype.getXOffset = function () {\n  return this._xOffset;\n};\nPositioner.prototype.getYOffset = function () {\n  return this._yOffset;\n};\nPositioner.prototype.getScale = function () {\n  return this._scale;\n};\nPositioner.prototype.getHeight = function () {\n  return this._options.height;\n};\n\nPositioner.prototype._calculateScaleAndOffset = function () {\n  var bounds = CHARACTER_BOUNDS;\n  var preScaledWidth = bounds[1].x - bounds[0].x;\n  var preScaledHeight = bounds[1].y - bounds[0].y;\n  var effectiveWidth = this._options.width - 2 * this._options.padding;\n  var effectiveHeight = this._options.height - 2 * this._options.padding;\n  var scaleX = effectiveWidth / preScaledWidth;\n  var scaleY = effectiveHeight / preScaledHeight;\n\n  this._scale = Math.min(scaleX, scaleY);\n\n  var xCenteringBuffer = this._options.padding + (effectiveWidth - this._scale * preScaledWidth) / 2;\n  var yCenteringBuffer = this._options.padding + (effectiveHeight - this._scale * preScaledHeight) / 2;\n  this._xOffset = -1 * bounds[0].x * this._scale + xCenteringBuffer;\n  this._yOffset = -1 * bounds[0].y * this._scale + yCenteringBuffer;\n};\n\nmodule.exports = Positioner;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar strokeMatches = __webpack_require__(17);\nvar UserStroke = __webpack_require__(18);\n\nvar _require = __webpack_require__(0),\n    callIfExists = _require.callIfExists,\n    counter = _require.counter;\n\nvar quizActions = __webpack_require__(19);\nvar svg = __webpack_require__(1);\nvar geometry = __webpack_require__(2);\nvar characterActions = __webpack_require__(4);\n\nvar getDrawnPath = function getDrawnPath(userStroke) {\n  return {\n    pathString: svg.getPathString(userStroke.externalPoints),\n    points: userStroke.points.map(function (point) {\n      return geometry.round(point);\n    })\n  };\n};\n\nfunction Quiz(character, renderState, positioner) {\n  this._character = character;\n  this._renderState = renderState;\n  this._isActive = false;\n  this._positioner = positioner;\n}\n\nQuiz.prototype.startQuiz = function (options) {\n  this._isActive = true;\n  this._options = options;\n  this._currentStrokeIndex = 0;\n  this._numRecentMistakes = 0;\n  this._totalMistakes = 0;\n  this._drawnStrokes = [];\n  this._renderState.run(quizActions.startQuiz(this._character, options.strokeFadeDuration));\n};\n\nQuiz.prototype.startUserStroke = function (externalPoint) {\n  var point = this._positioner.convertExternalPoint(externalPoint);\n  if (!this._isActive) return null;\n  if (this._userStroke) return this.endUserStroke();\n  var strokeId = counter();\n  this._userStroke = new UserStroke(strokeId, point, externalPoint);\n  this._renderState.run(quizActions.startUserStroke(strokeId, point));\n};\n\nQuiz.prototype.continueUserStroke = function (externalPoint) {\n  if (!this._userStroke) return;\n  var point = this._positioner.convertExternalPoint(externalPoint);\n  this._userStroke.appendPoint(point, externalPoint);\n  var nextPoints = this._userStroke.points.slice(0);\n  this._renderState.run(quizActions.updateUserStroke(this._userStroke.id, nextPoints));\n};\n\nQuiz.prototype.endUserStroke = function () {\n  if (!this._userStroke) return;\n\n  this._renderState.run(quizActions.removeUserStroke(this._userStroke.id, this._options.drawingFadeDuration));\n  // skip single-point strokes\n  if (this._userStroke.points.length === 1) {\n    this._userStroke = null;\n    return;\n  }\n\n  var currentStroke = this._getCurrentStroke();\n  var isOutlineVisible = this._renderState.state.character.outline.opacity > 0;\n  var isMatch = strokeMatches(this._userStroke, this._character, this._currentStrokeIndex, {\n    isOutlineVisible: isOutlineVisible,\n    leniency: this._options.leniency\n  });\n\n  if (isMatch) {\n    this._handleSuccess(currentStroke);\n  } else {\n    this._handleFailure();\n    if (this._numRecentMistakes >= this._options.showHintAfterMisses) {\n      this._renderState.run(quizActions.highlightStroke(currentStroke, this._options.highlightColor, this._options.strokeHighlightSpeed));\n    }\n  }\n  this._userStroke = null;\n};\n\nQuiz.prototype.cancel = function () {\n  this._isActive = false;\n  if (this._userStroke) {\n    this._renderState.run(quizActions.removeUserStroke(this._userStroke.id, this._options.drawingFadeDuration));\n  }\n};\n\nQuiz.prototype._handleSuccess = function (stroke) {\n  callIfExists(this._options.onCorrectStroke, {\n    character: this._character.symbol,\n    strokeNum: this._currentStrokeIndex,\n    mistakesOnStroke: this._numRecentMistakes,\n    totalMistakes: this._totalMistakes,\n    strokesRemaining: this._character.strokes.length - this._currentStrokeIndex - 1,\n    drawnPath: getDrawnPath(this._userStroke)\n  });\n  var animation = characterActions.showStroke('main', this._currentStrokeIndex, this._options.strokeFadeDuration);\n  this._currentStrokeIndex += 1;\n  this._numRecentMistakes = 0;\n\n  if (this._currentStrokeIndex === this._character.strokes.length) {\n    this._isActive = false;\n    callIfExists(this._options.onComplete, {\n      character: this._character.symbol,\n      totalMistakes: this._totalMistakes\n    });\n    if (this._options.highlightOnComplete) {\n      animation = animation.concat(quizActions.highlightCompleteChar(this._character, this._options.highlightCompleteColor, this._options.strokeHighlightDuration * 2));\n    }\n  }\n  this._renderState.run(animation);\n};\n\nQuiz.prototype._handleFailure = function () {\n  this._numRecentMistakes += 1;\n  this._totalMistakes += 1;\n  callIfExists(this._options.onMistake, {\n    character: this._character.symbol,\n    strokeNum: this._currentStrokeIndex,\n    mistakesOnStroke: this._numRecentMistakes,\n    totalMistakes: this._totalMistakes,\n    strokesRemaining: this._character.strokes.length - this._currentStrokeIndex,\n    drawnPath: getDrawnPath(this._userStroke)\n  });\n};\n\nQuiz.prototype._getCurrentStroke = function () {\n  return this._character.strokes[this._currentStrokeIndex];\n};\n\nmodule.exports = Quiz;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _require = __webpack_require__(0),\n    average = _require.average,\n    assign = _require.assign;\n\nvar _require2 = __webpack_require__(2),\n    cosineSimilarity = _require2.cosineSimilarity,\n    equals = _require2.equals,\n    frechetDist = _require2.frechetDist,\n    distance = _require2.distance,\n    subtract = _require2.subtract,\n    normalizeCurve = _require2.normalizeCurve,\n    rotate = _require2.rotate,\n    length = _require2.length;\n\nvar AVG_DIST_THRESHOLD = 350; // bigger = more lenient\nvar COSINE_SIMILARITY_THRESHOLD = 0; // -1 to 1, smaller = more lenient\nvar START_AND_END_DIST_THRESHOLD = 250; // bigger = more lenient\nvar FRECHET_THRESHOLD = 0.40; // bigger = more lenient\nvar MIN_LEN_THRESHOLD = 0.35; // smalled = more lenient\n\nvar startAndEndMatches = function startAndEndMatches(points, closestStroke, leniency) {\n  var startingDist = distance(closestStroke.getStartingPoint(), points[0]);\n  var endingDist = distance(closestStroke.getEndingPoint(), points[points.length - 1]);\n  return startingDist <= START_AND_END_DIST_THRESHOLD * leniency && endingDist <= START_AND_END_DIST_THRESHOLD * leniency;\n};\n\n// returns a list of the direction of all segments in the line connecting the points\nvar getEdgeVectors = function getEdgeVectors(points) {\n  var vectors = [];\n  var lastPoint = points[0];\n  points.slice(1).forEach(function (point) {\n    vectors.push(subtract(point, lastPoint));\n    lastPoint = point;\n  });\n  return vectors;\n};\n\nvar directionMatches = function directionMatches(points, stroke) {\n  var edgeVectors = getEdgeVectors(points);\n  var strokeVectors = stroke.getVectors();\n  var similarities = edgeVectors.map(function (edgeVector) {\n    var strokeSimilarities = strokeVectors.map(function (strokeVector) {\n      return cosineSimilarity(strokeVector, edgeVector);\n    });\n    return Math.max.apply(Math, strokeSimilarities);\n  });\n  var avgSimilarity = average(similarities);\n  return avgSimilarity > COSINE_SIMILARITY_THRESHOLD;\n};\n\nvar lengthMatches = function lengthMatches(points, stroke, leniency) {\n  return leniency * (length(points) + 25) / (stroke.getLength() + 25) >= MIN_LEN_THRESHOLD;\n};\n\nvar stripDuplicates = function stripDuplicates(points) {\n  if (points.length < 2) return points;\n  var dedupedPoints = [points[0]];\n  points.slice(1).forEach(function (point) {\n    if (!equals(point, dedupedPoints[dedupedPoints.length - 1])) {\n      dedupedPoints.push(point);\n    }\n  });\n  return dedupedPoints;\n};\n\nvar SHAPE_FIT_ROTATIONS = [Math.PI / 16, Math.PI / 32, 0, -1 * Math.PI / 32, -1 * Math.PI / 16];\n\nvar shapeFit = function shapeFit(curve1, curve2, leniency) {\n  var normCurve1 = normalizeCurve(curve1, 2);\n  var normCurve2 = normalizeCurve(curve2, 2);\n  var minDist = Infinity;\n  SHAPE_FIT_ROTATIONS.forEach(function (theta) {\n    var dist = frechetDist(normCurve1, rotate(normCurve2, theta));\n    if (dist < minDist) {\n      minDist = dist;\n    }\n  });\n  return minDist <= FRECHET_THRESHOLD * leniency;\n};\n\nvar getMatchData = function getMatchData(points, stroke, options) {\n  var _options$leniency = options.leniency,\n      leniency = _options$leniency === undefined ? 1 : _options$leniency,\n      _options$isOutlineVis = options.isOutlineVisible,\n      isOutlineVisible = _options$isOutlineVis === undefined ? false : _options$isOutlineVis;\n\n  var avgDist = stroke.getAverageDistance(points);\n  var distMod = isOutlineVisible || stroke.strokeNum > 0 ? 0.5 : 1;\n  var withinDistThresh = avgDist <= AVG_DIST_THRESHOLD * distMod * leniency;\n  // short circuit for faster matching\n  if (!withinDistThresh) {\n    return { isMatch: false, avgDist: avgDist };\n  }\n  var startAndEndMatch = startAndEndMatches(points, stroke, leniency);\n  var directionMatch = directionMatches(points, stroke);\n  var shapeMatch = shapeFit(points, stroke.points, leniency);\n  var lengthMatch = lengthMatches(points, stroke, leniency);\n  return {\n    isMatch: withinDistThresh && startAndEndMatch && directionMatch && shapeMatch && lengthMatch,\n    avgDist: avgDist\n  };\n};\n\nvar strokeMatches = function strokeMatches(userStroke, character, strokeNum) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var points = stripDuplicates(userStroke.points);\n  if (points.length < 2) return null;\n\n  var strokeMatchData = getMatchData(points, character.strokes[strokeNum], options);\n  if (!strokeMatchData.isMatch) return false;\n\n  // if there is a better match among strokes the user hasn't drawn yet, the user probably drew the wrong stroke\n  var laterStrokes = character.strokes.slice(strokeNum + 1);\n  var closestMatchDist = strokeMatchData.avgDist;\n  for (var i = 0; i < laterStrokes.length; i++) {\n    var laterMatchData = getMatchData(points, laterStrokes[i], options);\n    if (laterMatchData.isMatch && laterMatchData.avgDist < closestMatchDist) {\n      closestMatchDist = laterMatchData.avgDist;\n    }\n  }\n  // if there's a better match, rather that returning false automatically, try reducing leniency instead\n  // if leniency is already really high we can allow some similar strokes to pass\n  if (closestMatchDist < strokeMatchData.avgDist) {\n    // adjust leniency between 0.3 and 0.6 depending on how much of a better match the new match is\n    var leniencyAdjustment = 0.6 * (closestMatchDist + strokeMatchData.avgDist) / (2 * strokeMatchData.avgDist);\n    var newLeniency = (options.leniency || 1) * leniencyAdjustment;\n    var adjustedOptions = assign({}, options, { leniency: newLeniency });\n    var adjustedStrokeMatchData = getMatchData(points, character.strokes[strokeNum], adjustedOptions);\n    return adjustedStrokeMatchData.isMatch;\n  }\n  return true;\n};\n\nmodule.exports = strokeMatches;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction UserStroke(id, startingPoint, startingExternalPoint) {\n  this.id = id;\n  this.points = [startingPoint];\n  this.externalPoints = [startingExternalPoint];\n}\n\nUserStroke.prototype.appendPoint = function (point, externalPoint) {\n  this.points.push(point);\n  this.externalPoints.push(externalPoint);\n};\n\nmodule.exports = UserStroke;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Mutation = __webpack_require__(5);\nvar characterActions = __webpack_require__(4);\n\nvar _require = __webpack_require__(0),\n    objRepeat = _require.objRepeat;\n\nvar startQuiz = function startQuiz(character, fadeDuration) {\n  return characterActions.hideCharacter('main', character, fadeDuration).concat([new Mutation('character.highlight', {\n    opacity: 1,\n    strokes: objRepeat({ opacity: 0 }, character.strokes.length)\n  }, { force: true }), new Mutation('character.main', {\n    opacity: 1,\n    strokes: objRepeat({ opacity: 0 }, character.strokes.length)\n  }, { force: true })]);\n};\n\nvar startUserStroke = function startUserStroke(id, point) {\n  return [new Mutation('quiz.activeUserStrokeId', id, { force: true }), new Mutation('userStrokes.' + id, {\n    points: [point],\n    opacity: 1\n  }, { force: true })];\n};\n\nvar updateUserStroke = function updateUserStroke(userStrokeId, points) {\n  return [new Mutation('userStrokes.' + userStrokeId + '.points', points, { force: true })];\n};\n\nvar removeUserStroke = function removeUserStroke(userStrokeId, duration) {\n  return [new Mutation('userStrokes.' + userStrokeId + '.opacity', 0, { duration: duration }), new Mutation('userStrokes.' + userStrokeId, null, { force: true })];\n};\n\nvar highlightStroke = function highlightStroke(stroke, color, speed) {\n  var strokeNum = stroke.strokeNum;\n  var duration = (stroke.getLength() + 600) / (3 * speed);\n  return [new Mutation('character.highlight.strokeColor', color), new Mutation('character.highlight', {\n    opacity: 1,\n    strokes: _defineProperty({}, strokeNum, {\n      displayPortion: 0,\n      opacity: 0\n    })\n  }), new Mutation('character.highlight.strokes.' + strokeNum, {\n    displayPortion: 1,\n    opacity: 1\n  }, { duration: duration }), new Mutation('character.highlight.strokes.' + strokeNum + '.opacity', 0, { duration: duration })];\n};\n\nvar highlightCompleteChar = function highlightCompleteChar(character, color, duration) {\n  return [new Mutation('character.highlight.strokeColor', color)].concat(characterActions.hideCharacter('highlight', character)).concat(characterActions.showCharacter('highlight', character, duration / 2)).concat(characterActions.hideCharacter('highlight', character, duration / 2));\n};\n\nmodule.exports = {\n  highlightCompleteChar: highlightCompleteChar,\n  highlightStroke: highlightStroke,\n  startQuiz: startQuiz,\n  startUserStroke: startUserStroke,\n  updateUserStroke: updateUserStroke,\n  removeUserStroke: removeUserStroke\n};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\n// corresponds to the integer in the gh-pages branch under the cdn folder\n// make sure to check out a new version of the master branch in gh-pages when changing the data format\n// otherwise this may break any existing hanzi-writer deploys in the wild\nvar VERSION = '2.0';\nvar getCharDataUrl = function getCharDataUrl(char) {\n  return 'https://cdn.jsdelivr.net/npm/hanzi-writer-data@' + VERSION + '/' + char + '.json';\n};\n\nmodule.exports = function (char, onLoad, onError) {\n  // load char data from hanziwriter.org cdn (currently hosted on github pages)\n  var xhr = new global.XMLHttpRequest();\n  if (xhr.overrideMimeType) {\n    // IE 9 and 10 don't seem to support this...\n    xhr.overrideMimeType('application/json');\n  }\n  xhr.open('GET', getCharDataUrl(char), true);\n  xhr.onerror = function (event) {\n    onError(xhr, event);\n  };\n  xhr.onreadystatechange = function () {\n    // TODO: error handling\n    if (xhr.readyState !== 4) return;\n\n    if (xhr.status === 200) {\n      onLoad(JSON.parse(xhr.responseText));\n    } else if (xhr.status !== 0 && onError) {\n      onError(xhr);\n    }\n  };\n  xhr.send(null);\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _require = __webpack_require__(0),\n    callIfExists = _require.callIfExists;\n\nfunction LoadingManager(options) {\n  this._loadCounter = 0;\n  this._options = options;\n  this._isLoading = false;\n  this._loadingPromise = null;\n\n  // use this to attribute to determine if there was a problem with loading\n  this.loadingFailed = false;\n}\n\nLoadingManager.prototype._debouncedLoad = function (char, count) {\n  var _this = this;\n\n  // these wrappers ignore all responses except the most recent.\n  var wrappedResolve = function wrappedResolve(data) {\n    if (count === _this._loadCounter) _this._resolve(data);\n  };\n  var wrappedReject = function wrappedReject(reason) {\n    if (count === _this._loadCounter) _this._reject(reason);\n  };\n\n  var returnedData = this._options.charDataLoader(char, wrappedResolve, wrappedReject);\n  if (returnedData) wrappedResolve(returnedData);\n};\n\nLoadingManager.prototype._setupLoadingPromise = function () {\n  var _this2 = this;\n\n  this._loadingPromise = new Promise(function (resolve, reject) {\n    _this2._resolve = resolve;\n    _this2._reject = reject;\n  }).then(function (data) {\n    _this2._isLoading = false;\n    callIfExists(_this2._options.onLoadCharDataSuccess, data);\n    return data;\n  }, function (reason) {\n    _this2._isLoading = false;\n    _this2.loadingFailed = true;\n    callIfExists(_this2._options.onLoadCharDataError, reason);\n    // If error callback wasn't provided, throw an error so the developer will be aware something went wrong\n    if (!_this2._options.onLoadCharDataError) {\n      if (reason instanceof Error) throw reason;\n      var err = new Error('Failed to load char data for ' + _this2._loadingChar);\n      err.reason = reason;\n      throw err;\n    }\n  });\n};\n\nLoadingManager.prototype.loadCharData = function (char) {\n  this._loadingChar = char;\n  if (!this._isLoading) {\n    this._setupLoadingPromise();\n  }\n  this.loadingFailed = false;\n  this._isLoading = true;\n  this._loadCounter++;\n  this._debouncedLoad(char, this._loadCounter);\n  return this._loadingPromise;\n};\n\nmodule.exports = LoadingManager;\n\n/***/ })\n/******/ ]);","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;","/** @license React v16.3.2\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var ba=require(\"fbjs/lib/invariant\"),ea=require(\"react\"),m=require(\"fbjs/lib/ExecutionEnvironment\"),A=require(\"object-assign\"),C=require(\"fbjs/lib/emptyFunction\"),fa=require(\"fbjs/lib/getActiveElement\"),ha=require(\"fbjs/lib/shallowEqual\"),ja=require(\"fbjs/lib/containsNode\"),ka=require(\"fbjs/lib/emptyObject\");\nfunction D(a){for(var b=arguments.length-1,c=\"http://reactjs.org/docs/error-decoder.html?invariant\\x3d\"+a,d=0;d<b;d++)c+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[d+1]);ba(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}ea?void 0:D(\"227\");\nfunction ma(a,b,c,d,e,f,h,g,k){this._hasCaughtError=!1;this._caughtError=null;var v=Array.prototype.slice.call(arguments,3);try{b.apply(c,v)}catch(l){this._caughtError=l,this._hasCaughtError=!0}}\nvar E={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,h,g,k){ma.apply(E,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,h,g,k){E.invokeGuardedCallback.apply(this,arguments);if(E.hasCaughtError()){var v=E.clearCaughtError();E._hasRethrowError||(E._hasRethrowError=!0,E._rethrowError=v)}},rethrowCaughtError:function(){return na.apply(E,arguments)},hasCaughtError:function(){return E._hasCaughtError},clearCaughtError:function(){if(E._hasCaughtError){var a=\nE._caughtError;E._caughtError=null;E._hasCaughtError=!1;return a}D(\"198\")}};function na(){if(E._hasRethrowError){var a=E._rethrowError;E._rethrowError=null;E._hasRethrowError=!1;throw a;}}var oa=null,pa={};\nfunction qa(){if(oa)for(var a in pa){var b=pa[a],c=oa.indexOf(a);-1<c?void 0:D(\"96\",a);if(!ra[c]){b.extractEvents?void 0:D(\"97\",a);ra[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],h=b,g=d;sa.hasOwnProperty(g)?D(\"99\",g):void 0;sa[g]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ta(k[e],h,g);e=!0}else f.registrationName?(ta(f.registrationName,h,g),e=!0):e=!1;e?void 0:D(\"98\",d,a)}}}}\nfunction ta(a,b,c){ua[a]?D(\"100\",a):void 0;ua[a]=b;va[a]=b.eventTypes[c].dependencies}var ra=[],sa={},ua={},va={};function wa(a){oa?D(\"101\"):void 0;oa=Array.prototype.slice.call(a);qa()}function xa(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];pa.hasOwnProperty(c)&&pa[c]===d||(pa[c]?D(\"102\",c):void 0,pa[c]=d,b=!0)}b&&qa()}\nvar Ca=Object.freeze({plugins:ra,eventNameDispatchConfigs:sa,registrationNameModules:ua,registrationNameDependencies:va,possibleRegistrationNames:null,injectEventPluginOrder:wa,injectEventPluginsByName:xa}),Da=null,Ea=null,Fa=null;function Ga(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=Fa(d);E.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction Ha(a,b){null==b?D(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ia(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ja=null;\nfunction Ka(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)Ga(a,b,c[e],d[e]);else c&&Ga(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function La(a){return Ka(a,!0)}function Ma(a){return Ka(a,!1)}var Na={injectEventPluginOrder:wa,injectEventPluginsByName:xa};\nfunction Oa(a,b){var c=a.stateNode;if(!c)return null;var d=Da(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?D(\"231\",b,typeof c):void 0;\nreturn c}function Pa(a,b){null!==a&&(Ja=Ha(Ja,a));a=Ja;Ja=null;a&&(b?Ia(a,La):Ia(a,Ma),Ja?D(\"95\"):void 0,E.rethrowCaughtError())}function Qa(a,b,c,d){for(var e=null,f=0;f<ra.length;f++){var h=ra[f];h&&(h=h.extractEvents(a,b,c,d))&&(e=Ha(e,h))}Pa(e,!1)}var Ra=Object.freeze({injection:Na,getListener:Oa,runEventsInBatch:Pa,runExtractedEventsInBatch:Qa}),Sa=Math.random().toString(36).slice(2),F=\"__reactInternalInstance$\"+Sa,Ta=\"__reactEventHandlers$\"+Sa;\nfunction Ua(a){if(a[F])return a[F];for(;!a[F];)if(a.parentNode)a=a.parentNode;else return null;a=a[F];return 5===a.tag||6===a.tag?a:null}function Va(a){if(5===a.tag||6===a.tag)return a.stateNode;D(\"33\")}function Xa(a){return a[Ta]||null}var bb=Object.freeze({precacheFiberNode:function(a,b){b[F]=a},getClosestInstanceFromNode:Ua,getInstanceFromNode:function(a){a=a[F];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Va,getFiberCurrentPropsFromNode:Xa,updateFiberProps:function(a,b){a[Ta]=b}});\nfunction L(a){do a=a[\"return\"];while(a&&5!==a.tag);return a?a:null}function cb(a,b,c){for(var d=[];a;)d.push(a),a=L(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}function db(a,b,c){if(b=Oa(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Ha(c._dispatchListeners,b),c._dispatchInstances=Ha(c._dispatchInstances,a)}function eb(a){a&&a.dispatchConfig.phasedRegistrationNames&&cb(a._targetInst,db,a)}\nfunction fb(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?L(b):null;cb(b,db,a)}}function gb(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Oa(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Ha(c._dispatchListeners,b),c._dispatchInstances=Ha(c._dispatchInstances,a))}function hb(a){a&&a.dispatchConfig.registrationName&&gb(a._targetInst,null,a)}function ib(a){Ia(a,eb)}\nfunction jb(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,h=0,g=e;g;g=L(g))h++;g=0;for(var k=f;k;k=L(k))g++;for(;0<h-g;)e=L(e),h--;for(;0<g-h;)f=L(f),g--;for(;h--;){if(e===f||e===f.alternate)break a;e=L(e);f=L(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){h=c.alternate;if(null!==h&&h===f)break;e.push(c);c=L(c)}for(c=[];d&&d!==f;){h=d.alternate;if(null!==h&&h===f)break;c.push(d);d=L(d)}for(d=0;d<e.length;d++)gb(e[d],\"bubbled\",a);for(a=c.length;0<a--;)gb(c[a],\"captured\",b)}\nvar kb=Object.freeze({accumulateTwoPhaseDispatches:ib,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ia(a,fb)},accumulateEnterLeaveDispatches:jb,accumulateDirectDispatches:function(a){Ia(a,hb)}}),lb=null;function mb(){!lb&&m.canUseDOM&&(lb=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return lb}var M={_root:null,_startText:null,_fallbackText:null};\nfunction nb(){if(M._fallbackText)return M._fallbackText;var a,b=M._startText,c=b.length,d,e=ob(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var h=c-a;for(d=1;d<=h&&b[c-d]===e[f-d];d++);M._fallbackText=e.slice(a,1<d?1-d:void 0);return M._fallbackText}function ob(){return\"value\"in M._root?M._root.value:M._root[mb()]}\nvar pb=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),qb={type:null,target:null,currentTarget:C.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction N(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?C.thatReturnsTrue:C.thatReturnsFalse;this.isPropagationStopped=C.thatReturnsFalse;return this}\nA(N.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=C.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=C.thatReturnsTrue)},persist:function(){this.isPersistent=C.thatReturnsTrue},isPersistent:C.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<pb.length;a++)this[pb[a]]=null}});N.Interface=qb;N.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;A(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=A({},d.Interface,a);c.extend=d.extend;rb(c);return c};rb(N);\nfunction sb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function tb(a){a instanceof this?void 0:D(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function rb(a){a.eventPool=[];a.getPooled=sb;a.release=tb}var ub=N.extend({data:null}),vb=N.extend({data:null}),wb=[9,13,27,32],xb=m.canUseDOM&&\"CompositionEvent\"in window,yb=null;m.canUseDOM&&\"documentMode\"in document&&(yb=document.documentMode);\nvar zb=m.canUseDOM&&\"TextEvent\"in window&&!yb,Ab=m.canUseDOM&&(!xb||yb&&8<yb&&11>=yb),Bb=String.fromCharCode(32),Kb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"topCompositionEnd\",\"topKeyPress\",\"topTextInput\",\"topPaste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")}},Lb=!1;\nfunction Mb(a,b){switch(a){case \"topKeyUp\":return-1!==wb.indexOf(b.keyCode);case \"topKeyDown\":return 229!==b.keyCode;case \"topKeyPress\":case \"topMouseDown\":case \"topBlur\":return!0;default:return!1}}function Nb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Ob=!1;function Pb(a,b){switch(a){case \"topCompositionEnd\":return Nb(b);case \"topKeyPress\":if(32!==b.which)return null;Lb=!0;return Bb;case \"topTextInput\":return a=b.data,a===Bb&&Lb?null:a;default:return null}}\nfunction Qb(a,b){if(Ob)return\"topCompositionEnd\"===a||!xb&&Mb(a,b)?(a=nb(),M._root=null,M._startText=null,M._fallbackText=null,Ob=!1,a):null;switch(a){case \"topPaste\":return null;case \"topKeyPress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"topCompositionEnd\":return Ab?null:b.data;default:return null}}\nvar Rb={eventTypes:Kb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(xb)b:{switch(a){case \"topCompositionStart\":e=Kb.compositionStart;break b;case \"topCompositionEnd\":e=Kb.compositionEnd;break b;case \"topCompositionUpdate\":e=Kb.compositionUpdate;break b}e=void 0}else Ob?Mb(a,c)&&(e=Kb.compositionEnd):\"topKeyDown\"===a&&229===c.keyCode&&(e=Kb.compositionStart);e?(Ab&&(Ob||e!==Kb.compositionStart?e===Kb.compositionEnd&&Ob&&(f=nb()):(M._root=d,M._startText=ob(),Ob=!0)),e=ub.getPooled(e,\nb,c,d),f?e.data=f:(f=Nb(c),null!==f&&(e.data=f)),ib(e),f=e):f=null;(a=zb?Pb(a,c):Qb(a,c))?(b=vb.getPooled(Kb.beforeInput,b,c,d),b.data=a,ib(b)):b=null;return null===f?b:null===b?f:[f,b]}},Sb=null,Tb={injectFiberControlledHostComponent:function(a){Sb=a}},Ub=null,Vb=null;function Wb(a){if(a=Ea(a)){Sb&&\"function\"===typeof Sb.restoreControlledState?void 0:D(\"194\");var b=Da(a.stateNode);Sb.restoreControlledState(a.stateNode,a.type,b)}}function Xb(a){Ub?Vb?Vb.push(a):Vb=[a]:Ub=a}\nfunction Yb(){return null!==Ub||null!==Vb}function Zb(){if(Ub){var a=Ub,b=Vb;Vb=Ub=null;Wb(a);if(b)for(a=0;a<b.length;a++)Wb(b[a])}}var $b=Object.freeze({injection:Tb,enqueueStateRestore:Xb,needsStateRestore:Yb,restoreStateIfNeeded:Zb});function ac(a,b){return a(b)}function bc(a,b,c){return a(b,c)}function cc(){}var dc=!1;function ec(a,b){if(dc)return a(b);dc=!0;try{return ac(a,b)}finally{dc=!1,Yb()&&(cc(),Zb())}}\nvar fc={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function gc(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!fc[a.type]:\"textarea\"===b?!0:!1}function hc(a){a=a.target||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}\nfunction ic(a,b){if(!m.canUseDOM||b&&!(\"addEventListener\"in document))return!1;a=\"on\"+a;b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function jc(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction kc(a){var b=jc(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"function\"===typeof c.get&&\"function\"===typeof c.set)return Object.defineProperty(a,b,{configurable:!0,get:function(){return c.get.call(this)},set:function(a){d=\"\"+a;c.set.call(this,a)}}),Object.defineProperty(a,b,{enumerable:c.enumerable}),{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}\nfunction lc(a){a._valueTracker||(a._valueTracker=kc(a))}function mc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=jc(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar nc=ea.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,O=\"function\"===typeof Symbol&&Symbol[\"for\"],oc=O?Symbol[\"for\"](\"react.element\"):60103,pc=O?Symbol[\"for\"](\"react.call\"):60104,qc=O?Symbol[\"for\"](\"react.return\"):60105,rc=O?Symbol[\"for\"](\"react.portal\"):60106,sc=O?Symbol[\"for\"](\"react.fragment\"):60107,tc=O?Symbol[\"for\"](\"react.strict_mode\"):60108,uc=O?Symbol[\"for\"](\"react.provider\"):60109,vc=O?Symbol[\"for\"](\"react.context\"):60110,wc=O?Symbol[\"for\"](\"react.async_mode\"):60111,\nxc=O?Symbol[\"for\"](\"react.forward_ref\"):60112,yc=\"function\"===typeof Symbol&&Symbol.iterator;function zc(a){if(null===a||\"undefined\"===typeof a)return null;a=yc&&a[yc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction Ac(a){a=a.type;if(\"function\"===typeof a)return a.displayName||a.name;if(\"string\"===typeof a)return a;switch(a){case sc:return\"ReactFragment\";case rc:return\"ReactPortal\";case pc:return\"ReactCall\";case qc:return\"ReactReturn\"}if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case xc:return a=a.render.displayName||a.render.name||\"\",\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\"}return null}\nfunction Bc(a){var b=\"\";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=Ac(a);var f=null;c&&(f=Ac(c));c=d;e=\"\\n    in \"+(e||\"Unknown\")+(c?\" (at \"+c.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+c.lineNumber+\")\":f?\" (created by \"+f+\")\":\"\");break a;default:e=\"\"}b+=e;a=a[\"return\"]}while(a);return b}\nvar Cc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,Dc={},Ec={};function Fc(a){if(Ec.hasOwnProperty(a))return!0;if(Dc.hasOwnProperty(a))return!1;if(Cc.test(a))return Ec[a]=!0;Dc[a]=!0;return!1}\nfunction Gc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}function Hc(a,b,c,d){if(null===b||\"undefined\"===typeof b||Gc(a,b,c,d))return!0;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}\nfunction U(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var V={};\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){V[a]=new U(a,0,!1,a,null)});\n[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];V[b]=new U(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){V[a]=new U(a,2,!1,a.toLowerCase(),null)});[\"autoReverse\",\"externalResourcesRequired\",\"preserveAlpha\"].forEach(function(a){V[a]=new U(a,2,!1,a,null)});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){V[a]=new U(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){V[a]=new U(a,3,!0,a.toLowerCase(),null)});[\"capture\",\"download\"].forEach(function(a){V[a]=new U(a,4,!1,a.toLowerCase(),null)});\n[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){V[a]=new U(a,6,!1,a.toLowerCase(),null)});[\"rowSpan\",\"start\"].forEach(function(a){V[a]=new U(a,5,!1,a.toLowerCase(),null)});var Sc=/[\\-:]([a-z])/g;function Tc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(Sc,\nTc);V[b]=new U(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(Sc,Tc);V[b]=new U(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(Sc,Tc);V[b]=new U(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});V.tabIndex=new U(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction Uc(a,b,c,d){var e=V.hasOwnProperty(b)?V[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(Hc(b,c,e,d)&&(c=null),d||null===e?Fc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction Vc(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Wc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Xc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Yc(a,b){b=b.checked;null!=b&&Uc(a,\"checked\",b,!1)}\nfunction Zc(a,b){Yc(a,b);var c=Xc(b.value);if(null!=c)if(\"number\"===b.type){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);b.hasOwnProperty(\"value\")?$c(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&$c(a,b.type,Xc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction ad(a,b){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\"))\"\"===a.value&&(a.value=\"\"+a._wrapperState.initialValue),a.defaultValue=\"\"+a._wrapperState.initialValue;b=a.name;\"\"!==b&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==b&&(a.name=b)}function $c(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}\nfunction Xc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}var bd={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange\".split(\" \")}};function cd(a,b,c){a=N.getPooled(bd.change,a,b,c);a.type=\"change\";Xb(c);ib(a);return a}var dd=null,ed=null;function fd(a){Pa(a,!1)}\nfunction gd(a){var b=Va(a);if(mc(b))return a}function hd(a,b){if(\"topChange\"===a)return b}var id=!1;m.canUseDOM&&(id=ic(\"input\")&&(!document.documentMode||9<document.documentMode));function jd(){dd&&(dd.detachEvent(\"onpropertychange\",kd),ed=dd=null)}function kd(a){\"value\"===a.propertyName&&gd(ed)&&(a=cd(ed,a,hc(a)),ec(fd,a))}function ld(a,b,c){\"topFocus\"===a?(jd(),dd=b,ed=c,dd.attachEvent(\"onpropertychange\",kd)):\"topBlur\"===a&&jd()}\nfunction md(a){if(\"topSelectionChange\"===a||\"topKeyUp\"===a||\"topKeyDown\"===a)return gd(ed)}function nd(a,b){if(\"topClick\"===a)return gd(b)}function od(a,b){if(\"topInput\"===a||\"topChange\"===a)return gd(b)}\nvar pd={eventTypes:bd,_isInputEventSupported:id,extractEvents:function(a,b,c,d){var e=b?Va(b):window,f=void 0,h=void 0,g=e.nodeName&&e.nodeName.toLowerCase();\"select\"===g||\"input\"===g&&\"file\"===e.type?f=hd:gc(e)?id?f=od:(f=md,h=ld):(g=e.nodeName)&&\"input\"===g.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=nd);if(f&&(f=f(a,b)))return cd(f,c,d);h&&h(a,e,b);\"topBlur\"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&\"number\"===e.type&&$c(e,\"number\",e.value)}},qd=N.extend({view:null,\ndetail:null}),rd={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function sd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=rd[a])?!!b[a]:!1}function td(){return sd}\nvar ud=qd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:td,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),vd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"topMouseOut\",\"topMouseOver\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"topMouseOut\",\"topMouseOver\"]}},wd={eventTypes:vd,extractEvents:function(a,\nb,c,d){if(\"topMouseOver\"===a&&(c.relatedTarget||c.fromElement)||\"topMouseOut\"!==a&&\"topMouseOver\"!==a)return null;var e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;\"topMouseOut\"===a?(a=b,b=(b=c.relatedTarget||c.toElement)?Ua(b):null):a=null;if(a===b)return null;var f=null==a?e:Va(a);e=null==b?e:Va(b);var h=ud.getPooled(vd.mouseLeave,a,c,d);h.type=\"mouseleave\";h.target=f;h.relatedTarget=e;c=ud.getPooled(vd.mouseEnter,b,c,d);c.type=\"mouseenter\";c.target=e;c.relatedTarget=\nf;jb(h,c,a,b);return[h,c]}};function xd(a){var b=a;if(a.alternate)for(;b[\"return\"];)b=b[\"return\"];else{if(0!==(b.effectTag&2))return 1;for(;b[\"return\"];)if(b=b[\"return\"],0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function yd(a){return(a=a._reactInternalFiber)?2===xd(a):!1}function zd(a){2!==xd(a)?D(\"188\"):void 0}\nfunction Ad(a){var b=a.alternate;if(!b)return b=xd(a),3===b?D(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c[\"return\"],f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var h=e.child;h;){if(h===c)return zd(e),a;if(h===d)return zd(e),b;h=h.sibling}D(\"188\")}if(c[\"return\"]!==d[\"return\"])c=e,d=f;else{h=!1;for(var g=e.child;g;){if(g===c){h=!0;c=e;d=f;break}if(g===d){h=!0;d=e;c=f;break}g=g.sibling}if(!h){for(g=f.child;g;){if(g===c){h=!0;c=f;d=e;break}if(g===d){h=!0;d=f;c=e;break}g=g.sibling}h?\nvoid 0:D(\"189\")}}c.alternate!==d?D(\"190\"):void 0}3!==c.tag?D(\"188\"):void 0;return c.stateNode.current===c?a:b}function Bd(a){a=Ad(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}\nfunction Cd(a){a=Ad(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}var Dd=N.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Ed=N.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Fd=qd.extend({relatedTarget:null});\nfunction Gd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar Hd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Id={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Jd=qd.extend({key:function(a){if(a.key){var b=Hd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=Gd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Id[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:td,charCode:function(a){return\"keypress\"===\na.type?Gd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?Gd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Kd=ud.extend({dataTransfer:null}),Ld=qd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:td}),Md=N.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),Nd=ud.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),Od={},Pd={};function Qd(a,b){var c=a[0].toUpperCase()+a.slice(1),d=\"on\"+c;c=\"top\"+c;b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Od[a]=b;Pd[c]=b}\n\"blur cancel click close contextMenu copy cut doubleClick dragEnd dragStart drop focus input invalid keyDown keyPress keyUp mouseDown mouseUp paste pause play rateChange reset seeked submit touchCancel touchEnd touchStart volumeChange\".split(\" \").forEach(function(a){Qd(a,!0)});\n\"abort animationEnd animationIteration animationStart canPlay canPlayThrough drag dragEnter dragExit dragLeave dragOver durationChange emptied encrypted ended error load loadedData loadedMetadata loadStart mouseMove mouseOut mouseOver playing progress scroll seeking stalled suspend timeUpdate toggle touchMove transitionEnd waiting wheel\".split(\" \").forEach(function(a){Qd(a,!1)});\nvar Rd={eventTypes:Od,isInteractiveTopLevelEventType:function(a){a=Pd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Pd[a];if(!e)return null;switch(a){case \"topKeyPress\":if(0===Gd(c))return null;case \"topKeyDown\":case \"topKeyUp\":a=Jd;break;case \"topBlur\":case \"topFocus\":a=Fd;break;case \"topClick\":if(2===c.button)return null;case \"topDoubleClick\":case \"topMouseDown\":case \"topMouseMove\":case \"topMouseUp\":case \"topMouseOut\":case \"topMouseOver\":case \"topContextMenu\":a=\nud;break;case \"topDrag\":case \"topDragEnd\":case \"topDragEnter\":case \"topDragExit\":case \"topDragLeave\":case \"topDragOver\":case \"topDragStart\":case \"topDrop\":a=Kd;break;case \"topTouchCancel\":case \"topTouchEnd\":case \"topTouchMove\":case \"topTouchStart\":a=Ld;break;case \"topAnimationEnd\":case \"topAnimationIteration\":case \"topAnimationStart\":a=Dd;break;case \"topTransitionEnd\":a=Md;break;case \"topScroll\":a=qd;break;case \"topWheel\":a=Nd;break;case \"topCopy\":case \"topCut\":case \"topPaste\":a=Ed;break;default:a=\nN}b=a.getPooled(e,b,c,d);ib(b);return b}},Sd=Rd.isInteractiveTopLevelEventType,Td=[];function Ud(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c[\"return\"];)c=c[\"return\"];c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Ua(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Qa(a.topLevelType,b,a.nativeEvent,hc(a.nativeEvent))}var Vd=!0;function Wd(a){Vd=!!a}\nfunction W(a,b,c){if(!c)return null;a=(Sd(a)?Xd:Yd).bind(null,a);c.addEventListener(b,a,!1)}function Zd(a,b,c){if(!c)return null;a=(Sd(a)?Xd:Yd).bind(null,a);c.addEventListener(b,a,!0)}function Xd(a,b){bc(Yd,a,b)}\nfunction Yd(a,b){if(Vd){var c=hc(b);c=Ua(c);null!==c&&\"number\"===typeof c.tag&&2!==xd(c)&&(c=null);if(Td.length){var d=Td.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{ec(Ud,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Td.length&&Td.push(a)}}}\nvar $d=Object.freeze({get _enabled(){return Vd},setEnabled:Wd,isEnabled:function(){return Vd},trapBubbledEvent:W,trapCapturedEvent:Zd,dispatchEvent:Yd});function ae(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar be={animationend:ae(\"Animation\",\"AnimationEnd\"),animationiteration:ae(\"Animation\",\"AnimationIteration\"),animationstart:ae(\"Animation\",\"AnimationStart\"),transitionend:ae(\"Transition\",\"TransitionEnd\")},ce={},de={};m.canUseDOM&&(de=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete be.animationend.animation,delete be.animationiteration.animation,delete be.animationstart.animation),\"TransitionEvent\"in window||delete be.transitionend.transition);\nfunction ee(a){if(ce[a])return ce[a];if(!be[a])return a;var b=be[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in de)return ce[a]=b[c];return a}\nvar fe={topAnimationEnd:ee(\"animationend\"),topAnimationIteration:ee(\"animationiteration\"),topAnimationStart:ee(\"animationstart\"),topBlur:\"blur\",topCancel:\"cancel\",topChange:\"change\",topClick:\"click\",topClose:\"close\",topCompositionEnd:\"compositionend\",topCompositionStart:\"compositionstart\",topCompositionUpdate:\"compositionupdate\",topContextMenu:\"contextmenu\",topCopy:\"copy\",topCut:\"cut\",topDoubleClick:\"dblclick\",topDrag:\"drag\",topDragEnd:\"dragend\",topDragEnter:\"dragenter\",topDragExit:\"dragexit\",topDragLeave:\"dragleave\",\ntopDragOver:\"dragover\",topDragStart:\"dragstart\",topDrop:\"drop\",topFocus:\"focus\",topInput:\"input\",topKeyDown:\"keydown\",topKeyPress:\"keypress\",topKeyUp:\"keyup\",topLoad:\"load\",topLoadStart:\"loadstart\",topMouseDown:\"mousedown\",topMouseMove:\"mousemove\",topMouseOut:\"mouseout\",topMouseOver:\"mouseover\",topMouseUp:\"mouseup\",topPaste:\"paste\",topScroll:\"scroll\",topSelectionChange:\"selectionchange\",topTextInput:\"textInput\",topToggle:\"toggle\",topTouchCancel:\"touchcancel\",topTouchEnd:\"touchend\",topTouchMove:\"touchmove\",\ntopTouchStart:\"touchstart\",topTransitionEnd:ee(\"transitionend\"),topWheel:\"wheel\"},ge={topAbort:\"abort\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topLoadedData:\"loadeddata\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topSeeked:\"seeked\",topSeeking:\"seeking\",\ntopStalled:\"stalled\",topSuspend:\"suspend\",topTimeUpdate:\"timeupdate\",topVolumeChange:\"volumechange\",topWaiting:\"waiting\"},he={},ie=0,je=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function ke(a){Object.prototype.hasOwnProperty.call(a,je)||(a[je]=ie++,he[a[je]]={});return he[a[je]]}function le(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction me(a,b){var c=le(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=le(c)}}function ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&\"text\"===a.type||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar oe=m.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,pe={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange\".split(\" \")}},qe=null,re=null,se=null,te=!1;\nfunction ue(a,b){if(te||null==qe||qe!==fa())return null;var c=qe;\"selectionStart\"in c&&ne(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return se&&ha(se,c)?null:(se=c,a=N.getPooled(pe.select,re,a,b),a.type=\"select\",a.target=qe,ib(a),a)}\nvar ve={eventTypes:pe,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=ke(e);f=va.onSelect;for(var h=0;h<f.length;h++){var g=f[h];if(!e.hasOwnProperty(g)||!e[g]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Va(b):window;switch(a){case \"topFocus\":if(gc(e)||\"true\"===e.contentEditable)qe=e,re=b,se=null;break;case \"topBlur\":se=re=qe=null;break;case \"topMouseDown\":te=!0;break;case \"topContextMenu\":case \"topMouseUp\":return te=!1,ue(c,d);case \"topSelectionChange\":if(oe)break;\ncase \"topKeyDown\":case \"topKeyUp\":return ue(c,d)}return null}};Na.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));Da=bb.getFiberCurrentPropsFromNode;Ea=bb.getInstanceFromNode;Fa=bb.getNodeFromInstance;Na.injectEventPluginsByName({SimpleEventPlugin:Rd,EnterLeaveEventPlugin:wd,ChangeEventPlugin:pd,SelectEventPlugin:ve,BeforeInputEventPlugin:Rb});\nfunction xe(a,b,c,d){this.tag=a;this.key=c;this.stateNode=this.type=null;this.sibling=this.child=this[\"return\"]=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction ze(a,b,c){var d=a.alternate;null===d?(d=new xe(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction Ae(a,b,c){var d=a.type,e=a.key;a=a.props;var f=void 0;if(\"function\"===typeof d)f=d.prototype&&d.prototype.isReactComponent?2:0;else if(\"string\"===typeof d)f=5;else switch(d){case sc:return Be(a.children,b,c,e);case wc:f=11;b|=3;break;case tc:f=11;b|=2;break;case pc:f=7;break;case qc:f=9;break;default:if(\"object\"===typeof d&&null!==d)switch(d.$$typeof){case uc:f=13;break;case vc:f=12;break;case xc:f=14;break;default:if(\"number\"===typeof d.tag)return b=d,b.pendingProps=a,b.expirationTime=c,\nb;D(\"130\",null==d?d:typeof d,\"\")}else D(\"130\",null==d?d:typeof d,\"\")}b=new xe(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Be(a,b,c,d){a=new xe(10,a,d,b);a.expirationTime=c;return a}function Ce(a,b,c){a=new xe(6,a,null,b);a.expirationTime=c;return a}function De(a,b,c){b=new xe(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}var Ee=null,Fe=null;\nfunction Ge(a){return function(b){try{return a(b)}catch(c){}}}function He(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Ee=Ge(function(a){return b.onCommitFiberRoot(c,a)});Fe=Ge(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Ie(a){\"function\"===typeof Ee&&Ee(a)}function Je(a){\"function\"===typeof Fe&&Fe(a)}new Set;\nfunction Ke(a){return{baseState:a,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1,capturedValues:null}}function Le(a,b){null===a.last?a.first=a.last=b:(a.last.next=b,a.last=b);if(0===a.expirationTime||a.expirationTime>b.expirationTime)a.expirationTime=b.expirationTime}var Me=void 0,Ne=void 0;\nfunction Oe(a){Me=Ne=null;var b=a.alternate,c=a.updateQueue;null===c&&(c=a.updateQueue=Ke(null));null!==b?(a=b.updateQueue,null===a&&(a=b.updateQueue=Ke(null))):a=null;Me=c;Ne=a!==c?a:null}function Pe(a,b){Oe(a);a=Me;var c=Ne;null===c?Le(a,b):null===a.last||null===c.last?(Le(a,b),Le(c,b)):(Le(a,b),c.last=b)}function Qe(a,b,c,d){a=a.partialState;return\"function\"===typeof a?a.call(b,c,d):a}\nfunction Re(a,b,c,d,e,f){null!==a&&a.updateQueue===c&&(c=b.updateQueue={baseState:c.baseState,expirationTime:c.expirationTime,first:c.first,last:c.last,isInitialized:c.isInitialized,capturedValues:c.capturedValues,callbackList:null,hasForceUpdate:!1});c.expirationTime=0;c.isInitialized?a=c.baseState:(a=c.baseState=b.memoizedState,c.isInitialized=!0);for(var h=!0,g=c.first,k=!1;null!==g;){var v=g.expirationTime;if(v>f){var l=c.expirationTime;if(0===l||l>v)c.expirationTime=v;k||(k=!0,c.baseState=a)}else{k||\n(c.first=g.next,null===c.first&&(c.last=null));if(g.isReplace)a=Qe(g,d,a,e),h=!0;else if(v=Qe(g,d,a,e))a=h?A({},a,v):A(a,v),h=!1;g.isForced&&(c.hasForceUpdate=!0);null!==g.callback&&(v=c.callbackList,null===v&&(v=c.callbackList=[]),v.push(g));null!==g.capturedValue&&(v=c.capturedValues,null===v?c.capturedValues=[g.capturedValue]:v.push(g.capturedValue))}g=g.next}null!==c.callbackList?b.effectTag|=32:null!==c.first||c.hasForceUpdate||null!==c.capturedValues||(b.updateQueue=null);k||(c.baseState=a);\nreturn a}function Se(a,b){var c=a.callbackList;if(null!==c)for(a.callbackList=null,a=0;a<c.length;a++){var d=c[a],e=d.callback;d.callback=null;\"function\"!==typeof e?D(\"191\",e):void 0;e.call(b)}}\nfunction Te(a,b,c,d,e){function f(a,b,c,d,e,f){if(null===b||null!==a.updateQueue&&a.updateQueue.hasForceUpdate)return!0;var n=a.stateNode;a=a.type;return\"function\"===typeof n.shouldComponentUpdate?n.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ha(b,c)||!ha(d,e):!0}function h(a,b){b.updater=r;a.stateNode=b;b._reactInternalFiber=a}function g(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&\nb.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&r.enqueueReplaceState(b,b.state,null)}function k(a,b,c,d){a=a.type;if(\"function\"===typeof a.getDerivedStateFromProps)return a.getDerivedStateFromProps.call(null,c,d)}var v=a.cacheContext,l=a.getMaskedContext,p=a.getUnmaskedContext,z=a.isContextConsumer,B=a.hasContextChanged,r={isMounted:yd,enqueueSetState:function(a,d,e){a=a._reactInternalFiber;e=void 0===e?null:e;var f=c(a);Pe(a,{expirationTime:f,partialState:d,callback:e,isReplace:!1,isForced:!1,\ncapturedValue:null,next:null});b(a,f)},enqueueReplaceState:function(a,d,e){a=a._reactInternalFiber;e=void 0===e?null:e;var f=c(a);Pe(a,{expirationTime:f,partialState:d,callback:e,isReplace:!0,isForced:!1,capturedValue:null,next:null});b(a,f)},enqueueForceUpdate:function(a,d){a=a._reactInternalFiber;d=void 0===d?null:d;var e=c(a);Pe(a,{expirationTime:e,partialState:null,callback:d,isReplace:!1,isForced:!0,capturedValue:null,next:null});b(a,e)}};return{adoptClassInstance:h,callGetDerivedStateFromProps:k,\nconstructClassInstance:function(a,b){var c=a.type,d=p(a),e=z(a),f=e?l(a,d):ka;c=new c(b,f);var n=null!==c.state&&void 0!==c.state?c.state:null;h(a,c);a.memoizedState=n;b=k(a,c,b,n);null!==b&&void 0!==b&&(a.memoizedState=A({},a.memoizedState,b));e&&v(a,d,f);return c},mountClassInstance:function(a,b){var c=a.type,d=a.alternate,e=a.stateNode,f=a.pendingProps,n=p(a);e.props=f;e.state=a.memoizedState;e.refs=ka;e.context=l(a,n);\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\n\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(c=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),c!==e.state&&r.enqueueReplaceState(e,e.state,null),c=a.updateQueue,null!==c&&(e.state=Re(d,a,c,e,f,b)));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)},resumeMountClassInstance:function(a,b){var c=a.type,n=a.stateNode;n.props=a.memoizedProps;n.state=\na.memoizedState;var h=a.memoizedProps,r=a.pendingProps,z=n.context,q=p(a);q=l(a,q);(c=\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof n.getSnapshotBeforeUpdate)||\"function\"!==typeof n.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof n.componentWillReceiveProps||(h!==r||z!==q)&&g(a,n,r,q);z=a.memoizedState;b=null!==a.updateQueue?Re(null,a,a.updateQueue,n,r,b):z;var u=void 0;h!==r&&(u=k(a,n,r,b));if(null!==u&&void 0!==u){b=null===b||void 0===b?u:A({},b,u);var t=a.updateQueue;\nnull!==t&&(t.baseState=A({},t.baseState,u))}if(!(h!==r||z!==b||B()||null!==a.updateQueue&&a.updateQueue.hasForceUpdate))return\"function\"===typeof n.componentDidMount&&(a.effectTag|=4),!1;(h=f(a,h,r,z,b,q))?(c||\"function\"!==typeof n.UNSAFE_componentWillMount&&\"function\"!==typeof n.componentWillMount||(\"function\"===typeof n.componentWillMount&&n.componentWillMount(),\"function\"===typeof n.UNSAFE_componentWillMount&&n.UNSAFE_componentWillMount()),\"function\"===typeof n.componentDidMount&&(a.effectTag|=\n4)):(\"function\"===typeof n.componentDidMount&&(a.effectTag|=4),d(a,r),e(a,b));n.props=r;n.state=b;n.context=q;return h},updateClassInstance:function(a,b,c){var n=b.type,x=b.stateNode;x.props=b.memoizedProps;x.state=b.memoizedState;var h=b.memoizedProps,r=b.pendingProps,q=x.context,u=p(b);u=l(b,u);(n=\"function\"===typeof n.getDerivedStateFromProps||\"function\"===typeof x.getSnapshotBeforeUpdate)||\"function\"!==typeof x.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof x.componentWillReceiveProps||\n(h!==r||q!==u)&&g(b,x,r,u);q=b.memoizedState;c=null!==b.updateQueue?Re(a,b,b.updateQueue,x,r,c):q;var t=void 0;h!==r&&(t=k(b,x,r,c));if(null!==t&&void 0!==t){c=null===c||void 0===c?t:A({},c,t);var y=b.updateQueue;null!==y&&(y.baseState=A({},y.baseState,t))}if(!(h!==r||q!==c||B()||null!==b.updateQueue&&b.updateQueue.hasForceUpdate))return\"function\"!==typeof x.componentDidUpdate||h===a.memoizedProps&&q===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof x.getSnapshotBeforeUpdate||h===a.memoizedProps&&\nq===a.memoizedState||(b.effectTag|=2048),!1;(t=f(b,h,r,q,c,u))?(n||\"function\"!==typeof x.UNSAFE_componentWillUpdate&&\"function\"!==typeof x.componentWillUpdate||(\"function\"===typeof x.componentWillUpdate&&x.componentWillUpdate(r,c,u),\"function\"===typeof x.UNSAFE_componentWillUpdate&&x.UNSAFE_componentWillUpdate(r,c,u)),\"function\"===typeof x.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof x.getSnapshotBeforeUpdate&&(b.effectTag|=2048)):(\"function\"!==typeof x.componentDidUpdate||h===a.memoizedProps&&\nq===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof x.getSnapshotBeforeUpdate||h===a.memoizedProps&&q===a.memoizedState||(b.effectTag|=2048),d(b,r),e(b,c));x.props=r;x.state=c;x.context=u;return t}}}var Ue=Array.isArray;\nfunction Ve(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?D(\"110\"):void 0,d=c.stateNode);d?void 0:D(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ka?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?D(\"148\"):void 0;c._owner?void 0:D(\"254\",a)}return a}\nfunction We(a,b){\"textarea\"!==a.type&&D(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Xe(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=ze(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function h(b){a&&null===b.alternate&&(b.effectTag=2);return b}function g(a,b,c,d){if(null===b||6!==b.tag)return b=Ce(c,a.mode,d),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=Ve(a,b,c),d[\"return\"]=a,d;d=Ae(c,a.mode,d);d.ref=Ve(a,b,c);d[\"return\"]=a;return d}function v(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nDe(c,a.mode,d),b[\"return\"]=a,b;b=e(b,c.children||[],d);b[\"return\"]=a;return b}function l(a,b,c,d,f){if(null===b||10!==b.tag)return b=Be(c,a.mode,d,f),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ce(\"\"+b,a.mode,c),b[\"return\"]=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case oc:return c=Ae(b,a.mode,c),c.ref=Ve(a,null,b),c[\"return\"]=a,c;case rc:return b=De(b,a.mode,c),b[\"return\"]=a,b}if(Ue(b)||zc(b))return b=Be(b,\na.mode,c,null),b[\"return\"]=a,b;We(a,b)}return null}function z(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:g(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case oc:return c.key===e?c.type===sc?l(a,b,c.props.children,d,e):k(a,b,c,d):null;case rc:return c.key===e?v(a,b,c,d):null}if(Ue(c)||zc(c))return null!==e?null:l(a,b,c,d,null);We(a,c)}return null}function B(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,g(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case oc:return a=a.get(null===d.key?c:d.key)||null,d.type===sc?l(b,a,d.props.children,e,d.key):k(b,a,d,e);case rc:return a=a.get(null===d.key?c:d.key)||null,v(b,a,d,e)}if(Ue(d)||zc(d))return a=a.get(c)||null,l(b,a,d,e,null);We(b,d)}return null}function r(e,l,g,h){for(var r=null,k=null,q=l,u=l=0,t=null;null!==q&&u<g.length;u++){q.index>u?(t=q,q=null):t=q.sibling;var n=z(e,q,g[u],h);if(null===n){null===q&&(q=t);break}a&&q&&null===\nn.alternate&&b(e,q);l=f(n,l,u);null===k?r=n:k.sibling=n;k=n;q=t}if(u===g.length)return c(e,q),r;if(null===q){for(;u<g.length;u++)if(q=p(e,g[u],h))l=f(q,l,u),null===k?r=q:k.sibling=q,k=q;return r}for(q=d(e,q);u<g.length;u++)if(t=B(q,e,u,g[u],h)){if(a&&null!==t.alternate)q[\"delete\"](null===t.key?u:t.key);l=f(t,l,u);null===k?r=t:k.sibling=t;k=t}a&&q.forEach(function(a){return b(e,a)});return r}function Q(e,l,g,h){var r=zc(g);\"function\"!==typeof r?D(\"150\"):void 0;g=r.call(g);null==g?D(\"151\"):void 0;for(var k=\nr=null,q=l,u=l=0,t=null,n=g.next();null!==q&&!n.done;u++,n=g.next()){q.index>u?(t=q,q=null):t=q.sibling;var H=z(e,q,n.value,h);if(null===H){q||(q=t);break}a&&q&&null===H.alternate&&b(e,q);l=f(H,l,u);null===k?r=H:k.sibling=H;k=H;q=t}if(n.done)return c(e,q),r;if(null===q){for(;!n.done;u++,n=g.next())n=p(e,n.value,h),null!==n&&(l=f(n,l,u),null===k?r=n:k.sibling=n,k=n);return r}for(q=d(e,q);!n.done;u++,n=g.next())if(n=B(q,e,u,n.value,h),null!==n){if(a&&null!==n.alternate)q[\"delete\"](null===n.key?u:n.key);\nl=f(n,l,u);null===k?r=n:k.sibling=n;k=n}a&&q.forEach(function(a){return b(e,a)});return r}return function(a,d,f,l){\"object\"===typeof f&&null!==f&&f.type===sc&&null===f.key&&(f=f.props.children);var g=\"object\"===typeof f&&null!==f;if(g)switch(f.$$typeof){case oc:a:{var k=f.key;for(g=d;null!==g;){if(g.key===k)if(10===g.tag?f.type===sc:g.type===f.type){c(a,g.sibling);d=e(g,f.type===sc?f.props.children:f.props,l);d.ref=Ve(a,g,f);d[\"return\"]=a;a=d;break a}else{c(a,g);break}else b(a,g);g=g.sibling}f.type===\nsc?(d=Be(f.props.children,a.mode,l,f.key),d[\"return\"]=a,a=d):(l=Ae(f,a.mode,l),l.ref=Ve(a,d,f),l[\"return\"]=a,a=l)}return h(a);case rc:a:{for(g=f.key;null!==d;){if(d.key===g)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],l);d[\"return\"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=De(f,a.mode,l);d[\"return\"]=a;a=d}return h(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&\n6===d.tag?(c(a,d.sibling),d=e(d,f,l),d[\"return\"]=a,a=d):(c(a,d),d=Ce(f,a.mode,l),d[\"return\"]=a,a=d),h(a);if(Ue(f))return r(a,d,f,l);if(zc(f))return Q(a,d,f,l);g&&We(a,f);if(\"undefined\"===typeof f)switch(a.tag){case 2:case 1:l=a.type,D(\"152\",l.displayName||l.name||\"Component\")}return c(a,d)}}var Ye=Xe(!0),Ze=Xe(!1);\nfunction $e(a,b,c,d,e,f,h){function g(a,b,c){k(a,b,c,b.expirationTime)}function k(a,b,c,d){b.child=null===a?Ze(b,null,c,d):Ye(b,a.child,c,d)}function v(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function l(a,b,c,d,e,f){v(a,b);if(!c&&!e)return d&&y(b,!1),r(a,b);c=b.stateNode;nc.current=b;var l=e?null:c.render();b.effectTag|=1;e&&(k(a,b,null,f),b.child=null);k(a,b,l,f);b.memoizedState=c.state;b.memoizedProps=c.props;d&&y(b,!0);return b.child}function p(a){var b=a.stateNode;\nb.pendingContext?t(a,b.pendingContext,b.pendingContext!==b.context):b.context&&t(a,b.context,!1);Y(a,b.containerInfo)}function z(a,b,c,d){var e=a.child;for(null!==e&&(e[\"return\"]=a);null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var l=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==l&&(0===l.expirationTime||l.expirationTime>d)&&(l.expirationTime=d);else if(null!==l&&(0===l.expirationTime||l.expirationTime>d))l.expirationTime=\nd;else break;f=f[\"return\"]}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=e.child}if(null!==f)f[\"return\"]=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){f=e;break}f=f[\"return\"]}e=f}}function B(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps;if(!q()&&f===e)return b.stateNode=0,G(b),r(a,b);var l=e.value;b.memoizedProps=e;if(null===f)l=1073741823;else if(f.value===e.value){if(f.children===e.children)return b.stateNode=0,G(b),\nr(a,b);l=0}else{var h=f.value;if(h===l&&(0!==h||1/h===1/l)||h!==h&&l!==l){if(f.children===e.children)return b.stateNode=0,G(b),r(a,b);l=0}else if(l=\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,l):1073741823,l|=0,0===l){if(f.children===e.children)return b.stateNode=0,G(b),r(a,b)}else z(b,d,l,c)}b.stateNode=l;G(b);g(a,b,e.children);return b.child}function r(a,b){null!==a&&b.child!==a.child?D(\"153\"):void 0;if(null!==b.child){a=b.child;var c=ze(a,a.pendingProps,a.expirationTime);\nb.child=c;for(c[\"return\"]=b;null!==a.sibling;)a=a.sibling,c=c.sibling=ze(a,a.pendingProps,a.expirationTime),c[\"return\"]=b;c.sibling=null}return b.child}var Q=a.shouldSetTextContent,n=a.shouldDeprioritizeSubtree,x=b.pushHostContext,Y=b.pushHostContainer,G=d.pushProvider,R=c.getMaskedContext,S=c.getUnmaskedContext,q=c.hasContextChanged,u=c.pushContextProvider,t=c.pushTopLevelContextObject,y=c.invalidateContextProvider,H=e.enterHydrationState,Wa=e.resetHydrationState,Cb=e.tryToClaimNextHydratableInstance;\na=Te(c,f,h,function(a,b){a.memoizedProps=b},function(a,b){a.memoizedState=b});var Jc=a.adoptClassInstance,Kc=a.callGetDerivedStateFromProps,Lc=a.constructClassInstance,Db=a.mountClassInstance,Mc=a.resumeMountClassInstance,Eb=a.updateClassInstance;return{beginWork:function(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:p(b);break;case 2:u(b);break;case 4:Y(b,b.stateNode.containerInfo);break;case 13:G(b)}return null}switch(b.tag){case 0:null!==a?D(\"155\"):void 0;var d=b.type,\ne=b.pendingProps,f=S(b);f=R(b,f);d=d(e,f);b.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,\"function\"===typeof f.getDerivedStateFromProps&&(e=Kc(b,d,e,b.memoizedState),null!==e&&void 0!==e&&(b.memoizedState=A({},b.memoizedState,e))),e=u(b),Jc(b,d),Db(b,c),a=l(a,b,!0,e,!1,c)):(b.tag=1,g(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,q()||\nb.memoizedProps!==c?(d=S(b),d=R(b,d),e=e(c,d),b.effectTag|=1,g(a,b,e),b.memoizedProps=c,a=b.child):a=r(a,b),a;case 2:e=u(b);null===a?null===b.stateNode?(Lc(b,b.pendingProps),Db(b,c),d=!0):d=Mc(b,c):d=Eb(a,b,c);f=!1;var h=b.updateQueue;null!==h&&null!==h.capturedValues&&(f=d=!0);return l(a,b,d,e,f,c);case 3:a:if(p(b),d=b.updateQueue,null!==d){f=b.memoizedState;e=Re(a,b,d,null,null,c);b.memoizedState=e;d=b.updateQueue;if(null!==d&&null!==d.capturedValues)d=null;else if(f===e){Wa();a=r(a,b);break a}else d=\ne.element;f=b.stateNode;(null===a||null===a.child)&&f.hydrate&&H(b)?(b.effectTag|=2,b.child=Ze(b,null,d,c)):(Wa(),g(a,b,d));b.memoizedState=e;a=b.child}else Wa(),a=r(a,b);return a;case 5:a:{x(b);null===a&&Cb(b);e=b.type;h=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!q()&&h===d){if(h=b.mode&1&&n(e,d))b.expirationTime=1073741823;if(!h||1073741823!==c){a=r(a,b);break a}}h=d.children;Q(e,d)?h=null:f&&Q(e,f)&&(b.effectTag|=16);v(a,b);1073741823!==c&&b.mode&1&&n(e,d)?(b.expirationTime=\n1073741823,b.memoizedProps=d,a=null):(g(a,b,h),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Cb(b),b.memoizedProps=b.pendingProps,null;case 8:b.tag=7;case 7:return e=b.pendingProps,q()||b.memoizedProps!==e||(e=b.memoizedProps),d=e.children,b.stateNode=null===a?Ze(b,b.stateNode,d,c):Ye(b,a.stateNode,d,c),b.memoizedProps=e,b.stateNode;case 9:return null;case 4:return Y(b,b.stateNode.containerInfo),e=b.pendingProps,q()||b.memoizedProps!==e?(null===a?b.child=Ye(b,null,e,c):g(a,b,e),b.memoizedProps=\ne,a=b.child):a=r(a,b),a;case 14:return c=b.type.render,c=c(b.pendingProps,b.ref),g(a,b,c),b.memoizedProps=c,b.child;case 10:return c=b.pendingProps,q()||b.memoizedProps!==c?(g(a,b,c),b.memoizedProps=c,a=b.child):a=r(a,b),a;case 11:return c=b.pendingProps.children,q()||null!==c&&b.memoizedProps!==c?(g(a,b,c),b.memoizedProps=c,a=b.child):a=r(a,b),a;case 13:return B(a,b,c);case 12:a:{d=b.type;f=b.pendingProps;h=b.memoizedProps;e=d._currentValue;var t=d._changedBits;if(q()||0!==t||h!==f){b.memoizedProps=\nf;var k=f.unstable_observedBits;if(void 0===k||null===k)k=1073741823;b.stateNode=k;if(0!==(t&k))z(b,d,t,c);else if(h===f){a=r(a,b);break a}c=f.children;c=c(e);g(a,b,c);a=b.child}else a=r(a,b)}return a;default:D(\"156\")}}}}\nfunction af(a,b,c,d,e){function f(a){a.effectTag|=4}var h=a.createInstance,g=a.createTextInstance,k=a.appendInitialChild,v=a.finalizeInitialChildren,l=a.prepareUpdate,p=a.persistence,z=b.getRootHostContainer,B=b.popHostContext,r=b.getHostContext,Q=b.popHostContainer,n=c.popContextProvider,x=c.popTopLevelContextObject,Y=d.popProvider,G=e.prepareToHydrateHostInstance,R=e.prepareToHydrateHostTextInstance,S=e.popHydrationState,q=void 0,u=void 0,t=void 0;a.mutation?(q=function(){},u=function(a,b,c){(b.updateQueue=\nc)&&f(b)},t=function(a,b,c,d){c!==d&&f(b)}):p?D(\"235\"):D(\"236\");return{completeWork:function(a,b,c){var d=b.pendingProps;switch(b.tag){case 1:return null;case 2:return n(b),a=b.stateNode,d=b.updateQueue,null!==d&&null!==d.capturedValues&&(b.effectTag&=-65,\"function\"===typeof a.componentDidCatch?b.effectTag|=256:d.capturedValues=null),null;case 3:Q(b);x(b);d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)S(b),b.effectTag&=-3;q(b);a=b.updateQueue;\nnull!==a&&null!==a.capturedValues&&(b.effectTag|=256);return null;case 5:B(b);c=z();var e=b.type;if(null!==a&&null!=b.stateNode){var p=a.memoizedProps,H=b.stateNode,y=r();H=l(H,e,p,d,c,y);u(a,b,H,e,p,d,c,y);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!d)return null===b.stateNode?D(\"166\"):void 0,null;a=r();if(S(b))G(b,c,a)&&f(b);else{p=h(e,d,c,a,b);a:for(y=b.child;null!==y;){if(5===y.tag||6===y.tag)k(p,y.stateNode);else if(4!==y.tag&&null!==y.child){y.child[\"return\"]=y;y=y.child;continue}if(y===b)break;\nfor(;null===y.sibling;){if(null===y[\"return\"]||y[\"return\"]===b)break a;y=y[\"return\"]}y.sibling[\"return\"]=y[\"return\"];y=y.sibling}v(p,e,d,c,a)&&f(b);b.stateNode=p}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)t(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d)return null===b.stateNode?D(\"166\"):void 0,null;a=z();c=r();S(b)?R(b)&&f(b):b.stateNode=g(d,a,c,b)}return null;case 7:(d=b.memoizedProps)?void 0:D(\"165\");b.tag=8;e=[];a:for((p=b.stateNode)&&(p[\"return\"]=b);null!==\np;){if(5===p.tag||6===p.tag||4===p.tag)D(\"247\");else if(9===p.tag)e.push(p.pendingProps.value);else if(null!==p.child){p.child[\"return\"]=p;p=p.child;continue}for(;null===p.sibling;){if(null===p[\"return\"]||p[\"return\"]===b)break a;p=p[\"return\"]}p.sibling[\"return\"]=p[\"return\"];p=p.sibling}p=d.handler;d=p(d.props,e);b.child=Ye(b,null!==a?a.child:null,d,c);return b.child;case 8:return b.tag=7,null;case 9:return null;case 14:return null;case 10:return null;case 11:return null;case 4:return Q(b),q(b),null;\ncase 13:return Y(b),null;case 12:return null;case 0:D(\"167\");default:D(\"156\")}}}}\nfunction bf(a,b,c,d,e){var f=a.popHostContainer,h=a.popHostContext,g=b.popContextProvider,k=b.popTopLevelContextObject,v=c.popProvider;return{throwException:function(a,b,c){b.effectTag|=512;b.firstEffect=b.lastEffect=null;b={value:c,source:b,stack:Bc(b)};do{switch(a.tag){case 3:Oe(a);a.updateQueue.capturedValues=[b];a.effectTag|=1024;return;case 2:if(c=a.stateNode,0===(a.effectTag&64)&&null!==c&&\"function\"===typeof c.componentDidCatch&&!e(c)){Oe(a);c=a.updateQueue;var d=c.capturedValues;null===d?\nc.capturedValues=[b]:d.push(b);a.effectTag|=1024;return}}a=a[\"return\"]}while(null!==a)},unwindWork:function(a){switch(a.tag){case 2:g(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return f(a),k(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return h(a),null;case 4:return f(a),null;case 13:return v(a),null;default:return null}},unwindInterruptedWork:function(a){switch(a.tag){case 2:g(a);break;case 3:f(a);k(a);break;case 5:h(a);break;case 4:f(a);break;case 13:v(a)}}}}\nfunction cf(a,b){var c=b.source;null===b.stack&&Bc(c);null!==c&&Ac(c);b=b.value;null!==a&&2===a.tag&&Ac(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}\nfunction df(a,b,c,d,e){function f(a){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(t){b(a,t)}else c.current=null}function h(a){\"function\"===typeof Je&&Je(a);switch(a.tag){case 2:f(a);var c=a.stateNode;if(\"function\"===typeof c.componentWillUnmount)try{c.props=a.memoizedProps,c.state=a.memoizedState,c.componentWillUnmount()}catch(t){b(a,t)}break;case 5:f(a);break;case 7:g(a.stateNode);break;case 4:p&&v(a)}}function g(a){for(var b=a;;)if(h(b),null===b.child||p&&4===b.tag){if(b===\na)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}else b.child[\"return\"]=b,b=b.child}function k(a){return 5===a.tag||3===a.tag||4===a.tag}function v(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b[\"return\"];a:for(;;){null===c?D(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c[\"return\"]}c=!0}if(5===\nb.tag||6===b.tag)g(b),e?S(d,b.stateNode):R(d,b.stateNode);else if(4===b.tag?d=b.stateNode.containerInfo:h(b),null!==b.child){b.child[\"return\"]=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"];4===b.tag&&(c=!1)}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}var l=a.getPublicInstance,p=a.mutation;a=a.persistence;p||(a?D(\"235\"):D(\"236\"));var z=p.commitMount,B=p.commitUpdate,r=p.resetTextContent,Q=p.commitTextUpdate,n=p.appendChild,\nx=p.appendChildToContainer,Y=p.insertBefore,G=p.insertInContainerBefore,R=p.removeChild,S=p.removeChildFromContainer;return{commitBeforeMutationLifeCycles:function(a,b){switch(b.tag){case 2:if(b.effectTag&2048&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;a.props=b.memoizedProps;a.state=b.memoizedState;b=a.getSnapshotBeforeUpdate(c,d);a.__reactInternalSnapshotBeforeUpdate=b}break;case 3:case 5:case 6:case 4:break;default:D(\"163\")}},commitResetTextContent:function(a){r(a.stateNode)},\ncommitPlacement:function(a){a:{for(var b=a[\"return\"];null!==b;){if(k(b)){var c=b;break a}b=b[\"return\"]}D(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:D(\"161\")}c.effectTag&16&&(r(b),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c[\"return\"]||k(c[\"return\"])){c=null;break a}c=c[\"return\"]}c.sibling[\"return\"]=c[\"return\"];for(c=c.sibling;5!==c.tag&&6!==\nc.tag;){if(c.effectTag&2)continue b;if(null===c.child||4===c.tag)continue b;else c.child[\"return\"]=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)c?d?G(b,e.stateNode,c):Y(b,e.stateNode,c):d?x(b,e.stateNode):n(b,e.stateNode);else if(4!==e.tag&&null!==e.child){e.child[\"return\"]=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e[\"return\"]||e[\"return\"]===a)return;e=e[\"return\"]}e.sibling[\"return\"]=e[\"return\"];e=e.sibling}},commitDeletion:function(a){v(a);\na[\"return\"]=null;a.child=null;a.alternate&&(a.alternate.child=null,a.alternate[\"return\"]=null)},commitWork:function(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&B(c,f,e,a,d,b)}break;case 6:null===b.stateNode?D(\"162\"):void 0;c=b.memoizedProps;Q(b.stateNode,null!==a?a.memoizedProps:c,c);break;case 3:break;default:D(\"163\")}},commitLifeCycles:function(a,b,c){switch(c.tag){case 2:a=\nc.stateNode;if(c.effectTag&4)if(null===b)a.props=c.memoizedProps,a.state=c.memoizedState,a.componentDidMount();else{var d=b.memoizedProps;b=b.memoizedState;a.props=c.memoizedProps;a.state=c.memoizedState;a.componentDidUpdate(d,b,a.__reactInternalSnapshotBeforeUpdate)}c=c.updateQueue;null!==c&&Se(c,a);break;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=l(c.child.stateNode);break;case 2:a=c.child.stateNode}Se(b,a)}break;case 5:a=c.stateNode;null===b&&c.effectTag&\n4&&z(a,c.type,c.memoizedProps,c);break;case 6:break;case 4:break;default:D(\"163\")}},commitErrorLogging:function(a,b){switch(a.tag){case 2:var c=a.type;b=a.stateNode;var d=a.updateQueue;null===d||null===d.capturedValues?D(\"264\"):void 0;var f=d.capturedValues;d.capturedValues=null;\"function\"!==typeof c.getDerivedStateFromCatch&&e(b);b.props=a.memoizedProps;b.state=a.memoizedState;for(c=0;c<f.length;c++){d=f[c];var l=d.value,g=d.stack;cf(a,d);b.componentDidCatch(l,{componentStack:null!==g?g:\"\"})}break;\ncase 3:c=a.updateQueue;null===c||null===c.capturedValues?D(\"264\"):void 0;f=c.capturedValues;c.capturedValues=null;for(c=0;c<f.length;c++)d=f[c],cf(a,d),b(d.value);break;default:D(\"265\")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=l(c);break;default:a=c}\"function\"===typeof b?b(a):b.current=a}},commitDetachRef:function(a){a=a.ref;null!==a&&(\"function\"===typeof a?a(null):a.current=null)}}}var ef={};\nfunction ff(a,b){function c(a){a===ef?D(\"174\"):void 0;return a}var d=a.getChildHostContext,e=a.getRootHostContext;a=b.createCursor;var f=b.push,h=b.pop,g=a(ef),k=a(ef),v=a(ef);return{getHostContext:function(){return c(g.current)},getRootHostContainer:function(){return c(v.current)},popHostContainer:function(a){h(g,a);h(k,a);h(v,a)},popHostContext:function(a){k.current===a&&(h(g,a),h(k,a))},pushHostContainer:function(a,b){f(v,b,a);f(k,a,a);f(g,ef,a);b=e(b);h(g,a);f(g,b,a)},pushHostContext:function(a){var b=\nc(v.current),e=c(g.current);b=d(e,a.type,b);e!==b&&(f(k,a,a),f(g,b,a))}}}\nfunction gf(a){function b(a,b){var c=new xe(5,null,null,0);c.type=\"DELETED\";c.stateNode=b;c[\"return\"]=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function c(a,b){switch(a.tag){case 5:return b=f(b,a.type,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;case 6:return b=h(b,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;default:return!1}}function d(a){for(a=a[\"return\"];null!==a&&5!==a.tag&&3!==a.tag;)a=a[\"return\"];p=a}var e=a.shouldSetTextContent;\na=a.hydration;if(!a)return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){D(\"175\")},prepareToHydrateHostTextInstance:function(){D(\"176\")},popHydrationState:function(){return!1}};var f=a.canHydrateInstance,h=a.canHydrateTextInstance,g=a.getNextHydratableSibling,k=a.getFirstHydratableChild,v=a.hydrateInstance,l=a.hydrateTextInstance,p=null,z=null,B=!1;return{enterHydrationState:function(a){z=\nk(a.stateNode.containerInfo);p=a;return B=!0},resetHydrationState:function(){z=p=null;B=!1},tryToClaimNextHydratableInstance:function(a){if(B){var d=z;if(d){if(!c(a,d)){d=g(d);if(!d||!c(a,d)){a.effectTag|=2;B=!1;p=a;return}b(p,z)}p=a;z=k(d)}else a.effectTag|=2,B=!1,p=a}},prepareToHydrateHostInstance:function(a,b,c){b=v(a.stateNode,a.type,a.memoizedProps,b,c,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return l(a.stateNode,a.memoizedProps,a)},popHydrationState:function(a){if(a!==\np)return!1;if(!B)return d(a),B=!0,!1;var c=a.type;if(5!==a.tag||\"head\"!==c&&\"body\"!==c&&!e(c,a.memoizedProps))for(c=z;c;)b(a,c),c=g(c);d(a);z=p?g(a.stateNode):null;return!0}}}\nfunction hf(a){function b(a,b,c){a=a.stateNode;a.__reactInternalMemoizedUnmaskedChildContext=b;a.__reactInternalMemoizedMaskedChildContext=c}function c(a){return 2===a.tag&&null!=a.type.childContextTypes}function d(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:D(\"108\",Ac(a)||\"Unknown\",e);return A({},b,c)}var e=a.createCursor,f=a.push,h=a.pop,g=e(ka),k=e(!1),v=ka;return{getUnmaskedContext:function(a){return c(a)?\nv:g.current},cacheContext:b,getMaskedContext:function(a,c){var d=a.type.contextTypes;if(!d)return ka;var e=a.stateNode;if(e&&e.__reactInternalMemoizedUnmaskedChildContext===c)return e.__reactInternalMemoizedMaskedChildContext;var f={},g;for(g in d)f[g]=c[g];e&&b(a,c,f);return f},hasContextChanged:function(){return k.current},isContextConsumer:function(a){return 2===a.tag&&null!=a.type.contextTypes},isContextProvider:c,popContextProvider:function(a){c(a)&&(h(k,a),h(g,a))},popTopLevelContextObject:function(a){h(k,\na);h(g,a)},pushTopLevelContextObject:function(a,b,c){null!=g.cursor?D(\"168\"):void 0;f(g,b,a);f(k,c,a)},processChildContext:d,pushContextProvider:function(a){if(!c(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ka;v=g.current;f(g,b,a);f(k,k.current,a);return!0},invalidateContextProvider:function(a,b){var c=a.stateNode;c?void 0:D(\"169\");if(b){var e=d(a,v);c.__reactInternalMemoizedMergedChildContext=e;h(k,a);h(g,a);f(g,e,a)}else h(k,a);f(k,b,a)},findCurrentUnmaskedContext:function(a){for(2!==\nxd(a)||2!==a.tag?D(\"170\"):void 0;3!==a.tag;){if(c(a))return a.stateNode.__reactInternalMemoizedMergedChildContext;(a=a[\"return\"])?void 0:D(\"171\")}return a.stateNode.context}}}\nfunction jf(a){var b=a.createCursor,c=a.push,d=a.pop,e=b(null),f=b(null),h=b(0);return{pushProvider:function(a){var b=a.type._context;c(h,b._changedBits,a);c(f,b._currentValue,a);c(e,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode},popProvider:function(a){var b=h.current,c=f.current;d(e,a);d(f,a);d(h,a);a=a.type._context;a._currentValue=c;a._changedBits=b}}}\nfunction kf(){var a=[],b=-1;return{createCursor:function(a){return{current:a}},isEmpty:function(){return-1===b},pop:function(c){0>b||(c.current=a[b],a[b]=null,b--)},push:function(c,d){b++;a[b]=c.current;c.current=d},checkThatStackIsEmpty:function(){},resetStackAfterFatalErrorInDev:function(){}}}\nfunction lf(a){function b(){if(null!==I)for(var a=I[\"return\"];null!==a;)Lc(a),a=a[\"return\"];Ya=null;Z=0;I=null;Nc=!1}function c(a){return null!==ya&&ya.has(a)}function d(a){for(;;){var b=a.alternate,c=a[\"return\"],d=a.sibling;if(0===(a.effectTag&512)){b=Cb(b,a,Z);var e=a;if(1073741823===Z||1073741823!==e.expirationTime){b:switch(e.tag){case 3:case 2:var f=e.updateQueue;f=null===f?0:f.expirationTime;break b;default:f=0}for(var g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=\ng.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{Nc=!0;break}}else{a=Kc(a);if(null!==a)return a.effectTag&=2559,a;null!==c&&(c.firstEffect=c.lastEffect=\nnull,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}function e(a){var b=Wa(a.alternate,a,Z);null===b&&(b=d(a));nc.current=null;return b}function f(a,c,f){ca?D(\"243\"):void 0;ca=!0;if(c!==Z||a!==Ya||null===I)b(),Ya=a,Z=c,I=ze(Ya.current,null,Z),a.pendingCommitExpirationTime=0;var g=!1;do{try{if(f)for(;null!==I&&!S();)I=e(I);else for(;null!==I;)I=e(I)}catch(Oc){if(null===I){g=!0;q(Oc);break}f=I;var h=f[\"return\"];if(null===h){g=!0;q(Oc);break}Jc(h,f,Oc);I=d(f)}break}while(1);\nca=!1;if(g||null!==I)return null;if(Nc)return a.pendingCommitExpirationTime=c,a.current.alternate;D(\"262\")}function h(a,b,c,d){a={value:c,source:a,stack:Bc(a)};Pe(b,{expirationTime:d,partialState:null,callback:null,isReplace:!1,isForced:!1,capturedValue:a,next:null});v(b,d)}function g(a,b){a:{ca&&!Za?D(\"263\"):void 0;for(var d=a[\"return\"];null!==d;){switch(d.tag){case 2:var e=d.stateNode;if(\"function\"===typeof d.type.getDerivedStateFromCatch||\"function\"===typeof e.componentDidCatch&&!c(e)){h(a,d,b,\n1);a=void 0;break a}break;case 3:h(a,d,b,1);a=void 0;break a}d=d[\"return\"]}3===a.tag&&h(a,a,b,1);a=void 0}return a}function k(a){a=0!==ia?ia:ca?Za?1:Z:a.mode&1?za?10*(((l()+15)/10|0)+1):25*(((l()+500)/25|0)+1):1;za&&(0===da||a>da)&&(da=a);return a}function v(a,c){a:{for(;null!==a;){if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>c)&&(a.alternate.expirationTime=c);if(null===a[\"return\"])if(3===a.tag){var d=\na.stateNode;!ca&&0!==Z&&c<Z&&b();ca&&!Za&&Ya===d||B(d,c);Fb>xg&&D(\"185\")}else{c=void 0;break a}a=a[\"return\"]}c=void 0}return c}function l(){ye=Ic()-Pc;return yg=(ye/10|0)+2}function p(a,b,c,d,e){var f=ia;ia=1;try{return a(b,c,d,e)}finally{ia=f}}function z(a){if(0!==Gb){if(a>Gb)return;mg(Qc)}var b=Ic()-Pc;Gb=a;Qc=lg(Q,{timeout:10*(a-2)-b})}function B(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===K?(la=K=a,a.nextScheduledRoot=a):(K=K.nextScheduledRoot=a,K.nextScheduledRoot=la);\nelse{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}T||(J?Hb&&(aa=a,P=1,G(a,1,!1)):1===b?n():z(b))}function r(){var a=0,b=null;if(null!==K)for(var c=K,d=la;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===K?D(\"244\"):void 0;if(d===d.nextScheduledRoot){la=K=d.nextScheduledRoot=null;break}else if(d===la)la=e=d.nextScheduledRoot,K.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===K){K=c;K.nextScheduledRoot=la;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=\nd.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===K)break;c=d;d=d.nextScheduledRoot}}c=aa;null!==c&&c===b&&1===a?Fb++:Fb=0;aa=b;P=a}function Q(a){x(0,!0,a)}function n(){x(1,!1,null)}function x(a,b,c){$a=c;r();if(b)for(;null!==aa&&0!==P&&(0===a||a>=P)&&(!Ib||l()>=P);)G(aa,P,!Ib),r();else for(;null!==aa&&0!==P&&(0===a||a>=P);)G(aa,P,!1),r();null!==$a&&(Gb=0,Qc=-1);0!==P&&z(P);$a=null;Ib=!1;Y()}function Y(){Fb=0;if(null!==Aa){var a=Aa;Aa=null;for(var b=\n0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(wg){Ba||(Ba=!0,Jb=wg)}}}if(Ba)throw a=Jb,Jb=null,Ba=!1,a;}function G(a,b,c){T?D(\"245\"):void 0;T=!0;c?(c=a.finishedWork,null!==c?R(a,c,b):(a.finishedWork=null,c=f(a,b,!0),null!==c&&(S()?a.finishedWork=c:R(a,c,b)))):(c=a.finishedWork,null!==c?R(a,c,b):(a.finishedWork=null,c=f(a,b,!1),null!==c&&R(a,c,b)));T=!1}function R(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Aa?Aa=[d]:Aa.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=\n0;return}a.finishedWork=null;Za=ca=!0;c=b.stateNode;c.current===b?D(\"177\"):void 0;d=c.pendingCommitExpirationTime;0===d?D(\"261\"):void 0;c.pendingCommitExpirationTime=0;var e=l();nc.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var f=b.firstEffect}else f=b;else f=b.firstEffect;zg(c.containerInfo);for(w=f;null!==w;){var h=!1,k=void 0;try{for(;null!==w;)w.effectTag&2048&&Db(w.alternate,w),w=w.nextEffect}catch(ab){h=!0,k=ab}h&&(null===w?D(\"178\"):void 0,g(w,k),null!==\nw&&(w=w.nextEffect))}for(w=f;null!==w;){h=!1;k=void 0;try{for(;null!==w;){var p=w.effectTag;p&16&&Mc(w);if(p&128){var n=w.alternate;null!==n&&kg(n)}switch(p&14){case 2:Eb(w);w.effectTag&=-3;break;case 6:Eb(w);w.effectTag&=-3;we(w.alternate,w);break;case 4:we(w.alternate,w);break;case 8:gg(w)}w=w.nextEffect}}catch(ab){h=!0,k=ab}h&&(null===w?D(\"178\"):void 0,g(w,k),null!==w&&(w=w.nextEffect))}Ag(c.containerInfo);c.current=b;for(w=f;null!==w;){p=!1;n=void 0;try{for(f=c,h=e,k=d;null!==w;){var r=w.effectTag;\nr&36&&hg(f,w.alternate,w,h,k);r&256&&ig(w,q);r&128&&jg(w);var t=w.nextEffect;w.nextEffect=null;w=t}}catch(ab){p=!0,n=ab}p&&(null===w?D(\"178\"):void 0,g(w,n),null!==w&&(w=w.nextEffect))}ca=Za=!1;\"function\"===typeof Ie&&Ie(b.stateNode);b=c.current.expirationTime;0===b&&(ya=null);a.remainingExpirationTime=b}function S(){return null===$a||$a.timeRemaining()>Bg?!1:Ib=!0}function q(a){null===aa?D(\"246\"):void 0;aa.remainingExpirationTime=0;Ba||(Ba=!0,Jb=a)}var u=kf(),t=ff(a,u),y=hf(u);u=jf(u);var H=gf(a),\nWa=$e(a,t,y,u,H,v,k).beginWork,Cb=af(a,t,y,u,H).completeWork;t=bf(t,y,u,v,c);var Jc=t.throwException,Kc=t.unwindWork,Lc=t.unwindInterruptedWork;t=df(a,g,v,k,function(a){null===ya?ya=new Set([a]):ya.add(a)},l);var Db=t.commitBeforeMutationLifeCycles,Mc=t.commitResetTextContent,Eb=t.commitPlacement,gg=t.commitDeletion,we=t.commitWork,hg=t.commitLifeCycles,ig=t.commitErrorLogging,jg=t.commitAttachRef,kg=t.commitDetachRef,Ic=a.now,lg=a.scheduleDeferredCallback,mg=a.cancelDeferredCallback,zg=a.prepareForCommit,\nAg=a.resetAfterCommit,Pc=Ic(),yg=2,ye=Pc,Rc=0,ia=0,ca=!1,I=null,Ya=null,Z=0,w=null,Za=!1,Nc=!1,ya=null,la=null,K=null,Gb=0,Qc=-1,T=!1,aa=null,P=0,da=0,Ib=!1,Ba=!1,Jb=null,$a=null,J=!1,Hb=!1,za=!1,Aa=null,xg=1E3,Fb=0,Bg=1;return{recalculateCurrentTime:l,computeExpirationForFiber:k,scheduleWork:v,requestWork:B,flushRoot:function(a,b){T?D(\"253\"):void 0;aa=a;P=b;G(a,b,!1);n();Y()},batchedUpdates:function(a,b){var c=J;J=!0;try{return a(b)}finally{(J=c)||T||n()}},unbatchedUpdates:function(a,b){if(J&&!Hb){Hb=\n!0;try{return a(b)}finally{Hb=!1}}return a(b)},flushSync:function(a,b){T?D(\"187\"):void 0;var c=J;J=!0;try{return p(a,b)}finally{J=c,n()}},flushControlled:function(a){var b=J;J=!0;try{p(a)}finally{(J=b)||T||x(1,!1,null)}},deferredUpdates:function(a){var b=ia;ia=25*(((l()+500)/25|0)+1);try{return a()}finally{ia=b}},syncUpdates:p,interactiveUpdates:function(a,b,c){if(za)return a(b,c);J||T||0===da||(x(da,!1,null),da=0);var d=za,e=J;J=za=!0;try{return a(b,c)}finally{za=d,(J=e)||T||n()}},flushInteractiveUpdates:function(){T||\n0===da||(x(da,!1,null),da=0)},computeUniqueAsyncExpiration:function(){var a=25*(((l()+500)/25|0)+1);a<=Rc&&(a=Rc+1);return Rc=a},legacyContext:y}}\nfunction mf(a){function b(a,b,c,d,e,h){d=b.current;if(c){c=c._reactInternalFiber;var l=g(c);c=k(c)?v(c,l):l}else c=ka;null===b.context?b.context=c:b.pendingContext=c;b=h;Pe(d,{expirationTime:e,partialState:{element:a},callback:void 0===b?null:b,isReplace:!1,isForced:!1,capturedValue:null,next:null});f(d,e);return e}var c=a.getPublicInstance;a=lf(a);var d=a.recalculateCurrentTime,e=a.computeExpirationForFiber,f=a.scheduleWork,h=a.legacyContext,g=h.findCurrentUnmaskedContext,k=h.isContextProvider,v=\nh.processChildContext;return{createContainer:function(a,b,c){b=new xe(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a},updateContainer:function(a,c,f,h){var g=c.current,k=d();g=e(g);return b(a,c,f,k,g,h)},updateContainerAtExpirationTime:function(a,c,e,f,g){var h=d();return b(a,c,e,h,f,g)},flushRoot:a.flushRoot,\nrequestWork:a.requestWork,computeUniqueAsyncExpiration:a.computeUniqueAsyncExpiration,batchedUpdates:a.batchedUpdates,unbatchedUpdates:a.unbatchedUpdates,deferredUpdates:a.deferredUpdates,syncUpdates:a.syncUpdates,interactiveUpdates:a.interactiveUpdates,flushInteractiveUpdates:a.flushInteractiveUpdates,flushControlled:a.flushControlled,flushSync:a.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return c(a.child.stateNode);default:return a.child.stateNode}},\nfindHostInstance:function(a){var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?D(\"188\"):D(\"268\",Object.keys(a)));a=Bd(b);return null===a?null:a.stateNode},findHostInstanceWithNoPortals:function(a){a=Cd(a);return null===a?null:a.stateNode},injectIntoDevTools:function(a){var b=a.findFiberByHostInstance;return He(A({},a,{findHostInstanceByFiber:function(a){a=Bd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}}}\nvar nf=Object.freeze({default:mf}),of=nf&&mf||nf,pf=of[\"default\"]?of[\"default\"]:of;function qf(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:rc,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}var rf=\"object\"===typeof performance&&\"function\"===typeof performance.now,sf=void 0;sf=rf?function(){return performance.now()}:function(){return Date.now()};var tf=void 0,uf=void 0;\nif(m.canUseDOM)if(\"function\"!==typeof requestIdleCallback||\"function\"!==typeof cancelIdleCallback){var vf=null,wf=!1,xf=-1,yf=!1,zf=0,Af=33,Bf=33,Cf=void 0;Cf=rf?{didTimeout:!1,timeRemaining:function(){var a=zf-performance.now();return 0<a?a:0}}:{didTimeout:!1,timeRemaining:function(){var a=zf-Date.now();return 0<a?a:0}};var Df=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===Df){wf=!1;a=sf();if(0>=zf-a)if(-1!==\nxf&&xf<=a)Cf.didTimeout=!0;else{yf||(yf=!0,requestAnimationFrame(Ef));return}else Cf.didTimeout=!1;xf=-1;a=vf;vf=null;null!==a&&a(Cf)}},!1);var Ef=function(a){yf=!1;var b=a-zf+Bf;b<Bf&&Af<Bf?(8>b&&(b=8),Bf=b<Af?Af:b):Af=b;zf=a+Bf;wf||(wf=!0,window.postMessage(Df,\"*\"))};tf=function(a,b){vf=a;null!=b&&\"number\"===typeof b.timeout&&(xf=sf()+b.timeout);yf||(yf=!0,requestAnimationFrame(Ef));return 0};uf=function(){vf=null;wf=!1;xf=-1}}else tf=window.requestIdleCallback,uf=window.cancelIdleCallback;else tf=\nfunction(a){return setTimeout(function(){a({timeRemaining:function(){return Infinity},didTimeout:!1})})},uf=function(a){clearTimeout(a)};function Ff(a){var b=\"\";ea.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}function Gf(a,b){a=A({children:void 0},b);if(b=Ff(b.children))a.children=b;return a}\nfunction Hf(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction If(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Jf(a,b){null!=b.dangerouslySetInnerHTML?D(\"91\"):void 0;return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Kf(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?D(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:D(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\nfunction Lf(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Mf(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Nf={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Of(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function Pf(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Of(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Qf=void 0,Rf=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Nf.svg||\"innerHTML\"in a)a.innerHTML=b;else{Qf=Qf||document.createElement(\"div\");Qf.innerHTML=\"\\x3csvg\\x3e\"+b+\"\\x3c/svg\\x3e\";for(b=Qf.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Sf(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar Tf={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\nstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Uf=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Tf).forEach(function(a){Uf.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Tf[b]=Tf[a]})});\nfunction Vf(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||Tf.hasOwnProperty(e)&&Tf[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var Wf=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction Xf(a,b,c){b&&(Wf[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?D(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?D(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:D(\"61\")),null!=b.style&&\"object\"!==typeof b.style?D(\"62\",c()):void 0)}\nfunction Yf(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var Zf=C.thatReturns(\"\");\nfunction $f(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=ke(a);b=va[b];for(var d=0;d<b.length;d++){var e=b[d];c.hasOwnProperty(e)&&c[e]||(\"topScroll\"===e?Zd(\"topScroll\",\"scroll\",a):\"topFocus\"===e||\"topBlur\"===e?(Zd(\"topFocus\",\"focus\",a),Zd(\"topBlur\",\"blur\",a),c.topBlur=!0,c.topFocus=!0):\"topCancel\"===e?(ic(\"cancel\",!0)&&Zd(\"topCancel\",\"cancel\",a),c.topCancel=!0):\"topClose\"===e?(ic(\"close\",!0)&&Zd(\"topClose\",\"close\",a),c.topClose=!0):fe.hasOwnProperty(e)&&W(e,fe[e],a),c[e]=!0)}}\nfunction ag(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Nf.html&&(d=Of(a));d===Nf.html?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"\\x3cscript\\x3e\\x3c/script\\x3e\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function bg(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction cg(a,b,c,d){var e=Yf(b,c);switch(b){case \"iframe\":case \"object\":W(\"topLoad\",\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f in ge)ge.hasOwnProperty(f)&&W(f,ge[f],a);f=c;break;case \"source\":W(\"topError\",\"error\",a);f=c;break;case \"img\":case \"image\":case \"link\":W(\"topError\",\"error\",a);W(\"topLoad\",\"load\",a);f=c;break;case \"form\":W(\"topReset\",\"reset\",a);W(\"topSubmit\",\"submit\",a);f=c;break;case \"details\":W(\"topToggle\",\"toggle\",a);f=c;break;case \"input\":Wc(a,c);f=Vc(a,c);W(\"topInvalid\",\n\"invalid\",a);$f(d,\"onChange\");break;case \"option\":f=Gf(a,c);break;case \"select\":If(a,c);f=A({},c,{value:void 0});W(\"topInvalid\",\"invalid\",a);$f(d,\"onChange\");break;case \"textarea\":Kf(a,c);f=Jf(a,c);W(\"topInvalid\",\"invalid\",a);$f(d,\"onChange\");break;default:f=c}Xf(b,f,Zf);var h=f,g;for(g in h)if(h.hasOwnProperty(g)){var k=h[g];\"style\"===g?Vf(a,k,Zf):\"dangerouslySetInnerHTML\"===g?(k=k?k.__html:void 0,null!=k&&Rf(a,k)):\"children\"===g?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&Sf(a,k):\"number\"===typeof k&&\nSf(a,\"\"+k):\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&\"autoFocus\"!==g&&(ua.hasOwnProperty(g)?null!=k&&$f(d,g):null!=k&&Uc(a,g,k,e))}switch(b){case \"input\":lc(a);ad(a,c);break;case \"textarea\":lc(a);Mf(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?Hf(a,!!c.multiple,b,!1):null!=c.defaultValue&&Hf(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=C)}}\nfunction dg(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Vc(a,c);d=Vc(a,d);f=[];break;case \"option\":c=Gf(a,c);d=Gf(a,d);f=[];break;case \"select\":c=A({},c,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":c=Jf(a,c);d=Jf(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=C)}Xf(b,d,Zf);b=a=void 0;var h=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if(\"style\"===a){var g=c[a];for(b in g)g.hasOwnProperty(b)&&(h||\n(h={}),h[b]=\"\")}else\"dangerouslySetInnerHTML\"!==a&&\"children\"!==a&&\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&\"autoFocus\"!==a&&(ua.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];g=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==g&&(null!=k||null!=g))if(\"style\"===a)if(g){for(b in g)!g.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(h||(h={}),h[b]=\"\");for(b in k)k.hasOwnProperty(b)&&g[b]!==k[b]&&(h||(h={}),h[b]=k[b])}else h||(f||(f=[]),f.push(a,h)),\nh=k;else\"dangerouslySetInnerHTML\"===a?(k=k?k.__html:void 0,g=g?g.__html:void 0,null!=k&&g!==k&&(f=f||[]).push(a,\"\"+k)):\"children\"===a?g===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(a,\"\"+k):\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&(ua.hasOwnProperty(a)?(null!=k&&$f(e,a),f||g===k||(f=[])):(f=f||[]).push(a,k))}h&&(f=f||[]).push(\"style\",h);return f}\nfunction eg(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Yc(a,e);Yf(c,d);d=Yf(c,e);for(var f=0;f<b.length;f+=2){var h=b[f],g=b[f+1];\"style\"===h?Vf(a,g,Zf):\"dangerouslySetInnerHTML\"===h?Rf(a,g):\"children\"===h?Sf(a,g):Uc(a,h,g,d)}switch(c){case \"input\":Zc(a,e);break;case \"textarea\":Lf(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Hf(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?\nHf(a,!!e.multiple,e.defaultValue,!0):Hf(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction fg(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":W(\"topLoad\",\"load\",a);break;case \"video\":case \"audio\":for(var f in ge)ge.hasOwnProperty(f)&&W(f,ge[f],a);break;case \"source\":W(\"topError\",\"error\",a);break;case \"img\":case \"image\":case \"link\":W(\"topError\",\"error\",a);W(\"topLoad\",\"load\",a);break;case \"form\":W(\"topReset\",\"reset\",a);W(\"topSubmit\",\"submit\",a);break;case \"details\":W(\"topToggle\",\"toggle\",a);break;case \"input\":Wc(a,c);W(\"topInvalid\",\"invalid\",a);$f(e,\"onChange\");break;case \"select\":If(a,\nc);W(\"topInvalid\",\"invalid\",a);$f(e,\"onChange\");break;case \"textarea\":Kf(a,c),W(\"topInvalid\",\"invalid\",a),$f(e,\"onChange\")}Xf(b,c,Zf);d=null;for(var h in c)c.hasOwnProperty(h)&&(f=c[h],\"children\"===h?\"string\"===typeof f?a.textContent!==f&&(d=[\"children\",f]):\"number\"===typeof f&&a.textContent!==\"\"+f&&(d=[\"children\",\"\"+f]):ua.hasOwnProperty(h)&&null!=f&&$f(e,h));switch(b){case \"input\":lc(a);ad(a,c);break;case \"textarea\":lc(a);Mf(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&\n(a.onclick=C)}return d}function ng(a,b){return a.nodeValue!==b}\nvar og=Object.freeze({createElement:ag,createTextNode:bg,setInitialProperties:cg,diffProperties:dg,updateProperties:eg,diffHydratedProperties:fg,diffHydratedText:ng,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Zc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=\nc.parentNode;c=c.querySelectorAll(\"input[name\\x3d\"+JSON.stringify(\"\"+b)+'][type\\x3d\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Xa(d);e?void 0:D(\"90\");mc(d);Zc(d,e)}}}break;case \"textarea\":Lf(a,c);break;case \"select\":b=c.value,null!=b&&Hf(a,!!c.multiple,b,!1)}}});Tb.injectFiberControlledHostComponent(og);var pg=null,qg=null;\nfunction rg(a){this._expirationTime=X.computeUniqueAsyncExpiration();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}rg.prototype.render=function(a){this._defer?void 0:D(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new sg;X.updateContainerAtExpirationTime(a,b,null,c,d._onCommit);return d};\nrg.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nrg.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:D(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?D(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;X.flushRoot(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};rg.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function sg(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}sg.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nsg.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?D(\"191\",c):void 0;c()}}};function tg(a,b,c){this._internalRoot=X.createContainer(a,b,c)}tg.prototype.render=function(a,b){var c=this._internalRoot,d=new sg;b=void 0===b?null:b;null!==b&&d.then(b);X.updateContainer(a,c,null,d._onCommit);return d};\ntg.prototype.unmount=function(a){var b=this._internalRoot,c=new sg;a=void 0===a?null:a;null!==a&&c.then(a);X.updateContainer(null,b,null,c._onCommit);return c};tg.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new sg;c=void 0===c?null:c;null!==c&&e.then(c);X.updateContainer(b,d,a,e._onCommit);return e};\ntg.prototype.createBatch=function(){var a=new rg(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function ug(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction vg(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nvar X=pf({getRootHostContext:function(a){var b=a.nodeType;switch(b){case 9:case 11:a=(a=a.documentElement)?a.namespaceURI:Pf(null,\"\");break;default:b=8===b?a.parentNode:a,a=b.namespaceURI||null,b=b.tagName,a=Pf(a,b)}return a},getChildHostContext:function(a,b){return Pf(a,b)},getPublicInstance:function(a){return a},prepareForCommit:function(){pg=Vd;var a=fa();if(ne(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{var c=window.getSelection&&window.getSelection();\nif(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(B){b=null;break a}var f=0,h=-1,g=-1,k=0,v=0,l=a,p=null;b:for(;;){for(var z;;){l!==b||0!==d&&3!==l.nodeType||(h=f+d);l!==e||0!==c&&3!==l.nodeType||(g=f+c);3===l.nodeType&&(f+=l.nodeValue.length);if(null===(z=l.firstChild))break;p=l;l=z}for(;;){if(l===a)break b;p===b&&++k===d&&(h=f);p===e&&++v===c&&(g=f);if(null!==(z=l.nextSibling))break;l=p;p=l.parentNode}l=z}b=-1===h||-1===g?null:\n{start:h,end:g}}else b=null}b=b||{start:0,end:0}}else b=null;qg={focusedElem:a,selectionRange:b};Wd(!1)},resetAfterCommit:function(){var a=qg,b=fa(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&ja(document.documentElement,c)){if(ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(window.getSelection){b=window.getSelection();var e=c[mb()].length;a=Math.min(d.start,e);d=void 0===d.end?a:Math.min(d.end,e);!b.extend&&a>\nd&&(e=d,d=a,a=e);e=me(c,a);var f=me(c,d);if(e&&f&&(1!==b.rangeCount||b.anchorNode!==e.node||b.anchorOffset!==e.offset||b.focusNode!==f.node||b.focusOffset!==f.offset)){var h=document.createRange();h.setStart(e.node,e.offset);b.removeAllRanges();a>d?(b.addRange(h),b.extend(f.node,f.offset)):(h.setEnd(f.node,f.offset),b.addRange(h))}}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,\na.element.scrollTop=a.top}qg=null;Wd(pg);pg=null},createInstance:function(a,b,c,d,e){a=ag(a,b,c,d);a[F]=e;a[Ta]=b;return a},appendInitialChild:function(a,b){a.appendChild(b)},finalizeInitialChildren:function(a,b,c,d){cg(a,b,c,d);return vg(b,c)},prepareUpdate:function(a,b,c,d,e){return dg(a,b,c,d,e)},shouldSetTextContent:function(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===\ntypeof b.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(a,b){return!!b.hidden},createTextInstance:function(a,b,c,d){a=bg(a,b);a[F]=d;return a},now:sf,mutation:{commitMount:function(a,b,c){vg(b,c)&&a.focus()},commitUpdate:function(a,b,c,d,e){a[Ta]=e;eg(a,b,c,d,e)},resetTextContent:function(a){Sf(a,\"\")},commitTextUpdate:function(a,b,c){a.nodeValue=c},appendChild:function(a,b){a.appendChild(b)},appendChildToContainer:function(a,b){8===a.nodeType?a.parentNode.insertBefore(b,a):a.appendChild(b)},\ninsertBefore:function(a,b,c){a.insertBefore(b,c)},insertInContainerBefore:function(a,b,c){8===a.nodeType?a.parentNode.insertBefore(b,c):a.insertBefore(b,c)},removeChild:function(a,b){a.removeChild(b)},removeChildFromContainer:function(a,b){8===a.nodeType?a.parentNode.removeChild(b):a.removeChild(b)}},hydration:{canHydrateInstance:function(a,b){return 1!==a.nodeType||b.toLowerCase()!==a.nodeName.toLowerCase()?null:a},canHydrateTextInstance:function(a,b){return\"\"===b||3!==a.nodeType?null:a},getNextHydratableSibling:function(a){for(a=\na.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},getFirstHydratableChild:function(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},hydrateInstance:function(a,b,c,d,e,f){a[F]=f;a[Ta]=c;return fg(a,b,c,e,d)},hydrateTextInstance:function(a,b,c){a[F]=c;return ng(a,b)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},didNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},\ndidNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:tf,cancelDeferredCallback:uf}),Cg=X;ac=Cg.batchedUpdates;bc=Cg.interactiveUpdates;cc=Cg.flushInteractiveUpdates;\nfunction Dg(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new tg(a,!1,b)}\nfunction Eg(a,b,c,d,e){ug(c)?void 0:D(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var h=e;e=function(){var a=X.getPublicRootInstance(f._internalRoot);h.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Dg(c,d);if(\"function\"===typeof e){var g=e;e=function(){var a=X.getPublicRootInstance(f._internalRoot);g.call(a)}}X.unbatchedUpdates(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return X.getPublicRootInstance(f._internalRoot)}\nfunction Fg(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;ug(b)?void 0:D(\"200\");return qf(a,b,null,c)}\nvar Gg={createPortal:Fg,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:X.findHostInstance(a)},hydrate:function(a,b,c){return Eg(null,a,b,!0,c)},render:function(a,b,c){return Eg(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?D(\"38\"):void 0;return Eg(a,b,c,!1,d)},unmountComponentAtNode:function(a){ug(a)?void 0:D(\"40\");return a._reactRootContainer?(X.unbatchedUpdates(function(){Eg(null,null,a,!1,function(){a._reactRootContainer=\nnull})}),!0):!1},unstable_createPortal:function(){return Fg.apply(void 0,arguments)},unstable_batchedUpdates:X.batchedUpdates,unstable_deferredUpdates:X.deferredUpdates,flushSync:X.flushSync,unstable_flushControlled:X.flushControlled,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ra,EventPluginRegistry:Ca,EventPropagators:kb,ReactControlledComponent:$b,ReactDOMComponentTree:bb,ReactDOMEventListener:$d},unstable_createRoot:function(a,b){return new tg(a,!0,null!=b&&!0===b.hydrate)}};\nX.injectIntoDevTools({findFiberByHostInstance:Ua,bundleType:0,version:\"16.3.2\",rendererPackageName:\"react-dom\"});var Hg=Object.freeze({default:Gg}),Ig=Hg&&Gg||Hg;module.exports=Ig[\"default\"]?Ig[\"default\"]:Ig;\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/** @license React v16.3.2\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var m=require(\"object-assign\"),n=require(\"fbjs/lib/invariant\"),p=require(\"fbjs/lib/emptyObject\"),q=require(\"fbjs/lib/emptyFunction\"),r=\"function\"===typeof Symbol&&Symbol[\"for\"],t=r?Symbol[\"for\"](\"react.element\"):60103,u=r?Symbol[\"for\"](\"react.portal\"):60106,v=r?Symbol[\"for\"](\"react.fragment\"):60107,w=r?Symbol[\"for\"](\"react.strict_mode\"):60108,x=r?Symbol[\"for\"](\"react.provider\"):60109,y=r?Symbol[\"for\"](\"react.context\"):60110,z=r?Symbol[\"for\"](\"react.async_mode\"):60111,A=r?Symbol[\"for\"](\"react.forward_ref\"):\n60112,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=arguments.length-1,e=\"http://reactjs.org/docs/error-decoder.html?invariant\\x3d\"+a,c=0;c<b;c++)e+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[c+1]);n(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}var D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};\nfunction E(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||D}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?C(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||D}var H=G.prototype=new F;\nH.constructor=G;m(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J=Object.prototype.hasOwnProperty,K={key:!0,ref:!0,__self:!0,__source:!0};\nfunction L(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)J.call(b,c)&&!K.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var k=Array(f),l=0;l<f;l++)k[l]=arguments[l+2];d.children=k}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:I.current}}\nfunction M(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={\"\\x3d\":\"\\x3d0\",\":\":\"\\x3d2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var N=/\\/+/g,O=[];function P(a,b,e,c){if(O.length){var d=O.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function Q(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>O.length&&O.push(a)}\nfunction R(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+S(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+S(d,h);g+=R(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),\nh=0;!(d=a.next()).done;)d=d.value,f=b+S(d,h++),g+=R(d,f,e,c);else\"object\"===d&&(e=\"\"+a,C(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function S(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function T(a,b){a.func.call(a.context,b,a.count++)}\nfunction U(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,e,q.thatReturnsArgument):null!=a&&(M(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(N,\"$\\x26/\")+\"/\")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function V(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(N,\"$\\x26/\")+\"/\");b=P(b,g,c,d);null==a||R(a,\"\",U,b);Q(b)}\nvar W={Children:{map:function(a,b,e){if(null==a)return a;var c=[];V(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=P(null,null,b,e);null==a||R(a,\"\",T,b);Q(b)},count:function(a){return null==a?0:R(a,\"\",q.thatReturnsNull,null)},toArray:function(a){var b=[];V(a,b,null,q.thatReturnsArgument);return b},only:function(a){M(a)?void 0:C(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:y,\n_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_changedBits:0,Provider:null,Consumer:null};a.Provider={$$typeof:x,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:A,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:z,createElement:L,cloneElement:function(a,b,e){null===a||void 0===a?C(\"267\",a):void 0;var c=void 0,d=m({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=I.current);void 0!==b.key&&(g=\"\"+b.key);var k=void 0;a.type&&a.type.defaultProps&&\n(k=a.type.defaultProps);for(c in b)J.call(b,c)&&!K.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==k?k[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){k=Array(c);for(var l=0;l<c;l++)k[l]=arguments[l+2];d.children=k}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=L.bind(null,a);b.type=a;return b},isValidElement:M,version:\"16.3.2\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:I,assign:m}},X=Object.freeze({default:W}),\nY=X&&W||X;module.exports=Y[\"default\"]?Y[\"default\"]:Y;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport HanziWriter from \"hanzi-writer\";\r\nimport { characterList } from \"./characters\"\r\n\r\nclass HelloMessage extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.resetQuiz = this.resetQuiz.bind(this)\r\n    this.loadNewCharacter = this.loadNewCharacter.bind(this)\r\n    this.state = {}\r\n    characterList.forEach(cl => {\r\n      if(!cl.data) {\r\n        console.log('MISSING', cl.character)\r\n      }\r\n    })\r\n  }\r\n\r\n  loadNewCharacter(index) {\r\n    const { character, pinyin, translation, data } = characterList[index]\r\n    this.setState({\r\n      character,\r\n      data,\r\n      pinyin,\r\n      translation,\r\n      charIndex: index\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    this.loadNewCharacter(0)\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {character, data, pinyin, translation, constainerClassName = 'empty-writer'} = this.state;\r\n\r\n    if(data) {\r\n      this.writer = HanziWriter.create('character-writer-container', character, {\r\n        width: 200,\r\n        height: 200,\r\n        showCharacter: false,\r\n        padding: 5,\r\n        charDataLoader: function() {\r\n          return data;\r\n        }\r\n      });\r\n\r\n      this.writer.quiz({\r\n        onComplete: (summaryData) => {\r\n          const gElement = document.querySelector(`#character-writer-container g`);\r\n          gElement.parentNode.removeChild(gElement)\r\n          this.loadNewCharacter(this.state.charIndex + 1)\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  resetQuiz() {\r\n    this.writer.quiz();\r\n  }\r\n\r\n  render() {\r\n    const {pinyin, translation} = this.state;\r\n\r\n    return (\r\n      <div class='character-container'>\r\n        <p className='pinyin-container'>{pinyin}</p>\r\n        <p className='translation-container'>{translation}</p>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"200\" id='character-writer-container' className='character-svg'>\r\n          <line x1=\"0\" y1=\"0\" x2=\"200\" y2=\"200\" stroke=\"#DDD\" />\r\n          <line x1=\"200\" y1=\"0\" x2=\"0\" y2=\"200\" stroke=\"#DDD\" />\r\n          <line x1=\"100\" y1=\"0\" x2=\"100\" y2=\"200\" stroke=\"#DDD\" />\r\n          <line x1=\"0\" y1=\"100\" x2=\"200\" y2=\"100\" stroke=\"#DDD\" />\r\n        </svg>\r\n        <button onClick={this.resetQuiz} class='reset-button'>Reset</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\nvar app = {\r\n    // Application Constructor\r\n    initialize: function() {\r\n        this.bindEvents();\r\n    },\r\n    // Bind Event Listeners\r\n    //\r\n    // Bind any events that are required on startup. Common events are:\r\n    // 'load', 'deviceready', 'offline', and 'online'.\r\n    bindEvents: function() {\r\n        document.addEventListener('deviceready', this.onDeviceReady, false);\r\n    },\r\n    // deviceready Event Handler\r\n    //\r\n    // The scope of 'this' is the event. In order to call the 'receivedEvent'\r\n    // function, we must explicitly call 'app.receivedEvent(...);'\r\n    onDeviceReady: function() {\r\n        app.receivedEvent('deviceready');\r\n    },\r\n    // Update DOM on a Received Event\r\n    receivedEvent: function(id) {\r\n        var mountNode = document.getElementById(\"reactApp\");\r\n        console.log('START APP')\r\n        ReactDOM.render(<HelloMessage name=\"Muthu3\" />, mountNode);\r\n    }\r\n};\r\n\r\napp.initialize()\r\n","export const charData = \n{\"strokes\": [\"M 116 572 Q 106 579 74 585 Q 62 589 59 584 Q 52 578 60 563 Q 88 494 102 383 Q 103 350 121 327 Q 137 306 143 321 Q 149 337 147 369 L 143 403 Q 127 509 124 543 C 121 569 121 569 116 572 Z\", \"M 281 427 Q 297 524 324 555 Q 346 583 322 596 Q 301 606 272 623 Q 250 635 210 606 Q 153 585 116 572 C 88 562 95 536 124 543 Q 131 544 142 548 Q 182 560 215 568 Q 237 574 244 565 Q 253 558 245 518 Q 238 476 228 427 C 222 398 276 397 281 427 Z\", \"M 147 369 Q 153 369 160 370 Q 203 382 298 393 Q 308 394 309 404 Q 309 411 281 427 C 264 437 257 435 228 427 Q 182 414 143 403 C 114 395 117 368 147 369 Z\", \"M 575 665 Q 600 711 607 718 Q 614 725 612 736 Q 609 748 594 760 Q 546 793 516 781 Q 506 778 510 764 Q 538 664 382 435 Q 372 423 363 410 Q 314 346 188 218 Q 179 211 192 209 Q 220 215 330 303 Q 331 307 336 309 Q 445 411 563 641 L 575 665 Z\", \"M 563 641 Q 659 508 781 369 Q 800 347 835 347 Q 950 348 988 353 Q 998 356 1000 361 Q 1000 367 984 374 Q 831 426 773 472 Q 682 551 575 665 C 554 687 545 665 563 641 Z\", \"M 456 380 Q 420 373 447 358 Q 487 334 541 350 Q 601 363 663 377 Q 691 384 696 389 Q 703 396 699 405 Q 692 415 664 422 Q 634 426 605 415 Q 574 403 539 394 Q 502 385 456 380 Z\", \"M 436 229 Q 423 236 390 241 Q 377 245 373 239 Q 366 232 375 215 Q 406 148 424 39 Q 428 6 446 -15 Q 465 -40 472 -22 Q 478 -6 476 25 L 470 62 Q 454 161 451 194 C 448 224 448 224 436 229 Z\", \"M 721 101 Q 743 176 777 202 Q 795 223 779 242 Q 695 305 639 273 Q 546 245 436 229 C 406 225 422 186 451 194 Q 458 195 469 199 Q 557 214 642 229 Q 664 233 673 225 Q 683 216 681 197 Q 674 143 663 99 C 656 70 712 72 721 101 Z\", \"M 476 25 Q 506 40 743 60 Q 753 61 755 70 Q 756 79 724 100 Q 723 101 721 101 L 663 99 Q 555 75 470 62 C 440 57 448 15 476 25 Z\"], \"medians\": [[[67, 576], [93, 553], [98, 536], [133, 327]], [[126, 551], [138, 564], [244, 596], [276, 581], [286, 570], [259, 452], [235, 434]], [[153, 375], [168, 392], [226, 405], [280, 409], [300, 402]], [[520, 770], [541, 755], [559, 729], [524, 629], [474, 532], [415, 438], [365, 373], [291, 295], [193, 215]], [[578, 656], [578, 642], [689, 515], [809, 400], [846, 385], [992, 360]], [[448, 370], [473, 364], [510, 366], [631, 396], [687, 399]], [[382, 231], [413, 205], [420, 187], [460, -16]], [[445, 226], [456, 217], [474, 217], [665, 256], [695, 250], [727, 220], [702, 137], [670, 104]], [[476, 31], [493, 49], [659, 76], [714, 80], [745, 70]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 359 703 Q 383 681 409 652 Q 422 639 440 639 Q 450 639 457 653 Q 461 668 454 700 Q 445 730 355 754 Q 339 758 332 755 Q 326 751 328 738 Q 331 726 359 703 Z\", \"M 641 764 Q 620 733 543 647 Q 533 629 550 633 Q 599 660 684 716 Q 703 732 730 742 Q 752 752 742 771 Q 729 790 701 806 Q 676 821 663 818 Q 650 817 654 803 Q 657 784 641 764 Z\", \"M 500 524 Q 582 537 670 550 Q 731 562 741 570 Q 751 577 747 587 Q 740 600 709 610 Q 673 619 586 591 Q 445 558 313 551 Q 273 547 300 527 Q 342 502 419 513 Q 434 516 451 516 L 500 524 Z\", \"M 531 330 Q 585 336 871 335 Q 893 334 898 344 Q 905 357 887 372 Q 827 418 775 406 Q 678 390 525 369 L 462 362 Q 323 349 166 332 Q 144 331 160 311 Q 175 295 195 289 Q 217 282 236 287 Q 338 312 453 323 L 531 330 Z\", \"M 525 369 Q 532 400 538 438 Q 542 466 548 479 Q 555 486 550 498 Q 537 511 500 524 C 472 535 441 544 451 516 Q 452 512 456 506 Q 471 443 463 372 Q 462 368 462 362 L 453 323 Q 411 200 348 147 Q 308 110 201 60 Q 173 45 206 45 Q 258 42 357 93 Q 405 117 437 161 Q 482 218 509 309 L 525 369 Z\", \"M 509 309 Q 588 185 689 52 Q 708 30 742 30 Q 856 29 892 34 Q 902 35 905 41 Q 905 47 890 55 Q 739 127 675 181 Q 606 245 531 330 C 511 352 493 334 509 309 Z\"], \"medians\": [[[338, 747], [413, 697], [438, 659]], [[662, 808], [681, 787], [688, 767], [645, 722], [582, 667], [555, 651], [551, 642]], [[304, 541], [347, 532], [407, 534], [683, 583], [735, 582]], [[163, 321], [217, 311], [537, 352], [796, 372], [885, 352]], [[458, 513], [497, 486], [503, 476], [503, 453], [491, 354], [469, 280], [445, 227], [402, 162], [361, 124], [287, 82], [211, 55]], [[519, 322], [631, 180], [723, 88], [753, 74], [897, 41]]], \"radStrokes\": [0, 1]}","export const charData = \n{\"strokes\": [\"M 313 194 Q 347 169 390 129 Q 406 116 415 114 Q 424 115 429 125 Q 435 135 429 165 Q 422 192 401 204 Q 382 217 342 236 L 302 256 Q 277 269 244 283 Q 225 292 227 310 Q 246 367 265 424 L 278 465 Q 306 559 329 654 Q 339 699 357 723 Q 370 744 363 756 Q 350 772 306 800 Q 287 813 271 804 Q 258 798 268 782 Q 301 731 235 456 L 224 412 Q 197 333 184 311 Q 175 289 195 273 Q 241 251 279 221 L 313 194 Z\", \"M 279 221 Q 272 214 266 204 Q 238 170 187 135 Q 175 126 159 118 Q 143 108 129 98 Q 116 91 127 87 Q 199 81 310 191 Q 311 192 313 194 L 342 236 Q 346 246 354 255 Q 382 303 395 361 Q 414 448 434 478 Q 444 494 429 503 Q 386 539 363 532 Q 350 529 355 515 Q 362 499 363 481 L 361 451 Q 360 441 359 426 Q 350 336 302 256 L 279 221 Z\", \"M 363 481 Q 321 474 278 465 L 235 456 Q 178 449 118 438 Q 97 434 64 439 Q 51 439 48 430 Q 44 418 53 409 Q 72 391 101 369 Q 111 365 123 372 Q 195 412 224 412 L 265 424 Q 311 437 361 451 C 390 459 393 486 363 481 Z\", \"M 788 484 Q 676 468 556 440 Q 544 436 540 439 Q 536 443 544 460 Q 676 682 705 719 Q 717 729 709 743 Q 702 756 650 777 Q 631 784 622 779 Q 609 772 616 751 Q 638 687 520 497 Q 496 458 446 421 Q 431 408 436 396 Q 443 378 471 358 Q 483 348 496 359 Q 541 393 806 459 C 835 466 818 488 788 484 Z\", \"M 806 459 Q 837 411 853 404 Q 860 403 869 410 Q 882 420 876 464 Q 873 503 807 542 Q 765 567 742 578 Q 735 584 730 573 Q 729 560 737 549 Q 761 521 788 484 L 806 459 Z\", \"M 526 267 Q 514 271 488 277 Q 476 280 473 275 Q 466 268 475 253 Q 506 187 523 81 Q 526 50 544 28 Q 562 6 567 21 Q 574 40 569 74 L 563 111 Q 547 205 543 235 C 539 263 539 263 526 267 Z\", \"M 795 146 Q 814 224 846 252 Q 862 271 847 289 Q 831 302 776 325 Q 757 332 736 323 Q 655 289 526 267 C 496 262 513 231 543 235 Q 571 238 721 272 Q 740 276 748 269 Q 758 260 758 240 Q 752 191 744 149 C 739 119 787 117 795 146 Z\", \"M 569 74 Q 575 74 582 75 Q 655 93 811 107 Q 823 108 824 118 Q 824 127 795 146 C 780 156 773 155 744 149 Q 743 149 742 149 Q 643 124 563 111 C 533 106 539 72 569 74 Z\"], \"medians\": [[[276, 792], [300, 774], [320, 740], [262, 478], [205, 300], [210, 287], [234, 269], [387, 175], [405, 152], [414, 127]], [[364, 521], [398, 484], [368, 346], [338, 272], [275, 182], [207, 128], [132, 92]], [[62, 425], [111, 403], [202, 431], [336, 459], [357, 474]], [[630, 764], [661, 728], [656, 713], [610, 612], [524, 468], [505, 413], [547, 411], [782, 469], [793, 459]], [[739, 568], [832, 481], [853, 437], [855, 415]], [[482, 267], [508, 245], [516, 227], [556, 27]], [[536, 265], [545, 257], [567, 256], [739, 298], [763, 297], [799, 266], [775, 173], [751, 155]], [[571, 106], [584, 95], [749, 125], [793, 126], [814, 118]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 612 685 Q 634 691 660 694 Q 717 706 726 713 Q 736 722 731 731 Q 724 744 693 753 Q 663 760 557 728 Q 431 700 324 691 Q 284 687 312 667 Q 355 640 417 652 Q 487 665 561 677 L 612 685 Z\", \"M 653 401 Q 752 411 907 399 Q 932 396 938 405 Q 945 418 933 431 Q 902 459 857 480 Q 842 487 815 478 Q 742 462 667 451 Q 660 451 653 449 L 594 442 Q 453 429 407 421 L 350 414 Q 310 413 282 407 Q 209 395 101 394 Q 86 394 85 382 Q 85 369 104 354 Q 149 321 187 334 Q 229 350 342 365 Q 343 366 347 366 L 403 375 Q 460 387 594 395 L 653 401 Z\", \"M 407 421 Q 411 464 413 514 Q 417 535 419 546 Q 425 568 403 578 Q 354 603 337 601 Q 316 597 333 574 Q 354 535 350 414 L 347 366 Q 347 245 264 128 Q 216 77 200 61 Q 185 48 182 41 Q 179 34 192 34 Q 208 34 230 49 Q 273 77 300 106 Q 373 187 394 314 Q 398 342 403 375 L 407 421 Z\", \"M 599 -2 Q 605 -30 613 -41 Q 619 -48 627 -46 Q 645 -37 651 31 Q 658 115 656 197 Q 653 248 653 401 L 653 449 Q 653 554 665 632 Q 669 651 653 663 Q 628 679 612 685 C 585 698 551 705 561 677 Q 558 670 577 643 Q 587 622 593 530 Q 593 490 594 442 L 594 395 Q 588 68 599 -2 Z\"], \"medians\": [[[315, 681], [338, 674], [390, 673], [634, 720], [694, 728], [719, 725]], [[98, 381], [125, 369], [166, 363], [445, 405], [833, 443], [889, 430], [926, 414]], [[339, 587], [356, 577], [381, 547], [378, 400], [357, 262], [332, 196], [281, 115], [229, 66], [190, 42]], [[568, 674], [608, 651], [623, 631], [623, -35]]], \"radStrokes\": [1, 2, 3]}","export const charData = \n{\"strokes\": [\"M 148 511 Q 133 444 106 381 Q 93 345 115 315 Q 125 299 144 314 Q 163 333 172 367 Q 187 418 183 458 Q 183 492 172 515 Q 165 522 159 523 Q 152 520 148 511 Z\", \"M 321 592 Q 351 571 398 527 Q 410 515 424 516 Q 433 517 437 529 Q 441 542 433 567 Q 427 586 396 602 Q 332 626 321 623 C 291 622 297 609 321 592 Z\", \"M 321 623 Q 322 701 339 756 Q 348 772 345 785 Q 338 795 282 829 Q 258 845 237 830 Q 233 826 239 809 Q 273 760 274 709 Q 275 634 278 550 Q 275 403 272 242 Q 268 163 248 88 Q 236 49 263 -14 Q 270 -32 278 -35 Q 285 -42 292 -33 Q 299 -29 310 -8 Q 320 17 318 49 Q 317 101 321 588 Q 321 591 321 592 L 321 623 Z\", \"M 587 530 Q 632 588 657 629 Q 712 722 739 745 Q 758 764 740 779 Q 719 792 685 799 Q 654 805 641 797 Q 628 790 637 777 Q 655 743 608 638 Q 584 586 560 526 C 549 498 569 506 587 530 Z\", \"M 529 521 Q 520 530 501 536 Q 491 540 480 537 Q 473 533 479 520 Q 480 511 485 502 Q 509 451 495 243 Q 477 138 491 109 Q 497 97 506 85 Q 516 72 527 85 Q 539 101 539 127 L 542 167 Q 542 248 544 321 L 544 356 Q 544 476 549 487 C 552 505 552 505 529 521 Z\", \"M 744 144 Q 775 104 799 65 Q 809 46 820 47 Q 838 48 854 84 Q 873 124 869 173 Q 860 270 853 453 Q 852 487 869 510 Q 879 523 869 535 Q 848 556 792 580 Q 773 590 757 580 Q 715 561 587 530 L 560 526 Q 541 525 529 521 C 499 516 519 482 549 487 Q 564 488 740 524 Q 767 530 780 519 Q 810 492 793 175 Q 790 165 781 162 C 765 137 730 162 744 144 Z\", \"M 544 321 Q 547 321 552 320 Q 570 317 683 334 Q 744 344 750 349 Q 759 356 755 364 Q 748 376 720 384 Q 696 390 618 367 Q 614 367 544 356 C 514 351 514 324 544 321 Z\", \"M 539 127 Q 545 127 553 128 Q 614 140 744 144 C 774 145 792 146 781 162 Q 777 172 750 190 Q 732 200 697 193 Q 612 177 542 167 C 512 163 509 126 539 127 Z\"], \"medians\": [[[162, 513], [154, 425], [132, 351], [130, 324]], [[324, 615], [389, 574], [421, 532]], [[248, 824], [293, 783], [303, 760], [297, 289], [281, 70], [283, -21]], [[645, 786], [660, 780], [686, 752], [615, 601], [583, 545], [566, 532]], [[486, 529], [512, 503], [520, 479], [524, 369], [512, 144], [517, 90]], [[537, 518], [559, 507], [576, 509], [776, 554], [806, 539], [824, 520], [831, 163], [817, 127], [753, 142]], [[549, 327], [564, 340], [698, 361], [743, 360]], [[546, 133], [561, 150], [611, 158], [721, 170], [773, 162]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 288 599 Q 319 636 354 684 Q 379 723 401 741 Q 411 751 407 764 Q 404 777 378 800 Q 354 819 336 821 Q 317 820 324 798 Q 351 717 116 465 Q 106 456 104 450 Q 100 440 113 441 Q 149 445 240 546 Q 252 559 266 573 L 288 599 Z\", \"M 266 573 Q 278 561 279 490 Q 279 429 263 368 Q 259 352 266 324 Q 276 296 285 286 Q 300 273 309 295 Q 322 329 321 367 Q 322 499 328 529 Q 335 551 326 560 Q 302 588 288 599 C 265 619 251 599 266 573 Z\", \"M 499 670 Q 518 697 539 730 Q 552 755 565 768 Q 572 777 568 788 Q 564 798 540 815 Q 518 828 502 828 Q 486 827 494 808 Q 509 780 457 679 Q 432 633 396 582 Q 389 573 387 568 Q 384 558 396 561 Q 414 564 487 653 L 499 670 Z\", \"M 487 653 Q 488 652 490 649 Q 512 628 537 637 Q 607 664 687 680 Q 727 690 741 686 Q 754 677 752 669 Q 752 666 720 604 Q 713 594 717 588 Q 721 584 732 594 Q 820 652 860 665 Q 869 666 870 674 Q 871 687 843 702 Q 821 715 799 730 Q 772 745 758 738 Q 661 698 499 670 C 474 666 474 666 487 653 Z\", \"M 560 376 Q 532 380 505 383 Q 495 384 495 379 Q 496 373 506 367 Q 567 319 592 289 Q 605 276 617 288 Q 647 321 642 405 Q 630 528 646 569 Q 653 585 639 597 Q 617 615 592 624 Q 576 630 570 623 Q 564 617 574 604 Q 601 556 593 403 Q 590 387 581 379 Q 574 372 560 376 Z\", \"M 470 511 Q 443 465 409 426 Q 388 402 399 368 Q 403 352 424 361 Q 472 385 485 458 Q 494 486 490 508 Q 487 515 482 517 Q 475 517 470 511 Z\", \"M 684 499 Q 730 456 786 393 Q 799 374 814 371 Q 821 370 829 378 Q 839 391 829 430 Q 820 478 685 528 Q 676 532 675 521 Q 674 509 684 499 Z\", \"M 246 224 Q 218 160 178 103 Q 154 72 173 34 Q 180 15 202 27 Q 226 43 242 76 Q 267 122 270 163 Q 277 197 270 223 Q 266 232 259 233 Q 250 232 246 224 Z\", \"M 338 199 Q 359 88 442 33 Q 524 -18 740 -20 Q 788 -14 827 3 Q 854 15 855 31 Q 859 41 817 66 Q 753 112 703 164 Q 688 180 684 172 Q 681 165 687 150 Q 702 117 714 83 Q 718 64 713 55 Q 706 45 668 43 Q 502 39 429 103 Q 396 131 382 181 Q 375 206 362 211 Q 349 218 340 215 Q 334 212 338 199 Z\", \"M 490 234 Q 538 170 564 158 Q 577 154 587 165 Q 594 175 593 192 Q 584 234 505 268 Q 492 274 482 271 Q 476 271 477 259 Q 478 249 490 234 Z\", \"M 771 243 Q 808 212 849 172 Q 862 159 880 158 Q 890 159 897 173 Q 901 188 893 219 Q 887 244 849 265 Q 810 281 767 294 Q 751 298 744 295 Q 738 291 740 278 Q 744 266 771 243 Z\"], \"medians\": [[[335, 807], [355, 784], [362, 757], [328, 693], [219, 549], [143, 472], [113, 450]], [[288, 591], [290, 569], [303, 542], [291, 351], [295, 295]], [[502, 816], [514, 808], [529, 784], [519, 751], [453, 636], [394, 568]], [[494, 655], [538, 657], [739, 708], [770, 706], [794, 682], [779, 657], [720, 592]], [[578, 617], [616, 574], [615, 376], [598, 342], [570, 348], [501, 378]], [[480, 507], [448, 428], [414, 372]], [[685, 517], [788, 438], [815, 388]], [[258, 221], [244, 159], [224, 111], [200, 73], [190, 39]], [[345, 208], [358, 191], [391, 113], [450, 57], [521, 29], [611, 15], [708, 14], [742, 23], [764, 39], [744, 87], [689, 167]], [[488, 261], [558, 200], [571, 178]], [[750, 287], [839, 231], [858, 212], [877, 176]]], \"radStrokes\": [7, 8, 9, 10]}","export const charData = \n{\"strokes\": [\"M 304 745 Q 361 669 390 665 Q 406 664 414 684 Q 415 699 406 723 Q 396 742 369 752 Q 329 773 311 776 Q 301 777 298 765 Q 297 755 304 745 Z\", \"M 176 688 Q 231 541 186 227 Q 156 104 157 94 Q 157 63 179 37 Q 192 22 202 37 Q 239 76 240 242 Q 240 569 257 653 Q 258 672 242 683 Q 217 704 189 712 Q 179 715 172 706 Q 168 699 176 688 Z\", \"M 523 750 Q 507 751 511 740 Q 518 727 540 717 Q 552 708 587 716 Q 743 764 765 728 Q 795 662 790 235 Q 789 181 787 124 Q 786 82 771 71 Q 755 59 670 78 Q 652 81 654 71 Q 655 64 669 58 Q 744 10 784 -27 Q 806 -46 820 -44 Q 833 -40 844 -11 Q 859 37 856 106 Q 834 503 835 651 Q 835 691 847 715 Q 860 737 849 750 Q 839 765 790 790 Q 769 802 710 783 Q 569 756 523 750 Z\", \"M 318 426 Q 302 371 275 321 Q 260 294 277 262 Q 284 247 303 260 Q 348 302 345 378 Q 346 406 339 428 Q 335 435 329 435 Q 322 434 318 426 Z\", \"M 735 217 Q 734 227 718 246 Q 694 273 635 361 Q 631 368 625 369 Q 622 369 623 362 Q 630 322 635 275 Q 638 256 624 247 Q 599 228 519 247 Q 458 265 438 326 Q 428 366 424 410 Q 423 434 407 447 Q 394 459 387 453 Q 383 450 386 433 Q 390 414 396 363 Q 403 237 492 199 Q 597 151 723 207 Q 736 211 735 217 Z\", \"M 454 513 Q 487 465 515 450 Q 527 447 536 457 Q 542 467 541 481 Q 532 517 469 543 Q 468 544 467 544 Q 454 548 446 547 Q 440 546 441 536 Q 442 526 454 513 Z\", \"M 626 481 Q 663 447 705 396 Q 718 380 731 375 Q 738 374 745 382 Q 755 392 746 430 Q 737 473 628 507 Q 621 511 618 501 Q 618 491 626 481 Z\"], \"medians\": [[[310, 764], [372, 715], [391, 685]], [[182, 701], [222, 655], [225, 586], [221, 326], [209, 188], [190, 80], [191, 42]], [[521, 741], [562, 734], [702, 763], [756, 767], [784, 757], [808, 731], [822, 138], [813, 53], [800, 28], [787, 29], [662, 71]], [[329, 424], [323, 369], [291, 269]], [[392, 448], [407, 415], [416, 336], [431, 288], [464, 246], [509, 221], [574, 207], [603, 208], [637, 215], [671, 234], [663, 273], [629, 364]], [[450, 538], [497, 500], [520, 469]], [[627, 498], [706, 440], [723, 417], [733, 389]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 171 459 Q 147 381 112 311 Q 91 269 117 230 Q 129 209 152 227 Q 177 249 190 289 Q 211 344 208 392 Q 211 432 199 462 Q 192 472 185 472 Q 175 469 171 459 Z\", \"M 863 228 Q 859 243 834 262 Q 797 290 698 391 Q 691 398 685 398 Q 682 397 684 389 Q 708 338 732 281 Q 742 257 728 241 Q 689 208 550 226 Q 441 244 397 323 Q 370 377 355 435 Q 348 463 324 476 Q 306 486 299 478 Q 295 474 302 454 Q 312 429 335 363 Q 372 224 476 178 Q 495 171 521 163 Q 710 115 851 212 Q 866 221 863 228 Z\", \"M 441 617 Q 475 578 511 531 Q 524 515 541 513 Q 553 512 561 525 Q 568 541 564 574 Q 560 619 444 670 Q 428 677 420 675 Q 414 672 414 658 Q 415 645 441 617 Z\", \"M 760 585 Q 814 536 877 465 Q 896 441 914 437 Q 924 436 933 447 Q 948 463 932 514 Q 922 563 840 592 Q 789 613 761 621 Q 751 627 748 612 Q 747 596 760 585 Z\"], \"medians\": [[[185, 462], [176, 372], [133, 236]], [[306, 473], [333, 435], [369, 327], [400, 274], [429, 244], [471, 215], [538, 193], [634, 183], [693, 187], [748, 205], [784, 234], [773, 267], [691, 393]], [[425, 667], [520, 581], [542, 534]], [[761, 607], [838, 558], [886, 518], [915, 457]]]}","export const charData = \n{\"strokes\": [\"M 525 618 Q 535 684 545 744 Q 549 760 551 770 Q 555 779 557 785 Q 561 795 543 810 Q 512 828 490 833 Q 475 837 468 829 Q 461 822 468 808 Q 480 792 481 779 Q 487 703 486 612 C 486 582 520 588 525 618 Z\", \"M 430 563 Q 497 581 571 591 Q 656 604 690 600 C 720 599 721 637 691 635 Q 603 631 525 618 L 486 612 Q 405 602 335 583 Q 314 579 320 604 Q 324 635 331 669 Q 335 691 326 706 Q 292 745 268 741 Q 258 737 265 718 Q 283 673 275 630 Q 268 588 251 570 Q 232 554 239 540 Q 249 524 265 514 Q 278 505 288 513 Q 306 534 400 555 L 430 563 Z\", \"M 690 600 Q 691 581 697 566 Q 704 550 717 559 Q 744 581 760 660 Q 779 711 789 719 Q 799 732 791 747 Q 775 765 746 788 Q 734 797 722 792 Q 715 789 715 776 Q 724 764 719 702 Q 709 665 696 643 Q 693 640 691 635 L 690 600 Z\", \"M 336 346 Q 370 380 412 425 L 430 446 Q 452 474 472 486 Q 482 493 479 507 Q 478 520 455 545 Q 442 558 430 563 C 404 578 393 584 400 555 Q 401 552 402 548 Q 409 521 397 501 Q 357 432 302 372 Q 248 314 179 251 Q 169 244 165 238 Q 161 228 173 228 Q 206 234 326 338 L 336 346 Z\", \"M 412 425 Q 458 395 569 426 Q 605 438 617 430 Q 626 424 601 359 Q 520 107 239 -34 Q 229 -38 230 -44 Q 231 -48 239 -49 Q 266 -48 325 -25 Q 377 -6 431 35 Q 495 81 556 158 Q 616 236 674 359 Q 693 390 722 410 Q 740 419 740 429 Q 740 444 707 463 Q 667 488 652 489 Q 639 489 626 480 Q 511 447 446 446 Q 437 447 430 446 C 400 446 384 436 412 425 Z\", \"M 326 338 Q 326 328 335 320 Q 375 280 424 222 Q 437 203 450 199 Q 457 198 465 206 Q 475 218 466 256 Q 462 290 398 321 Q 358 339 336 346 C 324 350 324 350 326 338 Z\"], \"medians\": [[[479, 819], [517, 783], [508, 646], [503, 631], [491, 620]], [[273, 731], [303, 690], [292, 561], [343, 562], [521, 601], [622, 615], [668, 618], [686, 606]], [[730, 779], [755, 734], [709, 568]], [[408, 554], [427, 539], [439, 507], [414, 471], [287, 326], [215, 264], [173, 236]], [[420, 427], [497, 430], [623, 455], [652, 448], [668, 429], [585, 248], [540, 179], [488, 117], [374, 21], [294, -23], [237, -41]], [[336, 335], [421, 272], [434, 258], [451, 213]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 536 209 Q 546 407 552 587 Q 556 633 562 664 Q 569 691 574 710 Q 578 723 554 740 Q 512 762 484 767 Q 465 771 456 760 Q 447 751 457 734 Q 488 688 489 655 Q 499 444 488 200 C 487 170 534 179 536 209 Z\", \"M 796 244 Q 657 232 536 209 L 488 200 Q 379 182 284 155 Q 256 148 263 180 Q 267 253 272 329 Q 275 357 263 373 Q 220 416 190 409 Q 178 403 188 382 Q 224 309 215 236 Q 211 166 182 133 Q 161 112 170 96 Q 183 78 203 66 Q 219 57 230 67 Q 243 83 283 99 Q 440 151 606 182 Q 757 210 789 197 C 819 193 826 247 796 244 Z\", \"M 789 197 Q 783 166 774 145 Q 756 118 785 55 Q 795 36 809 49 Q 837 73 846 173 Q 868 386 890 427 Q 900 443 889 460 Q 867 479 831 501 Q 816 510 802 503 Q 793 499 796 484 Q 823 435 796 244 L 789 197 Z\"], \"medians\": [[[472, 748], [525, 700], [514, 235], [493, 208]], [[196, 398], [217, 379], [239, 340], [243, 263], [233, 126], [282, 127], [380, 155], [575, 197], [710, 218], [772, 221], [788, 237]], [[810, 490], [826, 477], [849, 433], [798, 57]]]}","export const charData = \n{\"strokes\": [\"M 211 528 Q 337 718 364 741 Q 382 759 365 772 Q 346 785 315 791 Q 287 797 275 789 Q 263 783 272 772 Q 287 739 241 640 Q 217 586 190 527 Q 189 526 189 524 C 177 496 194 503 211 528 Z\", \"M 185 523 Q 163 542 139 550 Q 132 553 127 548 Q 120 544 127 531 Q 169 441 158 244 Q 155 174 192 151 Q 207 145 211 172 L 213 206 Q 203 326 203 357 L 202 383 Q 202 443 204 493 C 205 507 205 507 185 523 Z\", \"M 321 185 Q 333 164 353 130 Q 362 114 371 117 Q 384 120 391 144 Q 421 217 418 314 Q 419 375 420 444 Q 423 486 441 512 Q 454 530 444 541 Q 425 559 384 574 Q 368 583 340 571 Q 306 555 264 541 Q 240 535 211 528 L 189 524 Q 185 524 185 523 C 156 517 175 486 204 493 Q 210 494 215 495 Q 345 534 354 526 Q 387 475 357 239 Q 356 217 348 215 Q 344 214 330 218 C 300 221 306 211 321 185 Z\", \"M 203 357 Q 234 351 318 369 Q 330 372 332 373 Q 339 380 335 387 Q 328 396 305 401 Q 284 404 231 387 Q 216 387 202 383 C 173 375 173 362 203 357 Z\", \"M 211 172 Q 215 172 220 173 Q 254 180 321 185 C 351 187 354 201 330 218 Q 326 221 324 222 Q 323 223 315 225 Q 311 228 311 226 Q 304 229 213 206 C 184 199 181 170 211 172 Z\", \"M 581 551 Q 650 656 680 712 Q 699 755 718 776 Q 727 788 721 803 Q 714 816 681 838 Q 650 856 629 854 Q 608 850 620 827 Q 648 779 565 619 Q 528 546 472 462 Q 462 450 461 443 Q 458 430 473 435 Q 500 441 570 536 L 581 551 Z\", \"M 710 74 Q 694 73 609 110 Q 599 114 599 108 Q 598 104 609 94 Q 661 43 684 6 Q 697 -18 712 -16 Q 733 -17 752 4 Q 822 64 840 212 Q 853 312 859 467 Q 859 501 880 528 Q 893 541 892 550 Q 891 559 871 572 Q 843 591 808 601 Q 786 608 719 585 Q 716 585 714 584 Q 683 575 581 551 C 552 544 548 543 570 536 Q 597 518 654 533 Q 781 549 787 541 Q 791 528 794 487 Q 801 231 746 111 Q 730 77 710 74 Z\", \"M 535 339 Q 560 311 587 277 Q 600 261 618 260 Q 630 259 637 273 Q 644 289 638 322 Q 631 358 536 391 Q 520 398 512 395 Q 506 391 506 377 Q 509 364 535 339 Z\"], \"medians\": [[[278, 780], [303, 766], [314, 753], [313, 740], [225, 565], [216, 559], [212, 543], [196, 533]], [[135, 540], [157, 518], [174, 485], [185, 219], [196, 166]], [[188, 518], [225, 512], [356, 552], [381, 543], [400, 520], [391, 288], [382, 213], [365, 182], [369, 130]], [[208, 364], [225, 372], [291, 383], [325, 382]], [[215, 177], [231, 194], [292, 202], [323, 214]], [[630, 839], [651, 822], [672, 790], [648, 723], [613, 651], [534, 518], [470, 444]], [[577, 537], [775, 572], [805, 568], [834, 541], [827, 499], [816, 261], [801, 171], [772, 87], [753, 58], [719, 32], [621, 94], [619, 102], [604, 107]], [[517, 386], [594, 325], [619, 279]]], \"radStrokes\": [0, 1, 2, 3, 4]}","export const charData = \n{\"strokes\": [\"M 314 596 Q 327 614 339 631 Q 376 683 409 726 Q 421 739 407 755 Q 364 794 337 792 Q 325 791 327 775 Q 328 712 281 635 L 251 594 Q 218 549 178 514 Q 141 483 122 465 Q 112 449 129 453 Q 183 456 279 556 L 314 596 Z\", \"M 322 409 Q 344 280 298 121 Q 295 118 295 113 Q 288 97 279 95 Q 263 94 222 107 Q 191 119 186 112 Q 182 106 192 93 Q 232 54 258 19 Q 277 -11 288 -10 Q 297 -11 314 7 Q 393 89 375 363 Q 374 370 374 376 Q 362 521 314 596 L 281 635 Q 227 683 168 704 Q 153 711 150 699 Q 147 684 156 664 Q 166 645 186 643 Q 219 631 251 594 L 279 556 Q 297 526 306 489 L 322 409 Z\", \"M 306 489 Q 270 416 224 351 Q 175 285 64 167 Q 57 157 69 155 Q 91 151 207 261 Q 265 316 321 407 Q 321 408 322 409 C 337 435 319 516 306 489 Z\", \"M 755 590 Q 812 602 912 596 Q 927 595 932 605 Q 936 615 923 630 Q 877 669 781 644 Q 775 644 770 642 L 713 630 Q 647 620 573 606 L 523 598 Q 465 591 402 582 Q 374 578 394 563 Q 436 539 494 550 Q 510 556 530 559 L 574 569 Q 596 576 705 586 L 755 590 Z\", \"M 573 606 Q 572 631 572 654 Q 575 673 555 681 Q 515 702 494 696 Q 476 689 490 668 Q 512 635 523 598 L 530 559 Q 536 522 539 488 Q 543 466 556 452 Q 569 440 574 452 Q 581 471 578 494 Q 577 534 574 569 L 573 606 Z\", \"M 770 642 Q 776 679 805 745 Q 818 763 806 773 Q 791 789 752 805 Q 733 814 714 803 Q 704 796 713 783 Q 728 753 726 716 Q 722 679 713 630 L 705 586 Q 681 487 685 464 Q 688 448 704 462 Q 722 480 755 590 L 770 642 Z\", \"M 461 378 Q 442 390 422 396 Q 415 399 410 393 Q 401 387 411 376 Q 450 304 455 141 Q 458 72 495 48 L 496 47 Q 512 41 515 73 Q 515 77 515 82 L 513 111 Q 512 127 507 145 Q 495 289 493 341 C 492 360 487 363 461 378 Z\", \"M 749 104 Q 759 79 784 29 Q 793 11 803 12 Q 819 15 828 41 Q 859 102 875 291 Q 879 340 903 370 Q 919 391 908 404 Q 886 426 838 446 Q 819 456 787 444 Q 661 399 461 378 C 431 375 464 333 493 341 Q 508 347 607 364 L 648 372 Q 702 385 766 395 Q 794 401 807 387 Q 832 341 795 144 Q 794 126 786 124 Q 785 123 777 124 C 752 107 749 104 749 104 Z\", \"M 665 232 Q 702 239 737 242 Q 762 246 753 260 Q 743 276 715 280 Q 696 284 667 277 L 618 264 Q 573 252 536 242 Q 518 238 540 222 Q 549 215 569 218 Q 594 222 619 225 L 665 232 Z\", \"M 660 134 Q 661 186 665 232 L 667 277 Q 673 355 661 361 Q 654 368 648 372 C 624 390 600 393 607 364 Q 614 336 618 270 Q 617 269 618 264 L 619 225 Q 619 185 620 127 C 621 97 659 104 660 134 Z\", \"M 515 82 Q 522 82 531 82 Q 655 97 749 104 C 779 106 792 107 777 124 Q 768 137 748 142 Q 712 149 660 134 L 620 127 Q 563 120 513 111 C 483 106 485 82 515 82 Z\"], \"medians\": [[[338, 780], [355, 759], [364, 734], [314, 640], [215, 520], [132, 463]], [[160, 697], [180, 673], [227, 648], [259, 622], [307, 558], [322, 524], [340, 452], [353, 347], [352, 244], [343, 172], [331, 115], [312, 72], [290, 51], [191, 108]], [[304, 482], [295, 412], [259, 358], [166, 246], [71, 163]], [[396, 573], [469, 568], [584, 591], [814, 624], [874, 625], [920, 610]], [[499, 681], [538, 652], [565, 455]], [[721, 793], [739, 784], [765, 751], [730, 585], [695, 465]], [[416, 385], [443, 362], [463, 326], [484, 118], [500, 52]], [[471, 378], [500, 363], [802, 421], [832, 412], [844, 400], [857, 385], [846, 282], [821, 118], [802, 83], [803, 26]], [[538, 232], [690, 259], [742, 254]], [[615, 360], [640, 342], [644, 291], [641, 157], [625, 135]], [[519, 90], [530, 98], [567, 104], [703, 122], [770, 124]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 225 620 Q 201 636 175 642 Q 168 646 161 639 Q 151 632 163 619 Q 163 616 169 607 Q 230 487 231 222 Q 234 140 277 112 L 279 111 Q 300 104 302 142 Q 302 152 301 164 L 297 200 Q 296 213 292 227 Q 264 473 260 573 Q 260 574 261 574 C 261 598 251 605 225 620 Z\", \"M 669 194 Q 679 166 703 111 Q 712 92 723 92 Q 741 93 753 123 Q 805 217 816 348 Q 829 430 840 523 Q 847 581 873 615 Q 894 639 879 655 Q 854 680 798 705 Q 776 717 738 703 Q 626 666 496 644 Q 385 629 225 620 C 195 618 232 568 261 574 Q 348 592 461 609 L 513 617 Q 600 632 701 646 Q 750 655 768 632 Q 778 610 779 586 Q 769 414 727 248 Q 723 218 710 216 C 695 190 658 222 669 194 Z\", \"M 529 394 Q 598 404 660 411 Q 685 414 677 428 Q 667 444 640 450 Q 613 454 530 436 L 478 426 Q 408 413 345 402 Q 326 398 347 382 Q 363 370 394 375 Q 436 382 478 387 L 529 394 Z\", \"M 530 436 Q 533 598 534 598 Q 522 610 513 617 C 490 636 446 635 461 609 Q 465 602 470 594 Q 477 575 478 426 L 478 387 Q 478 320 478 219 C 478 189 524 196 524 226 Q 525 316 529 394 L 530 436 Z\", \"M 301 164 Q 419 185 669 194 C 699 195 737 203 710 216 Q 707 216 675 236 Q 653 251 524 226 L 478 219 Q 381 207 297 200 C 267 197 271 159 301 164 Z\"], \"medians\": [[[168, 630], [204, 600], [225, 563], [253, 357], [267, 183], [285, 124]], [[234, 618], [277, 600], [518, 632], [739, 675], [770, 675], [804, 655], [823, 634], [792, 401], [761, 236], [746, 196], [726, 169], [724, 108]], [[346, 392], [383, 391], [601, 427], [642, 430], [665, 423]], [[468, 608], [503, 582], [502, 251], [484, 228]], [[305, 171], [320, 185], [393, 194], [604, 216], [696, 217]]]}","export const charData = \n{\"strokes\": [\"M 323 592 Q 336 607 349 622 Q 389 671 425 710 Q 437 722 425 738 Q 383 780 361 780 Q 349 779 349 764 Q 348 706 297 636 L 264 596 Q 227 553 182 520 Q 142 493 123 476 Q 113 463 128 464 Q 179 467 285 555 L 323 592 Z\", \"M 324 406 Q 334 240 300 131 Q 296 118 289 118 Q 274 115 232 127 Q 202 137 198 132 Q 194 126 204 114 Q 244 77 269 43 Q 287 16 296 17 Q 303 14 316 29 Q 394 113 368 425 Q 364 464 356 498 Q 343 555 323 592 L 297 636 Q 249 702 191 732 Q 178 741 173 730 Q 169 717 172 697 Q 179 676 196 671 Q 232 656 264 596 L 285 555 Q 300 521 309 489 L 324 406 Z\", \"M 309 489 Q 249 345 63 191 Q 51 178 60 177 Q 69 173 81 178 Q 198 230 302 375 Q 303 382 324 406 C 343 429 321 517 309 489 Z\", \"M 531 550 Q 535 557 542 564 Q 584 613 629 689 Q 648 725 665 742 Q 675 752 669 767 Q 665 780 634 803 Q 606 821 585 820 Q 566 817 575 795 Q 587 773 580 752 Q 558 682 520 617 Q 484 554 434 484 Q 424 474 422 467 Q 418 455 433 458 Q 454 464 513 529 L 531 550 Z\", \"M 513 529 Q 558 511 590 522 Q 617 534 755 567 Q 774 570 783 561 Q 802 540 802 492 Q 805 341 793 242 Q 768 85 738 71 Q 731 67 648 85 Q 612 94 610 89 Q 606 82 625 68 Q 677 25 705 -15 Q 724 -45 741 -40 Q 789 -25 828 95 Q 852 177 870 448 Q 873 518 892 541 Q 911 563 886 582 Q 802 633 742 606 Q 637 573 531 550 C 502 543 484 538 513 529 Z\", \"M 465 404 Q 455 408 430 412 Q 420 415 416 410 Q 412 404 419 390 Q 444 339 460 256 Q 463 231 477 214 Q 493 195 498 209 Q 501 219 501 234 L 498 264 Q 483 351 480 377 C 477 400 477 400 465 404 Z\", \"M 628 281 Q 649 353 671 374 Q 693 399 672 414 Q 612 450 599 448 Q 593 447 589 444 Q 556 422 465 404 C 436 398 451 370 480 377 Q 508 384 568 395 Q 590 399 595 390 Q 602 384 594 354 Q 587 324 579 289 C 572 260 619 252 628 281 Z\", \"M 501 234 Q 508 233 520 236 Q 557 245 635 255 Q 645 256 645 265 Q 645 271 628 281 L 579 289 Q 575 289 572 287 Q 530 274 498 264 C 469 255 471 235 501 234 Z\"], \"medians\": [[[362, 767], [382, 721], [326, 633], [233, 536], [131, 472]], [[183, 726], [193, 705], [232, 677], [263, 643], [309, 565], [337, 473], [348, 411], [351, 341], [343, 189], [328, 120], [313, 90], [297, 76], [202, 128]], [[309, 482], [297, 412], [235, 327], [159, 249], [66, 183]], [[586, 805], [604, 791], [624, 758], [597, 698], [559, 629], [492, 532], [431, 467]], [[523, 530], [776, 591], [809, 581], [842, 552], [825, 258], [804, 131], [786, 76], [769, 46], [740, 21], [614, 85]], [[424, 405], [446, 386], [458, 362], [488, 214]], [[476, 401], [487, 394], [602, 419], [629, 400], [635, 391], [610, 310], [586, 295]], [[505, 242], [521, 254], [569, 266], [636, 264]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 369 583 Q 415 634 466 710 Q 488 746 507 763 Q 517 773 512 789 Q 508 802 477 828 Q 449 847 428 848 Q 409 847 417 822 Q 436 774 349 639 Q 309 575 252 505 Q 240 495 238 487 Q 234 475 250 478 Q 274 481 352 564 L 369 583 Z\", \"M 641 57 Q 626 56 549 97 Q 539 101 539 96 Q 538 92 549 81 Q 595 26 616 -14 Q 628 -39 643 -39 Q 665 -40 688 -16 Q 767 50 788 218 Q 804 330 810 504 Q 811 543 835 573 Q 850 588 848 597 Q 847 606 825 621 Q 795 643 756 655 Q 734 662 646 636 Q 631 633 614 628 Q 497 601 369 583 C 339 579 322 568 352 564 Q 391 552 483 565 Q 556 575 619 587 Q 721 605 734 590 Q 750 556 740 344 Q 728 187 683 99 Q 665 59 641 57 Z\", \"M 254 413 Q 241 419 206 425 Q 193 429 189 423 Q 182 416 192 398 Q 222 335 241 232 Q 244 201 262 181 Q 281 156 288 174 Q 292 187 292 209 L 288 244 Q 269 350 267 382 C 265 409 265 409 254 413 Z\", \"M 467 260 Q 494 356 527 381 Q 545 400 529 418 Q 513 431 460 456 Q 441 463 419 455 Q 377 439 338 429 Q 298 420 254 413 C 224 408 237 378 267 382 Q 279 383 291 387 Q 352 397 409 406 Q 424 410 430 403 Q 440 394 438 374 Q 428 316 416 267 C 409 238 459 231 467 260 Z\", \"M 292 209 Q 302 208 314 210 Q 366 219 478 224 Q 490 225 491 234 Q 491 241 467 260 C 457 268 446 268 416 267 Q 413 268 410 267 Q 343 252 288 244 C 258 240 262 210 292 209 Z\"], \"medians\": [[[429, 832], [448, 813], [462, 780], [441, 735], [399, 664], [329, 569], [248, 487]], [[358, 567], [452, 577], [664, 619], [722, 625], [753, 620], [786, 588], [776, 504], [770, 325], [758, 229], [743, 157], [716, 83], [690, 40], [653, 13], [613, 38], [560, 79], [558, 89], [544, 95]], [[197, 415], [223, 395], [236, 375], [276, 180]], [[262, 410], [281, 401], [433, 432], [456, 423], [481, 397], [448, 289], [423, 273]], [[297, 216], [312, 229], [406, 244], [458, 243], [483, 234]]], \"radStrokes\": [2, 3, 4]}","export const charData = \n{\"strokes\": [\"M 385 619 Q 412 652 441 690 Q 465 724 484 740 Q 494 752 491 767 Q 487 782 457 808 Q 429 830 408 831 Q 387 830 395 805 Q 422 736 217 497 Q 205 487 203 480 Q 199 468 214 470 Q 241 473 358 589 L 385 619 Z\", \"M 358 589 Q 385 573 405 579 Q 673 646 689 622 Q 704 603 696 548 Q 683 398 648 333 Q 635 303 609 307 Q 582 317 559 328 Q 535 338 551 312 Q 597 263 617 226 Q 644 202 664 226 Q 698 256 721 305 Q 746 363 754 535 Q 755 596 775 628 Q 788 641 781 652 Q 771 662 719 685 Q 697 694 678 680 Q 651 664 549 644 Q 461 625 385 619 C 355 616 330 600 358 589 Z\", \"M 474 337 Q 493 415 517 437 Q 541 464 516 478 Q 455 511 450 511 Q 440 511 429 505 Q 392 478 294 452 C 265 444 275 416 304 423 Q 311 424 322 428 Q 368 441 406 452 Q 433 459 440 449 Q 444 445 421 343 C 414 314 467 308 474 337 Z\", \"M 283 276 Q 290 275 299 277 Q 357 292 485 305 Q 495 306 496 316 Q 496 323 474 337 C 452 352 450 351 421 343 Q 346 322 287 310 C 258 304 253 277 283 276 Z\", \"M 946 94 Q 933 128 920 228 Q 920 244 913 250 Q 907 254 902 236 Q 869 130 848 97 Q 817 63 732 40 Q 536 -11 373 47 Q 310 75 295 112 Q 274 160 283 276 L 287 310 Q 293 362 304 421 Q 304 422 304 423 C 308 444 308 444 294 452 Q 282 464 262 471 Q 249 475 241 471 Q 234 467 239 449 Q 252 410 248 373 Q 230 154 248 93 Q 254 54 292 23 Q 382 -41 603 -40 Q 697 -37 786 -14 Q 862 7 938 53 Q 957 68 946 94 Z\"], \"medians\": [[[407, 815], [424, 798], [440, 764], [423, 728], [332, 597], [248, 508], [213, 480]], [[367, 590], [687, 654], [704, 654], [731, 634], [714, 428], [699, 358], [683, 315], [663, 284], [643, 268], [610, 281], [552, 322]], [[306, 432], [314, 442], [415, 474], [440, 480], [456, 475], [479, 453], [454, 366], [429, 355]], [[287, 281], [303, 296], [418, 320], [485, 316]], [[248, 463], [267, 442], [275, 419], [259, 235], [267, 117], [281, 80], [297, 59], [340, 29], [373, 16], [443, -2], [571, -13], [684, -3], [809, 29], [861, 56], [897, 87], [912, 243]]], \"radStrokes\": [0, 1]}","export const charData = \n{\"strokes\": [\"M 268 652 Q 442 724 444 725 Q 468 731 461 752 Q 451 771 427 793 Q 405 812 392 812 Q 379 813 380 798 Q 377 768 301 710 Q 277 694 254 675 C 231 656 240 641 268 652 Z\", \"M 257 533 Q 257 539 258 544 Q 261 619 265 639 Q 268 646 268 652 C 271 665 271 665 254 675 Q 203 708 184 698 Q 172 691 180 677 Q 201 653 201 585 Q 201 398 174 294 Q 144 189 81 79 Q 77 72 75 66 Q 74 56 83 58 Q 99 61 131 109 Q 195 188 233 339 L 239 369 Q 248 397 256 506 L 257 533 Z\", \"M 424 399 Q 443 489 469 516 Q 491 541 467 555 Q 406 588 398 586 Q 391 586 384 581 Q 344 553 257 533 C 228 526 226 506 256 506 Q 271 505 292 511 Q 331 523 365 531 Q 387 537 393 527 Q 399 521 376 407 C 370 378 418 370 424 399 Z\", \"M 233 339 Q 246 336 264 338 Q 316 354 434 369 Q 444 370 445 380 Q 445 387 424 399 C 401 413 401 413 376 407 Q 370 406 366 404 Q 296 382 239 369 C 210 362 203 344 233 339 Z\", \"M 596 672 Q 615 679 644 688 Q 698 706 738 726 Q 784 747 823 756 Q 841 757 844 766 Q 848 776 835 788 Q 813 804 766 819 Q 750 826 736 824 Q 729 820 729 809 Q 729 775 583 693 C 557 678 568 662 596 672 Z\", \"M 585 534 Q 586 603 595 665 Q 596 669 596 672 C 598 686 598 686 583 693 Q 582 694 579 695 Q 530 719 514 716 Q 495 712 511 690 Q 542 639 525 431 Q 516 371 487 299 Q 457 224 375 148 Q 362 135 358 128 Q 357 121 368 122 Q 407 122 477 198 Q 561 294 583 505 L 585 534 Z\", \"M 755 522 Q 819 534 926 534 Q 945 535 949 543 Q 953 555 937 567 Q 883 603 826 584 Q 721 562 585 534 C 556 528 555 515 583 505 Q 607 493 653 505 Q 669 511 693 513 L 755 522 Z\", \"M 714 -31 Q 720 -56 726 -65 Q 732 -72 739 -70 Q 757 -58 760 -3 Q 767 66 767 133 Q 764 191 770 413 Q 770 453 780 487 Q 783 505 769 514 Q 762 520 755 522 C 729 537 679 540 693 513 Q 711 482 714 449 Q 715 325 711 131 Q 710 10 714 -31 Z\"], \"medians\": [[[390, 801], [403, 777], [403, 751], [302, 684], [278, 671], [265, 674]], [[190, 686], [216, 668], [231, 646], [227, 474], [214, 366], [200, 300], [167, 208], [143, 156], [84, 67]], [[261, 513], [272, 522], [393, 557], [422, 543], [432, 531], [408, 436], [405, 427], [384, 419]], [[241, 345], [263, 357], [378, 384], [435, 379]], [[832, 771], [761, 779], [673, 721], [603, 691], [599, 681]], [[517, 703], [559, 663], [557, 498], [533, 359], [509, 290], [472, 225], [417, 164], [365, 129]], [[591, 512], [663, 530], [840, 560], [895, 560], [938, 548]], [[701, 509], [743, 485], [744, 472], [735, -60]]], \"radStrokes\": [0, 1, 2, 3]}","export const charData = \n{\"strokes\": [\"M 268 735 Q 226 762 208 756 Q 199 750 206 735 Q 231 648 233 614 Q 233 290 214 199 Q 196 109 198 93 Q 198 69 227 34 Q 239 18 252 33 Q 262 48 266 65 L 270 102 Q 274 138 274 192 Q 284 681 289 692 C 292 721 292 721 268 735 Z\", \"M 723 85 Q 750 52 771 9 Q 781 -15 797 -14 Q 810 -13 820 9 Q 853 61 832 251 Q 814 662 838 697 Q 839 700 843 703 Q 855 716 854 725 Q 854 738 821 762 Q 763 804 720 789 Q 699 785 665 779 Q 517 766 338 738 Q 301 734 268 735 C 238 735 260 687 289 692 Q 301 693 318 697 Q 331 701 451 719 Q 601 740 715 746 Q 740 747 745 735 Q 769 711 767 408 Q 768 225 770 182 Q 773 134 763 116 Q 759 103 752 102 Q 745 101 735 107 Q 734 108 731 108 C 710 103 710 103 723 85 Z\", \"M 531 465 Q 673 498 679 502 Q 686 509 683 517 Q 676 527 650 535 Q 626 538 539 511 L 482 496 Q 424 486 360 478 Q 327 472 351 457 Q 390 436 451 450 Q 461 453 476 454 L 531 465 Z\", \"M 539 511 Q 543 536 548 565 Q 554 584 556 595 Q 563 614 544 626 Q 499 654 484 653 Q 465 652 478 628 Q 493 598 482 496 L 476 454 Q 464 340 372 250 Q 369 249 366 245 Q 332 218 319 205 Q 316 198 328 197 Q 362 194 426 248 Q 495 312 526 445 Q 527 455 531 465 L 539 511 Z\", \"M 550 364 Q 596 315 652 243 Q 665 224 678 220 Q 685 219 693 226 Q 705 236 696 276 Q 689 324 553 391 Q 546 395 542 385 Q 541 373 550 364 Z\", \"M 266 65 Q 269 64 271 63 Q 284 59 300 61 Q 432 79 723 85 C 753 86 752 87 731 108 Q 722 118 705 132 Q 686 145 649 139 Q 438 108 270 102 C 240 101 237 73 266 65 Z\"], \"medians\": [[[214, 747], [244, 712], [254, 687], [259, 611], [251, 266], [233, 92], [240, 40]], [[275, 729], [306, 715], [527, 747], [732, 768], [759, 761], [791, 734], [799, 722], [794, 476], [804, 120], [790, 71], [753, 80], [731, 101]], [[353, 469], [397, 463], [439, 467], [621, 510], [673, 512]], [[485, 640], [521, 596], [507, 477], [482, 375], [463, 333], [425, 277], [376, 230], [327, 205]], [[552, 381], [651, 293], [672, 262], [680, 234]], [[271, 71], [292, 82], [644, 111], [721, 105]]], \"radStrokes\": [0, 1, 5]}","export const charData = \n{\"strokes\": [\"M 324 704 Q 349 673 378 635 Q 390 619 406 617 Q 416 616 425 629 Q 432 644 428 676 Q 422 715 327 754 Q 311 761 304 759 Q 298 756 298 742 Q 299 730 324 704 Z\", \"M 460 496 Q 367 331 357 314 Q 353 311 350 305 Q 263 187 115 58 Q 108 54 104 47 Q 98 37 110 35 Q 143 32 266 135 Q 308 172 349 220 Q 449 341 527 509 L 542 542 Q 558 582 574 622 Q 614 725 630 751 Q 643 764 639 780 Q 627 804 598 828 Q 580 846 565 844 Q 550 840 553 823 Q 563 786 552 735 Q 540 704 528 664 Q 503 594 475 530 L 460 496 Z\", \"M 475 530 Q 459 529 443 525 Q 298 504 216 507 Q 194 510 192 497 Q 191 485 216 468 Q 247 446 277 454 Q 368 479 460 496 L 527 509 Q 612 525 699 534 Q 727 535 733 521 Q 742 502 738 454 Q 725 276 692 181 Q 674 121 655 103 Q 642 88 613 96 Q 571 109 533 121 Q 508 128 526 105 Q 581 50 612 6 Q 624 -19 648 -11 Q 670 -7 696 23 Q 772 101 798 406 Q 804 473 829 514 Q 848 539 838 551 Q 819 573 778 591 Q 748 606 717 591 Q 641 563 542 542 L 475 530 Z\", \"M 496 321 Q 524 291 554 256 Q 564 243 580 242 Q 590 241 597 253 Q 603 266 598 296 Q 591 332 497 368 Q 482 372 476 371 Q 472 368 471 355 Q 472 345 496 321 Z\"], \"medians\": [[[308, 751], [383, 685], [406, 637]], [[568, 828], [597, 773], [585, 732], [492, 498], [424, 374], [377, 298], [285, 187], [207, 112], [113, 44]], [[203, 495], [266, 479], [720, 562], [751, 559], [777, 539], [782, 532], [746, 249], [721, 153], [697, 94], [671, 60], [646, 45], [526, 114]], [[480, 365], [555, 303], [581, 260]]], \"radStrokes\": [0]}","export const charData = \n{\"strokes\": [\"M 493 696 Q 527 736 560 768 Q 573 780 561 797 Q 522 839 496 842 Q 483 841 483 826 Q 477 714 306 577 Q 284 571 235 528 Q 225 515 241 516 Q 275 516 347 563 L 360 571 Q 424 616 471 670 L 493 696 Z\", \"M 376 277 Q 536 421 691 621 Q 713 649 751 677 Q 767 687 762 697 Q 761 707 698 736 Q 680 746 635 724 Q 578 708 493 696 C 463 692 441 674 471 670 Q 498 657 614 679 Q 633 683 639 675 Q 643 668 629 648 Q 544 503 400 361 Q 279 243 47 82 Q 31 70 46 69 Q 82 69 200 143 Q 293 204 358 262 L 376 277 Z\", \"M 347 563 Q 347 554 415 477 Q 419 471 426 464 Q 436 451 450 451 Q 460 450 465 461 Q 471 473 466 500 Q 462 530 371 568 Q 365 571 360 571 C 343 573 343 573 347 563 Z\", \"M 417 266 Q 405 272 376 277 C 349 282 349 282 358 262 Q 359 258 362 253 Q 393 183 407 69 Q 410 35 428 12 Q 446 -10 451 5 Q 455 15 456 31 L 454 70 Q 448 88 431 229 C 427 259 427 262 417 266 Z\", \"M 756 100 Q 790 199 833 231 Q 854 252 838 273 Q 789 315 745 326 Q 729 329 713 323 Q 602 284 417 266 C 387 263 401 225 431 229 Q 434 229 684 267 Q 712 273 723 260 Q 735 248 730 224 Q 715 158 697 105 C 688 77 746 72 756 100 Z\", \"M 456 31 Q 462 31 469 32 Q 566 48 772 58 Q 785 59 786 69 Q 787 78 756 100 C 739 113 727 110 697 105 Q 561 80 454 70 C 424 67 426 29 456 31 Z\"], \"medians\": [[[496, 828], [517, 782], [448, 681], [355, 591], [314, 561], [245, 525]], [[476, 673], [501, 682], [575, 689], [635, 702], [672, 697], [687, 688], [669, 648], [603, 554], [533, 468], [409, 337], [318, 256], [180, 151], [49, 75]], [[355, 564], [434, 500], [451, 465]], [[367, 261], [395, 244], [407, 214], [440, 11]], [[427, 263], [443, 250], [610, 273], [702, 294], [741, 291], [781, 253], [736, 131], [705, 110]], [[462, 38], [474, 53], [693, 80], [753, 79], [776, 69]]], \"radStrokes\": [3, 4, 5]}","export const charData = \n{\"strokes\": [\"M 467 799 Q 497 777 529 750 Q 545 737 564 739 Q 576 740 580 756 Q 584 774 571 807 Q 556 841 457 853 Q 438 854 432 852 Q 426 846 429 832 Q 435 819 467 799 Z\", \"M 277 656 Q 277 677 254 696 Q 236 712 233 686 Q 237 656 194 602 Q 149 554 165 507 Q 166 498 171 491 Q 184 464 206 491 Q 221 512 268 623 L 277 656 Z\", \"M 268 623 Q 289 611 326 619 Q 476 665 705 681 Q 730 684 741 681 Q 759 668 756 661 Q 756 657 725 583 Q 718 570 725 565 Q 732 561 749 573 Q 804 613 850 627 Q 887 640 887 649 Q 886 659 812 712 Q 788 730 707 714 Q 503 690 373 668 Q 324 661 277 656 C 247 653 239 632 268 623 Z\", \"M 518 399 Q 642 495 669 501 Q 688 508 683 524 Q 680 540 614 578 Q 595 588 572 580 Q 511 558 418 532 Q 393 525 335 527 Q 311 528 319 508 Q 326 495 346 483 Q 377 467 411 486 Q 433 493 546 534 Q 559 538 571 532 Q 584 525 578 511 Q 545 465 508 409 C 491 384 494 381 518 399 Z\", \"M 551 333 Q 536 381 518 399 L 508 409 Q 498 419 487 424 Q 477 431 471 423 Q 467 419 474 405 Q 490 371 500 328 L 507 289 Q 525 120 490 66 Q 489 65 487 62 Q 478 58 377 89 Q 367 92 360 88 Q 354 87 370 74 Q 437 19 475 -30 Q 493 -49 511 -40 Q 535 -27 553 27 Q 578 120 558 293 L 551 333 Z\", \"M 558 293 Q 718 311 889 296 Q 911 293 918 301 Q 925 314 914 325 Q 886 352 844 371 Q 831 377 806 369 Q 737 356 667 346 Q 600 340 551 333 L 500 328 Q 491 331 308 309 Q 241 299 139 298 Q 126 299 124 288 Q 123 276 141 262 Q 157 250 187 238 Q 197 234 214 242 Q 230 246 303 259 Q 393 280 507 289 L 558 293 Z\"], \"medians\": [[[438, 844], [526, 800], [561, 758]], [[244, 691], [253, 657], [241, 622], [200, 553], [187, 494]], [[276, 627], [293, 637], [486, 672], [741, 701], [783, 687], [798, 672], [802, 657], [730, 572]], [[330, 515], [352, 504], [385, 502], [561, 556], [598, 550], [621, 525], [607, 501], [520, 411]], [[479, 418], [515, 363], [532, 295], [540, 206], [539, 138], [523, 51], [498, 16], [365, 85]], [[136, 286], [197, 268], [374, 297], [822, 337], [861, 329], [907, 310]]], \"radStrokes\": [3, 4, 5]}","export const charData = \n{\"strokes\": [\"M 464 772 Q 476 682 334 526 Q 256 448 174 381 Q 164 375 176 372 Q 263 387 398 520 Q 401 524 405 528 Q 456 583 534 696 Q 544 711 552 717 Q 559 721 559 734 Q 558 744 544 759 Q 505 795 471 788 Q 461 787 464 772 Z\", \"M 727 196 Q 574 180 407 145 Q 391 139 386 144 Q 382 153 397 172 Q 644 446 695 491 Q 713 501 707 518 Q 701 536 644 574 Q 625 587 611 584 Q 593 580 597 551 Q 603 515 574 472 Q 498 343 376 218 Q 342 178 273 142 Q 252 129 256 114 Q 260 92 290 62 Q 302 46 321 58 Q 390 107 741 166 Q 742 166 744 166 C 774 171 757 199 727 196 Z\", \"M 744 166 Q 807 61 814 57 Q 823 53 834 62 Q 850 72 848 123 Q 849 192 672 329 Q 665 336 658 324 Q 654 309 663 296 Q 694 251 727 196 L 744 166 Z\"], \"medians\": [[[473, 778], [488, 766], [507, 733], [463, 647], [428, 597], [330, 487], [231, 407], [180, 378]], [[615, 566], [642, 521], [636, 496], [524, 348], [361, 166], [341, 124], [393, 116], [543, 151], [692, 176], [718, 179], [728, 168]], [[669, 316], [747, 226], [802, 146], [821, 95], [819, 65]]], \"radStrokes\": [0]}","export const charData = \n{\"strokes\": [\"M 266 534 Q 309 589 356 661 Q 384 712 411 735 Q 421 747 417 763 Q 413 778 381 804 Q 350 825 329 825 Q 308 824 317 798 Q 332 764 318 736 Q 278 640 216 553 Q 158 468 76 375 Q 64 363 62 356 Q 58 343 74 346 Q 119 356 223 483 Q 230 493 240 502 L 266 534 Z\", \"M 240 502 Q 261 433 262 403 Q 255 265 251 241 Q 244 189 229 135 Q 214 86 251 38 Q 252 35 256 32 Q 275 16 287 44 Q 302 86 302 134 Q 308 387 318 445 Q 325 473 315 484 Q 297 506 283 520 Q 276 529 266 534 C 242 552 231 531 240 502 Z\", \"M 676 454 Q 755 464 874 468 Q 934 468 941 479 Q 945 492 928 505 Q 865 548 817 529 Q 760 516 677 498 L 622 488 Q 511 469 384 447 Q 362 444 379 427 Q 412 400 452 409 Q 530 433 622 446 L 676 454 Z\", \"M 622 446 Q 622 233 618 163 Q 615 -26 636 -56 Q 651 -72 660 -50 Q 675 -14 676 454 L 677 498 Q 678 640 684 714 Q 685 748 703 778 Q 710 794 689 811 Q 664 830 619 842 Q 598 848 585 833 Q 575 824 588 812 Q 619 787 621 750 Q 622 657 622 488 L 622 446 Z\"], \"medians\": [[[329, 809], [348, 793], [368, 756], [325, 671], [250, 555], [184, 469], [122, 398], [72, 356]], [[267, 525], [269, 496], [286, 465], [288, 410], [279, 239], [262, 94], [268, 41]], [[381, 437], [441, 432], [604, 465], [840, 501], [893, 496], [932, 485]], [[593, 823], [621, 816], [645, 797], [658, 775], [649, 572], [650, 306], [643, 79], [647, -50]]], \"radStrokes\": [0, 1]}","export const charData = \n{\"strokes\": [\"M 388 654 Q 407 660 431 665 Q 462 674 468 678 Q 475 685 471 693 Q 464 703 437 709 Q 412 713 392 705 L 340 687 Q 259 666 211 658 Q 178 651 202 637 Q 244 616 295 632 Q 314 638 340 642 L 388 654 Z\", \"M 376 528 Q 382 594 388 654 L 392 705 Q 395 744 410 794 Q 414 804 395 818 Q 364 836 342 840 Q 327 844 320 836 Q 313 829 320 815 Q 338 790 338 773 Q 339 733 340 687 L 340 642 Q 340 584 338 518 C 337 488 373 498 376 528 Z\", \"M 427 498 Q 470 508 521 515 Q 537 518 538 525 Q 539 538 521 546 Q 494 558 473 552 L 403 535 Q 390 532 376 528 L 338 518 Q 182 484 108 474 Q 95 473 93 465 Q 90 455 105 443 Q 144 418 185 431 Q 329 480 363 484 L 427 498 Z\", \"M 348 410 Q 348 411 349 411 Q 392 460 427 498 L 473 552 Q 551 646 568 656 Q 581 662 581 671 Q 580 677 568 682 Q 540 698 514 701 Q 499 702 493 687 Q 484 642 403 535 L 363 484 Q 326 439 276 385 L 240 346 Q 173 276 74 196 Q 67 192 69 189 Q 70 186 77 188 Q 140 212 216 278 Q 298 356 313 360 C 334 373 328 388 348 410 Z\", \"M 387 295 Q 462 367 484 376 Q 500 382 494 395 Q 490 408 434 434 Q 418 441 400 432 Q 376 422 348 410 L 276 385 Q 257 382 229 381 Q 210 380 218 364 Q 225 354 240 346 C 264 331 287 345 313 360 Q 383 402 403 392 Q 413 385 410 374 Q 394 341 374 302 C 360 275 365 274 387 295 Z\", \"M 423 240 Q 411 280 387 295 L 374 302 Q 368 306 360 308 Q 341 314 331 308 Q 319 301 333 290 Q 366 266 376 222 L 383 190 Q 392 103 372 58 Q 360 39 333 45 Q 308 51 284 57 Q 274 61 277 50 Q 281 43 296 31 Q 329 0 339 -24 Q 348 -40 362 -39 Q 375 -38 399 -14 Q 462 49 430 212 L 423 240 Z\", \"M 430 212 Q 437 216 445 219 Q 505 247 505 264 Q 501 268 489 266 Q 456 254 423 240 L 376 222 Q 289 192 195 159 Q 174 152 140 150 Q 128 149 127 139 Q 126 127 134 120 Q 155 107 186 90 Q 196 89 206 96 Q 248 129 383 190 L 430 212 Z\", \"M 607 512 Q 671 630 693 675 Q 699 708 727 746 Q 736 761 730 775 Q 723 788 690 806 Q 659 819 640 816 Q 621 812 633 790 Q 663 750 597 591 Q 566 519 522 437 Q 513 424 512 418 Q 511 405 524 411 Q 542 418 592 487 L 607 512 Z\", \"M 727 486 Q 884 526 888 529 Q 897 539 892 547 Q 883 560 852 567 Q 819 571 787 558 Q 748 543 705 531 Q 659 521 607 512 C 577 507 565 500 592 487 Q 632 466 689 478 L 727 486 Z\", \"M 708 211 Q 747 286 767 408 Q 771 433 777 444 Q 784 451 778 461 Q 763 479 727 486 C 698 493 682 497 689 478 Q 689 475 700 449 Q 724 391 672 255 Q 671 255 671 252 L 651 214 Q 650 213 649 211 Q 600 139 468 78 Q 443 65 473 65 Q 560 62 654 139 Q 666 154 681 170 L 708 211 Z\", \"M 681 170 Q 726 106 768 52 Q 783 33 808 31 Q 946 30 958 42 Q 962 49 952 52 Q 789 122 713 206 Q 710 209 708 211 L 671 252 Q 634 295 592 351 Q 582 367 566 370 Q 542 371 535 365 Q 532 361 540 355 Q 573 334 593 300 Q 621 255 651 214 L 681 170 Z\"], \"medians\": [[[204, 649], [214, 644], [254, 645], [415, 686], [460, 687]], [[331, 826], [372, 791], [359, 554], [354, 536], [343, 526]], [[104, 461], [162, 454], [471, 530], [528, 528]], [[573, 670], [523, 663], [464, 576], [297, 377], [162, 250], [73, 191]], [[226, 371], [244, 364], [274, 368], [388, 410], [422, 410], [444, 391], [392, 308], [384, 305]], [[335, 299], [349, 296], [378, 274], [401, 227], [413, 158], [407, 65], [389, 27], [366, 8], [285, 49]], [[139, 138], [190, 124], [500, 261]], [[642, 801], [672, 780], [685, 760], [665, 689], [595, 531], [560, 470], [521, 419]], [[601, 490], [716, 508], [844, 543], [883, 538]], [[696, 475], [726, 458], [739, 446], [739, 438], [722, 320], [694, 239], [658, 181], [618, 141], [542, 94], [480, 75]], [[542, 362], [557, 360], [587, 336], [705, 178], [797, 83], [821, 71], [888, 54], [953, 46]]], \"radStrokes\": [7, 8, 9, 10]}","export const charData = \n{\"strokes\": [\"M 205 585 Q 192 592 164 598 Q 151 602 147 596 Q 140 590 148 573 Q 181 494 194 366 Q 195 327 216 301 Q 232 277 239 293 Q 248 315 244 357 L 240 391 Q 221 524 220 557 C 219 579 219 579 205 585 Z\", \"M 396 421 Q 414 533 448 566 Q 464 587 448 603 Q 369 654 312 621 Q 258 600 205 585 C 176 577 191 548 220 557 Q 227 558 237 563 Q 345 590 349 586 Q 361 576 360 552 Q 353 479 341 421 C 335 392 391 391 396 421 Z\", \"M 244 357 Q 388 385 410 389 Q 420 390 421 400 Q 421 407 396 421 C 376 432 370 430 341 421 Q 283 402 240 391 C 211 383 215 351 244 357 Z\", \"M 773 477 Q 671 461 595 434 Q 573 428 578 453 Q 584 529 590 607 Q 593 634 582 649 Q 564 668 537 682 Q 524 688 513 685 Q 501 679 510 659 Q 544 586 535 512 Q 528 442 500 409 Q 481 388 490 374 Q 503 358 523 346 Q 539 339 549 348 Q 576 381 706 420 Q 757 433 769 431 Q 770 432 773 432 C 803 435 803 482 773 477 Z\", \"M 771 2 Q 777 -26 785 -37 Q 791 -44 799 -42 Q 817 -33 823 34 Q 833 137 831 238 Q 827 323 831 657 Q 831 703 845 768 Q 848 787 832 798 Q 795 823 779 826 Q 764 830 746 821 Q 736 811 745 800 Q 751 787 758 776 Q 774 746 775 703 Q 776 606 773 477 L 773 432 Q 767 48 771 2 Z\"], \"medians\": [[[156, 588], [184, 562], [191, 544], [228, 299]], [[213, 581], [247, 579], [352, 610], [371, 605], [402, 579], [373, 448], [348, 426]], [[248, 386], [259, 377], [348, 400], [395, 404], [411, 399]], [[520, 673], [549, 640], [559, 616], [562, 555], [549, 404], [591, 407], [751, 452], [766, 470]], [[755, 810], [776, 799], [803, 771], [806, 747], [795, -31]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 299 163 Q 327 141 360 108 Q 376 95 386 93 Q 395 93 400 104 Q 407 116 401 146 Q 392 177 331 210 L 288 231 Q 263 244 230 258 Q 211 268 211 288 Q 232 349 251 413 L 262 454 Q 284 539 305 624 Q 314 672 332 696 Q 345 718 338 731 Q 323 749 277 776 Q 256 789 240 780 Q 227 773 237 756 Q 270 707 217 446 L 207 401 Q 203 389 201 375 Q 189 326 167 287 Q 157 265 179 247 Q 225 223 263 192 L 299 163 Z\", \"M 263 192 Q 187 116 174 106 Q 170 105 167 101 Q 161 97 104 60 Q 91 51 103 48 Q 116 47 152 59 Q 207 80 250 116 Q 278 138 299 163 L 331 210 Q 376 292 389 351 Q 410 450 428 478 Q 438 496 423 506 Q 377 545 351 536 Q 336 532 342 517 Q 352 495 352 470 L 350 440 Q 349 431 348 420 Q 341 321 288 231 L 263 192 Z\", \"M 352 470 Q 307 463 262 454 L 217 446 Q 81 428 52 431 Q 39 431 37 422 Q 33 410 41 401 Q 60 383 89 361 Q 98 357 110 363 Q 155 387 207 401 L 251 413 Q 299 428 350 440 C 379 447 382 475 352 470 Z\", \"M 644 565 Q 783 604 788 607 Q 797 616 792 624 Q 785 636 754 642 Q 726 646 645 616 L 598 601 Q 550 591 496 582 Q 459 575 487 559 Q 526 538 599 555 L 644 565 Z\", \"M 643 416 Q 710 429 816 436 Q 865 440 870 447 Q 874 459 858 470 Q 798 509 758 488 Q 712 475 643 457 L 598 447 Q 522 432 434 413 Q 415 410 430 395 Q 445 383 461 380 Q 482 376 496 382 Q 530 395 572 402 L 643 416 Z\", \"M 643 457 Q 643 509 644 565 L 645 616 Q 646 698 664 758 Q 674 774 670 787 Q 663 797 605 833 Q 580 851 559 834 Q 553 828 560 813 Q 594 761 596 710 Q 597 658 598 601 L 599 555 Q 599 483 598 447 L 596 347 Q 592 172 580 117 Q 561 33 578 -10 Q 581 -19 586 -29 Q 593 -48 601 -51 Q 608 -58 616 -49 Q 623 -45 634 -23 Q 644 4 643 36 Q 642 78 642 372 L 643 457 Z\", \"M 642 412 Q 642 413 643 416 C 657 443 585 429 572 402 Q 529 309 415 165 Q 409 155 420 154 Q 426 153 435 161 Q 534 239 596 347 L 642 412 Z\", \"M 642 372 Q 709 269 796 156 Q 814 137 843 137 Q 945 137 977 142 Q 987 143 988 149 Q 989 153 976 162 Q 835 222 761 291 Q 704 345 642 412 C 622 434 626 397 642 372 Z\"], \"medians\": [[[247, 767], [272, 748], [292, 714], [244, 467], [211, 341], [189, 284], [190, 268], [207, 251], [341, 169], [368, 144], [385, 108]], [[352, 524], [374, 507], [389, 482], [361, 339], [315, 229], [277, 173], [231, 128], [178, 88], [107, 54]], [[49, 418], [100, 397], [325, 449], [345, 463]], [[488, 572], [542, 568], [602, 578], [743, 618], [783, 616]], [[432, 404], [485, 401], [789, 465], [863, 452]], [[573, 825], [616, 785], [626, 761], [619, 262], [606, 48], [607, -37]], [[635, 407], [589, 380], [541, 301], [496, 241], [422, 162]], [[647, 405], [654, 379], [685, 339], [744, 269], [825, 189], [875, 171], [980, 149]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 521 610 Q 680 652 683 653 Q 693 662 688 671 Q 679 684 648 691 Q 618 697 523 663 L 475 648 Q 409 633 334 624 Q 294 617 323 599 Q 371 575 431 591 Q 450 597 476 600 L 521 610 Z\", \"M 521 440 Q 530 441 775 459 Q 797 460 801 470 Q 807 483 788 496 Q 727 538 662 517 Q 602 504 520 484 L 476 475 Q 472 476 467 474 Q 341 450 192 424 Q 170 421 187 403 Q 223 373 263 386 Q 347 414 443 428 L 521 440 Z\", \"M 520 484 Q 520 547 521 610 L 523 663 Q 527 724 540 770 Q 550 786 546 799 Q 539 809 481 845 Q 456 863 435 846 Q 429 840 436 825 Q 473 771 474 718 Q 474 684 475 648 L 476 600 Q 479 552 476 475 L 473 370 Q 469 178 464 145 Q 440 16 441 15 Q 447 -12 462 -45 Q 469 -64 477 -67 Q 484 -74 492 -65 Q 499 -61 510 -39 Q 520 -12 519 20 Q 518 66 518 402 L 520 484 Z\", \"M 443 428 Q 356 263 120 91 Q 107 79 116 77 Q 143 67 238 128 Q 334 188 440 327 Q 461 355 473 370 C 527 439 465 468 443 428 Z\", \"M 518 402 Q 614 258 739 105 Q 761 80 798 80 Q 925 79 966 85 Q 978 86 981 93 Q 981 100 964 108 Q 795 174 738 223 Q 638 313 521 440 L 519 440 C 496 460 501 427 518 402 Z\"], \"medians\": [[[325, 613], [335, 608], [389, 607], [479, 624], [629, 666], [679, 662]], [[190, 413], [250, 408], [361, 435], [691, 488], [739, 487], [788, 476]], [[449, 837], [492, 798], [503, 773], [495, 241], [480, 20], [483, -53]], [[471, 425], [456, 410], [447, 380], [415, 334], [314, 220], [199, 126], [121, 83]], [[521, 433], [526, 432], [533, 404], [631, 287], [712, 197], [779, 136], [831, 120], [974, 94]]], \"radStrokes\": [1, 2, 3, 4]}","export const charData = \n{\"strokes\": [\"M 353 743 Q 381 719 412 691 Q 425 679 439 680 Q 449 680 453 693 Q 457 706 449 733 Q 443 752 412 767 Q 337 794 328 787 Q 324 783 325 771 Q 328 761 353 743 Z\", \"M 614 808 Q 593 769 534 695 Q 524 677 542 681 Q 591 712 617 733 Q 695 790 701 793 Q 722 803 711 822 Q 696 838 669 852 Q 644 865 632 861 Q 619 860 624 846 Q 628 827 614 808 Z\", \"M 712 522 Q 737 574 763 591 Q 784 613 758 631 Q 734 650 708 666 Q 695 678 641 659 Q 577 650 431 617 Q 365 604 323 600 Q 310 600 308 592 Q 305 586 327 574 Q 343 562 385 572 Q 445 587 483 595 L 520 601 Q 577 611 661 621 Q 674 622 679 616 Q 685 603 659 528 C 649 500 698 495 712 522 Z\", \"M 542 463 Q 621 476 723 487 Q 735 488 736 498 Q 736 505 712 522 C 697 533 689 532 659 528 Q 656 529 654 528 Q 596 515 541 500 L 492 490 Q 393 471 306 457 C 276 452 288 419 318 422 Q 325 422 335 424 Q 396 440 493 455 L 542 463 Z\", \"M 542 330 Q 608 342 697 352 Q 755 362 779 358 Q 794 357 800 344 Q 807 326 765 214 Q 759 196 741 200 Q 711 207 674 217 Q 644 226 665 198 Q 720 143 731 116 Q 738 101 753 103 Q 766 102 784 116 Q 808 141 832 201 Q 850 283 886 318 Q 905 339 892 353 Q 867 381 828 405 Q 812 417 752 401 Q 724 397 542 364 L 493 355 Q 405 340 350 325 Q 317 319 301 320 Q 292 321 295 338 Q 307 411 318 422 C 327 444 327 444 306 457 Q 290 470 268 480 Q 256 489 246 480 Q 237 473 247 455 Q 260 427 251 388 Q 235 333 219 311 Q 207 293 219 276 Q 229 248 244 241 Q 254 235 279 254 Q 330 297 450 314 L 542 330 Z\", \"M 491 275 Q 491 109 481 22 Q 478 -20 503 -53 Q 516 -68 525 -50 Q 543 -14 544 59 Q 543 86 542 330 L 542 364 Q 542 413 542 463 L 541 500 Q 541 561 544 570 Q 547 582 538 589 Q 531 595 520 601 C 495 617 479 625 483 595 Q 486 588 492 490 L 493 455 Q 493 406 493 355 L 491 275 Z\", \"M 450 314 Q 444 295 426 269 Q 371 194 310 143 Q 259 97 155 32 Q 136 20 153 17 Q 190 14 294 72 Q 363 121 414 175 Q 421 184 491 275 C 531 326 472 370 450 314 Z\"], \"medians\": [[[332, 781], [405, 738], [438, 695]], [[631, 852], [651, 832], [660, 812], [582, 727], [537, 688]], [[316, 591], [338, 585], [374, 588], [520, 620], [675, 645], [699, 638], [721, 608], [695, 552], [667, 538]], [[314, 453], [336, 443], [657, 504], [709, 504], [727, 497]], [[257, 470], [276, 449], [285, 424], [262, 322], [262, 296], [290, 294], [424, 327], [768, 383], [811, 379], [827, 365], [845, 338], [798, 205], [775, 168], [760, 157], [665, 209]], [[489, 594], [515, 571], [519, 316], [514, -48]], [[486, 314], [414, 213], [338, 135], [274, 84], [157, 24]]], \"radStrokes\": [2, 3, 4]}","export const charData = \n{\"strokes\": [\"M 165 632 Q 166 626 169 620 Q 187 581 178 427 Q 160 348 194 305 Q 204 292 214 305 Q 229 326 228 388 Q 229 577 231 590 Q 235 609 230 617 Q 224 635 186 648 Q 177 652 166 649 Q 159 645 165 632 Z\", \"M 328 752 Q 367 689 351 450 Q 347 353 298 237 Q 259 140 151 38 Q 136 23 133 17 Q 132 10 144 10 Q 193 14 277 111 Q 329 172 359 240 Q 386 310 398 409 Q 414 523 412 692 Q 416 714 418 726 Q 424 748 401 758 Q 349 783 332 780 Q 310 776 328 752 Z\", \"M 511 528 Q 496 543 476 547 Q 470 550 466 544 Q 462 537 465 525 Q 489 477 480 361 Q 471 286 478 269 Q 488 250 504 237 Q 517 227 520 238 Q 527 242 530 262 Q 534 278 532 339 Q 531 442 535 480 Q 536 487 536 493 C 537 506 534 508 511 528 Z\", \"M 697 526 Q 743 536 789 540 Q 819 544 822 525 Q 837 354 814 328 Q 805 322 746 333 Q 728 337 725 333 Q 722 327 733 318 Q 790 279 825 249 Q 840 236 852 251 Q 877 284 878 362 Q 872 473 882 532 Q 886 553 876 561 Q 848 585 830 595 Q 817 599 809 591 Q 802 581 698 557 L 642 547 Q 593 540 511 528 C 481 524 508 483 536 493 Q 540 499 642 517 L 697 526 Z\", \"M 642 517 Q 642 37 643 23 Q 643 -19 656 -40 Q 671 -56 680 -34 Q 698 14 695 334 Q 695 445 697 526 L 698 557 Q 699 702 721 737 Q 728 753 708 768 Q 683 787 640 799 Q 621 803 608 790 Q 598 781 610 769 Q 638 745 641 711 Q 642 648 642 547 L 642 517 Z\"], \"medians\": [[[172, 641], [188, 628], [204, 601], [204, 309]], [[334, 766], [377, 730], [380, 718], [382, 515], [373, 403], [361, 338], [336, 256], [283, 156], [202, 61], [141, 17]], [[473, 538], [492, 516], [507, 485], [504, 284], [512, 240]], [[520, 526], [548, 515], [803, 563], [824, 564], [839, 554], [851, 541], [852, 531], [853, 371], [841, 309], [831, 294], [821, 295], [730, 330]], [[616, 780], [641, 774], [677, 740], [667, 502], [667, -34]]], \"radStrokes\": [2, 3, 4]}","export const charData = \n{\"strokes\": [\"M 675 764 Q 682 767 694 768 Q 758 778 769 787 Q 779 794 774 804 Q 767 817 739 826 Q 708 833 677 824 Q 512 776 328 769 Q 291 765 316 746 Q 359 719 415 728 Q 517 743 626 758 L 675 764 Z\", \"M 363 655 Q 353 659 326 664 Q 316 665 312 661 Q 308 655 315 642 Q 337 603 353 538 Q 357 519 369 506 Q 385 487 390 501 Q 391 508 392 517 L 389 547 Q 379 610 376 630 C 373 652 373 652 363 655 Z\", \"M 528 570 Q 544 616 560 631 Q 581 653 560 667 Q 542 677 518 694 Q 502 704 484 694 Q 447 672 363 655 C 334 649 347 624 376 630 Q 421 639 463 647 Q 485 651 490 643 Q 491 642 480 572 C 475 542 518 542 528 570 Z\", \"M 392 517 Q 401 516 412 519 Q 452 529 542 539 Q 552 540 553 549 Q 553 556 528 570 C 509 581 509 581 480 572 Q 431 557 389 547 C 360 540 362 518 392 517 Z\", \"M 665 489 Q 677 510 683 578 Q 686 677 698 721 Q 707 743 687 756 Q 681 760 675 764 C 650 781 617 787 626 758 Q 650 685 622 544 Q 615 517 635 484 C 650 458 653 462 665 489 Z\", \"M 679 439 Q 760 443 856 441 Q 943 438 951 449 Q 958 462 938 479 Q 871 531 814 513 Q 750 503 665 489 L 635 484 Q 388 454 111 426 Q 86 423 104 403 Q 135 372 203 382 Q 399 430 623 437 L 679 439 Z\", \"M 334 332 Q 324 336 297 340 Q 285 341 283 337 Q 277 331 286 316 Q 311 270 330 192 Q 334 170 348 154 Q 366 135 370 149 Q 373 159 372 175 L 368 209 Q 353 279 351 303 C 348 327 348 327 334 332 Z\", \"M 523 224 Q 544 287 572 306 Q 587 322 574 338 Q 510 389 457 363 Q 409 348 334 332 C 305 326 322 295 351 303 Q 361 307 469 327 Q 482 330 487 325 Q 497 315 479 234 C 473 205 513 196 523 224 Z\", \"M 372 175 Q 379 175 387 176 Q 433 186 532 193 Q 542 194 544 204 Q 544 211 523 224 L 479 234 Q 473 234 467 232 Q 412 217 368 209 C 339 204 342 174 372 175 Z\", \"M 580 51 Q 552 58 517 65 Q 504 68 505 60 Q 506 51 518 41 Q 594 -13 644 -57 Q 657 -67 672 -49 Q 717 11 710 97 Q 704 286 710 372 Q 717 402 710 413 Q 703 425 679 439 C 654 456 611 465 623 437 Q 624 430 630 421 Q 640 397 641 90 Q 638 63 628 50 Q 615 41 580 51 Z\"], \"medians\": [[[320, 759], [391, 749], [569, 773], [691, 798], [763, 798]], [[320, 656], [351, 625], [380, 506]], [[374, 653], [383, 645], [476, 668], [508, 667], [526, 646], [510, 596], [487, 584]], [[397, 525], [413, 536], [477, 551], [521, 554], [544, 548]], [[633, 754], [666, 730], [648, 526], [656, 498]], [[108, 414], [149, 405], [189, 407], [461, 446], [829, 479], [864, 478], [943, 455]], [[292, 330], [317, 310], [325, 295], [360, 155]], [[344, 331], [359, 321], [482, 350], [502, 346], [522, 332], [529, 319], [506, 250], [489, 245]], [[376, 204], [387, 194], [477, 211], [534, 204]], [[630, 435], [659, 413], [674, 392], [676, 87], [670, 46], [647, 5], [599, 17], [513, 58]]]}","export const charData = \n{\"strokes\": [\"M 381 722 Q 360 738 342 747 Q 329 751 319 745 Q 309 741 313 729 Q 323 707 333 691 Q 343 663 344 616 Q 347 564 345 122 C 345 92 394 96 394 126 Q 394 232 394 328 L 394 356 Q 394 434 395 504 L 396 524 Q 396 677 400 686 C 402 707 402 707 381 722 Z\", \"M 694 151 Q 694 632 723 685 Q 736 721 737 721 Q 727 742 666 778 Q 651 790 570 760 Q 450 730 381 722 C 351 718 371 678 400 686 Q 404 687 409 689 Q 550 723 607 730 Q 631 734 638 726 Q 647 710 646 675 Q 643 371 636 146 C 635 116 694 121 694 151 Z\", \"M 395 504 Q 431 488 510 504 Q 580 520 584 522 Q 591 529 587 537 Q 580 547 553 554 Q 525 558 499 546 Q 460 533 403 526 Q 399 526 396 524 C 367 515 367 515 395 504 Z\", \"M 394 328 Q 430 313 477 323 Q 525 332 573 341 Q 595 345 599 349 Q 608 356 603 365 Q 596 375 568 383 Q 538 389 510 377 Q 447 359 394 356 C 364 354 366 339 394 328 Z\", \"M 509 92 Q 567 95 622 99 Q 772 111 921 90 Q 946 86 952 96 Q 961 109 948 122 Q 918 152 874 173 Q 859 180 832 172 Q 763 160 694 151 L 636 146 Q 540 139 487 134 Q 435 131 394 126 L 345 122 Q 311 121 288 118 Q 213 108 102 110 Q 89 111 86 99 Q 85 86 104 71 Q 152 35 187 48 Q 226 60 389 81 Q 446 88 509 92 Z\"], \"medians\": [[[323, 734], [359, 703], [370, 655], [370, 149], [350, 136]], [[387, 718], [416, 707], [625, 755], [660, 748], [683, 718], [687, 709], [672, 528], [667, 192], [665, 177], [643, 152]], [[401, 519], [424, 512], [479, 518], [534, 533], [579, 531]], [[401, 349], [411, 340], [440, 339], [546, 361], [593, 359]], [[99, 97], [125, 85], [168, 77], [432, 109], [848, 137], [864, 136], [938, 107]]], \"radStrokes\": [4]}","export const charData = \n{\"strokes\": [\"M 295 461 Q 320 558 344 656 Q 354 704 372 728 Q 385 750 377 763 Q 364 781 317 808 Q 296 821 280 812 Q 267 805 277 789 Q 311 738 251 452 L 240 406 Q 231 346 199 291 Q 189 269 211 251 Q 263 226 305 192 L 340 164 Q 365 145 397 115 Q 413 102 423 100 Q 432 101 437 112 Q 443 124 436 154 Q 427 187 372 213 L 331 233 Q 301 246 263 263 Q 242 272 243 292 Q 264 355 283 419 L 295 461 Z\", \"M 305 192 Q 299 186 294 178 Q 269 145 152 63 Q 139 54 151 52 Q 227 45 337 161 Q 338 162 340 164 L 372 213 Q 402 268 432 369 Q 447 444 464 472 Q 474 490 458 499 Q 413 535 389 527 Q 376 523 381 509 Q 387 496 390 481 L 390 452 Q 378 317 331 233 L 305 192 Z\", \"M 390 481 Q 344 472 295 461 L 251 452 Q 187 442 119 429 Q 97 425 63 429 Q 50 429 47 420 Q 44 407 52 398 Q 73 379 103 357 Q 113 353 126 360 Q 192 399 240 406 L 283 419 Q 326 434 373 447 Q 380 450 390 452 C 419 459 419 487 390 481 Z\", \"M 581 627 Q 562 643 543 651 Q 530 655 520 650 Q 511 646 515 634 Q 542 577 542 533 Q 543 487 541 90 C 541 60 589 65 589 95 Q 590 183 591 264 L 591 298 Q 592 362 593 421 L 593 455 Q 594 498 595 537 Q 596 589 599 592 C 602 611 602 611 581 627 Z\", \"M 813 124 Q 812 371 822 534 Q 825 576 844 602 Q 857 618 842 637 Q 832 649 777 678 Q 759 690 697 659 Q 594 631 581 627 C 552 619 570 583 599 592 Q 606 593 618 598 Q 744 637 754 628 Q 766 606 756 115 C 755 85 813 94 813 124 Z\", \"M 593 421 Q 656 434 703 441 Q 728 447 718 460 Q 705 475 678 477 Q 633 480 593 455 C 567 439 564 415 593 421 Z\", \"M 591 264 Q 658 276 710 282 Q 735 286 725 300 Q 713 315 687 319 Q 648 323 591 298 C 563 286 561 259 591 264 Z\", \"M 541 90 Q 480 86 413 78 Q 392 77 407 59 Q 420 44 439 39 Q 460 33 476 37 Q 683 88 942 68 Q 943 69 945 68 Q 964 68 970 76 Q 976 88 960 102 Q 900 150 845 130 Q 830 129 813 124 L 756 115 Q 714 111 665 104 Q 628 100 589 95 L 541 90 Z\"], \"medians\": [[[286, 799], [312, 780], [332, 746], [267, 431], [220, 277], [241, 255], [390, 165], [406, 148], [422, 114]], [[391, 515], [410, 502], [426, 478], [401, 350], [376, 274], [350, 219], [315, 167], [272, 126], [220, 88], [157, 57]], [[61, 415], [114, 393], [190, 418], [360, 459], [385, 474]], [[525, 640], [558, 608], [570, 549], [566, 117], [546, 104]], [[585, 622], [609, 615], [626, 618], [689, 640], [758, 655], [774, 649], [799, 618], [789, 473], [785, 148], [761, 130]], [[601, 427], [621, 448], [683, 458], [707, 453]], [[599, 270], [610, 286], [635, 293], [680, 299], [715, 293]], [[410, 68], [460, 59], [675, 88], [879, 104], [959, 83]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 334 794 Q 325 718 210 640 Q 186 628 164 611 Q 152 599 168 599 Q 226 595 329 677 Q 335 686 398 736 Q 411 745 401 762 Q 365 804 347 807 Q 337 808 334 794 Z\", \"M 609 771 Q 658 737 711 693 Q 726 680 742 682 Q 752 683 757 696 Q 761 712 750 741 Q 735 786 602 819 Q 586 822 580 819 Q 576 815 577 802 Q 581 792 609 771 Z\", \"M 294 407 Q 385 462 507 568 L 538 597 Q 593 648 602 653 Q 612 656 612 667 Q 613 677 604 693 Q 579 732 544 736 Q 534 736 533 723 Q 530 687 488 633 L 462 602 Q 374 509 284 454 Q 218 412 64 340 Q 54 336 64 331 Q 115 328 266 392 L 294 407 Z\", \"M 507 568 Q 586 508 629 470 Q 749 373 791 369 Q 809 369 916 391 Q 953 400 965 407 Q 984 417 965 423 Q 937 433 805 453 Q 748 463 649 525 Q 600 555 538 597 L 488 633 Q 410 678 388 676 Q 369 677 350 671 Q 335 667 335 659 Q 336 649 353 647 Q 398 647 462 602 L 507 568 Z\", \"M 623 259 Q 650 343 683 360 Q 701 379 686 397 Q 670 410 617 437 Q 599 446 577 437 Q 487 404 331 385 C 301 381 323 349 353 353 Q 366 354 382 358 Q 413 364 444 368 L 484 375 Q 520 382 556 388 Q 578 392 587 383 Q 596 376 593 358 Q 584 307 573 266 C 565 237 613 231 623 259 Z\", \"M 444 368 Q 447 356 442 238 C 441 208 478 216 483 246 Q 501 355 500 358 Q 493 367 484 375 C 462 395 440 398 444 368 Z\", \"M 325 186 Q 332 185 343 187 Q 436 208 635 226 Q 645 227 647 235 Q 647 244 623 259 L 573 266 Q 572 266 571 266 Q 525 256 483 246 L 442 238 Q 379 228 327 220 C 297 215 295 186 325 186 Z\", \"M 820 66 Q 807 115 802 200 Q 801 216 794 222 Q 787 228 781 207 Q 757 104 740 87 Q 698 39 520 35 Q 423 36 381 52 Q 344 71 336 95 Q 326 122 325 186 L 327 220 Q 333 293 348 330 Q 352 343 353 353 C 357 368 356 369 331 385 Q 309 401 294 407 C 268 422 253 419 266 392 Q 287 371 283 296 Q 276 98 305 53 Q 362 -32 649 -12 Q 760 -3 802 22 Q 830 35 820 66 Z\"], \"medians\": [[[347, 794], [360, 752], [327, 711], [291, 675], [236, 635], [173, 607]], [[585, 813], [699, 747], [718, 731], [739, 700]], [[544, 725], [555, 710], [564, 677], [493, 593], [417, 523], [321, 450], [248, 406], [143, 360], [68, 336]], [[344, 659], [396, 657], [449, 634], [677, 472], [764, 422], [791, 412], [818, 411], [966, 415]], [[341, 384], [351, 375], [371, 372], [579, 413], [602, 410], [636, 378], [605, 288], [580, 272]], [[451, 367], [472, 346], [472, 338], [465, 266], [447, 250]], [[329, 191], [349, 207], [568, 243], [614, 243], [638, 235]], [[275, 393], [294, 385], [316, 345], [303, 197], [306, 131], [315, 86], [331, 58], [379, 29], [464, 12], [563, 9], [677, 21], [742, 40], [775, 59], [791, 214]]], \"radStrokes\": [0, 1, 2, 3]}","export const charData = \n{\"strokes\": [\"M 312 721 Q 316 640 162 492 Q 153 488 164 484 Q 243 484 383 656 Q 390 665 394 668 Q 403 672 401 684 Q 400 694 387 707 Q 354 740 319 736 Q 309 735 312 721 Z\", \"M 588 741 Q 661 698 748 631 Q 770 612 788 610 Q 798 610 805 623 Q 815 641 792 686 Q 770 743 583 776 Q 573 780 572 765 Q 573 750 588 741 Z\", \"M 531 253 Q 577 332 601 441 Q 608 477 617 498 Q 624 511 615 522 Q 594 546 570 558 Q 546 573 535 570 Q 525 566 526 552 Q 553 429 489 298 L 465 251 Q 393 155 256 105 Q 205 89 133 71 Q 121 70 116 65 Q 109 61 119 55 Q 126 52 141 53 Q 265 60 355 100 Q 436 131 500 209 L 531 253 Z\", \"M 500 209 Q 567 131 679 32 Q 716 -2 776 5 Q 855 12 913 17 Q 932 18 949 26 Q 959 36 942 46 Q 921 56 759 101 Q 654 129 531 253 L 489 298 Q 435 355 381 424 Q 353 461 304 471 Q 288 474 276 465 Q 269 456 281 446 Q 338 407 378 359 Q 423 305 465 251 L 500 209 Z\"], \"medians\": [[[320, 726], [342, 703], [350, 683], [333, 651], [296, 600], [239, 539], [168, 489]], [[586, 762], [734, 691], [765, 663], [786, 629]], [[539, 558], [574, 504], [563, 422], [522, 297], [465, 208], [388, 143], [315, 106], [230, 79], [123, 62]], [[286, 458], [320, 445], [350, 423], [562, 183], [644, 112], [702, 72], [753, 52], [941, 34]]]}","export const charData = \n{\"strokes\": [\"M 225 514 Q 229 492 229 411 Q 228 345 214 308 Q 210 268 173 219 Q 160 206 171 181 Q 183 150 200 138 Q 213 128 228 146 Q 288 239 477 437 Q 493 452 493 462 Q 494 469 487 467 Q 469 461 298 299 Q 283 287 276 291 Q 272 294 273 307 Q 282 532 286 557 Q 290 576 278 586 Q 265 599 217 612 Q 198 615 192 609 Q 185 602 197 582 Q 218 554 225 514 Z\", \"M 446 658 Q 500 594 532 579 Q 548 575 559 589 Q 566 602 564 620 Q 552 668 461 698 Q 445 704 434 700 Q 427 699 429 686 Q 430 673 446 658 Z\", \"M 695 336 Q 746 441 761 512 Q 794 656 810 685 Q 822 707 803 718 Q 748 761 717 752 Q 701 748 707 729 Q 723 693 716 602 Q 716 536 671 414 Q 599 240 430 137 Q 411 124 392 111 Q 376 101 391 97 Q 407 96 449 111 Q 524 142 580 192 Q 661 255 681 310 L 695 336 Z\", \"M 681 310 Q 759 232 846 127 Q 862 105 879 98 Q 889 97 897 107 Q 912 120 900 169 Q 888 232 695 336 C 669 350 660 331 681 310 Z\"], \"medians\": [[[200, 602], [243, 569], [251, 554], [254, 397], [243, 278], [252, 253], [299, 273], [488, 462]], [[442, 689], [525, 625], [539, 601]], [[720, 737], [741, 721], [762, 691], [758, 659], [742, 552], [726, 489], [691, 389], [668, 342], [628, 277], [537, 186], [490, 152], [395, 104]], [[703, 324], [708, 307], [784, 248], [851, 181], [870, 152], [881, 114]]], \"radStrokes\": [2, 3]}","export const charData = \n{\"strokes\": [\"M 686 704 Q 770 716 912 703 Q 937 700 943 710 Q 950 723 938 736 Q 907 764 861 784 Q 846 790 819 781 Q 728 760 493 731 Q 156 695 143 694 Q 136 695 129 694 Q 114 694 113 682 Q 112 669 132 654 Q 150 641 182 629 Q 194 625 212 634 Q 257 649 406 674 Q 478 686 620 699 L 686 704 Z\", \"M 293 536 Q 280 540 257 545 Q 244 549 241 543 Q 234 537 243 521 Q 270 463 285 367 Q 288 339 304 320 Q 322 298 327 313 Q 331 326 331 349 L 328 381 Q 313 477 311 505 C 309 531 309 531 293 536 Z\", \"M 498 406 Q 520 481 545 503 Q 570 531 545 549 Q 523 562 493 583 Q 472 596 430 572 Q 367 548 293 536 C 263 531 281 501 311 505 Q 320 506 331 508 Q 380 518 422 527 Q 450 533 457 521 Q 464 515 456 482 Q 449 448 439 409 C 432 380 489 377 498 406 Z\", \"M 331 349 Q 332 349 334 348 Q 344 345 359 349 Q 407 361 512 371 Q 524 372 524 382 Q 524 389 498 406 C 477 420 468 417 439 409 Q 378 391 328 381 C 299 375 302 357 331 349 Z\", \"M 578 106 Q 556 113 526 120 Q 513 124 512 116 Q 513 107 524 96 Q 591 35 634 -13 Q 647 -23 663 -6 Q 711 57 707 146 Q 695 464 708 641 Q 715 672 708 685 Q 702 694 686 704 C 663 723 613 728 620 699 Q 629 678 637 576 Q 637 435 635 154 Q 634 117 622 104 Q 609 97 578 106 Z\"], \"medians\": [[[126, 681], [187, 663], [480, 710], [845, 747], [930, 719]], [[250, 535], [271, 517], [283, 497], [316, 319]], [[302, 534], [323, 524], [451, 554], [480, 549], [503, 523], [476, 436], [447, 415]], [[335, 355], [348, 366], [438, 386], [490, 388], [515, 381]], [[627, 698], [670, 662], [670, 122], [653, 70], [636, 56], [571, 83], [520, 114]]], \"radStrokes\": [1, 2, 3]}","export const charData = \n{\"strokes\": [\"M 140 567 Q 127 574 91 582 Q 78 586 73 581 Q 66 574 75 556 Q 106 475 121 347 Q 122 308 143 281 Q 162 256 168 273 Q 177 295 173 336 L 168 375 Q 152 496 149 534 C 146 564 146 564 140 567 Z\", \"M 315 414 Q 337 517 366 549 Q 391 579 364 594 Q 342 606 311 624 Q 289 636 241 604 Q 205 586 140 567 C 111 558 120 525 149 534 Q 213 555 246 564 Q 273 571 280 561 Q 290 552 280 507 Q 270 462 258 411 C 251 382 309 385 315 414 Z\", \"M 173 336 Q 260 366 333 382 Q 343 385 343 394 Q 343 401 315 414 L 258 411 L 257 411 Q 209 390 168 375 C 140 365 145 326 173 336 Z\", \"M 774 475 Q 808 590 854 624 Q 873 646 856 666 Q 837 682 776 710 Q 755 717 730 708 Q 622 660 454 630 C 424 625 438 594 468 595 Q 490 594 518 603 Q 542 609 567 614 L 607 624 Q 658 637 711 650 Q 736 657 746 647 Q 758 635 753 611 Q 737 541 717 483 C 707 455 765 446 774 475 Z\", \"M 567 614 Q 568 613 569 610 Q 572 601 567 442 C 566 412 612 424 616 454 Q 628 553 634 567 Q 646 592 607 624 C 584 643 556 642 567 614 Z\", \"M 449 395 Q 456 388 467 384 Q 480 381 494 385 Q 585 412 784 441 Q 796 442 797 453 Q 797 460 774 475 L 717 483 Q 711 483 708 481 Q 659 468 616 454 L 567 442 Q 506 429 455 419 Q 451 419 450 417 C 428 411 428 411 449 395 Z\", \"M 996 188 Q 980 216 955 304 Q 954 322 945 326 Q 938 330 935 310 Q 913 213 895 183 Q 876 155 812 137 Q 746 119 665 124 Q 595 128 539 153 Q 490 178 474 210 Q 444 268 449 395 L 450 417 Q 453 499 468 595 C 472 619 472 619 454 630 Q 441 643 416 651 Q 400 655 391 650 Q 384 646 390 625 Q 406 579 404 536 Q 394 262 419 186 Q 426 149 462 117 Q 579 27 815 63 Q 843 69 873 77 Q 934 96 992 140 Q 1014 159 996 188 Z\"], \"medians\": [[[80, 574], [114, 542], [118, 528], [156, 280]], [[156, 542], [160, 555], [279, 594], [301, 590], [325, 567], [292, 439], [265, 417]], [[179, 343], [190, 362], [259, 388], [316, 396], [333, 392]], [[464, 627], [474, 618], [494, 617], [610, 644], [721, 678], [746, 681], [771, 674], [801, 641], [758, 514], [725, 488]], [[574, 615], [603, 580], [592, 472], [570, 456]], [[455, 411], [484, 403], [718, 457], [786, 453]], [[399, 641], [424, 616], [434, 590], [424, 354], [439, 220], [465, 164], [517, 124], [600, 96], [675, 88], [762, 91], [868, 116], [913, 140], [947, 174], [944, 318]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 657 508 Q 696 634 739 664 Q 758 686 741 708 Q 720 724 658 753 Q 636 762 610 752 Q 489 695 295 659 C 266 653 277 611 306 620 Q 396 647 425 652 L 471 664 Q 523 679 581 693 Q 612 703 626 691 Q 639 678 634 651 Q 616 572 594 509 C 584 481 648 479 657 508 Z\", \"M 425 652 Q 426 640 422 465 C 421 435 468 447 472 477 Q 485 585 492 613 Q 504 640 472 663 L 471 664 C 448 683 424 682 425 652 Z\", \"M 273 411 Q 291 398 314 404 Q 428 435 675 469 Q 687 470 688 481 Q 688 490 657 508 L 594 509 Q 530 493 472 477 L 422 465 Q 343 450 276 439 Q 273 439 274 438 C 245 432 247 425 273 411 Z\", \"M 929 157 Q 905 224 890 337 Q 887 356 878 362 Q 868 369 864 343 Q 851 201 831 176 Q 774 113 538 115 Q 409 121 355 144 Q 307 169 297 202 Q 276 253 272 387 Q 272 400 273 411 L 274 438 Q 280 549 301 605 Q 304 612 306 620 C 314 645 314 645 295 659 Q 294 660 292 662 Q 229 708 211 703 Q 192 696 202 675 Q 227 629 222 560 Q 218 232 249 167 Q 286 80 446 59 Q 548 46 707 56 Q 851 66 907 97 Q 946 118 929 157 Z\"], \"medians\": [[[305, 655], [319, 644], [333, 646], [602, 722], [643, 722], [668, 703], [684, 679], [634, 537], [602, 513]], [[434, 651], [460, 626], [448, 496], [425, 479]], [[279, 431], [293, 422], [314, 425], [592, 483], [649, 488], [678, 480]], [[215, 686], [247, 653], [262, 621], [252, 547], [246, 388], [254, 270], [266, 205], [274, 181], [295, 150], [343, 116], [456, 89], [610, 83], [773, 100], [845, 124], [876, 145], [878, 160], [875, 352]]], \"radStrokes\": [0, 2, 3]}","export const charData = \n{\"strokes\": [\"M 166 606 Q 153 613 120 622 Q 107 626 103 622 Q 96 615 104 598 Q 132 522 141 400 Q 142 363 160 337 Q 176 313 184 329 Q 191 348 191 382 L 188 417 Q 175 541 174 576 C 173 603 173 603 166 606 Z\", \"M 326 448 Q 344 551 372 582 Q 394 610 370 624 Q 304 657 303 657 Q 293 657 282 651 Q 245 626 166 606 C 137 598 146 565 174 576 Q 184 582 260 598 Q 285 604 291 594 Q 300 587 292 545 Q 283 499 272 443 C 266 414 321 418 326 448 Z\", \"M 191 382 Q 233 397 346 413 Q 356 414 357 424 Q 357 431 326 448 C 312 456 301 452 272 443 Q 224 428 188 417 C 159 408 163 372 191 382 Z\", \"M 746 587 Q 774 672 809 699 Q 825 717 811 735 Q 795 748 742 773 Q 724 780 702 772 Q 630 741 503 714 C 474 708 489 677 518 683 Q 614 704 710 724 Q 711 724 715 721 Q 728 705 693 589 C 684 560 736 559 746 587 Z\", \"M 490 508 Q 502 508 515 509 Q 593 531 761 553 Q 771 554 772 564 Q 772 571 746 587 C 728 599 722 597 693 589 Q 582 558 495 542 C 466 536 460 508 490 508 Z\", \"M 503 714 Q 457 742 443 740 Q 422 739 436 715 Q 467 652 426 428 Q 411 337 354 232 Q 314 154 194 59 Q 178 47 175 41 Q 172 34 184 34 Q 227 31 321 115 Q 447 236 490 508 L 495 542 Q 502 593 509 650 Q 515 669 517 681 Q 517 682 518 683 C 523 702 523 702 503 714 Z\", \"M 569 248 Q 651 288 700 317 Q 785 372 823 381 Q 847 388 838 409 Q 828 428 802 448 Q 780 466 766 465 Q 753 465 755 450 Q 755 414 652 335 Q 612 305 572 271 C 549 252 542 235 569 248 Z\", \"M 959 82 Q 940 137 927 233 Q 926 249 917 254 Q 910 258 906 238 Q 896 120 879 97 Q 849 61 714 60 Q 641 61 610 74 Q 582 87 576 106 Q 558 161 569 248 L 572 271 Q 578 326 592 354 Q 605 384 586 401 Q 537 440 520 436 Q 505 430 512 413 Q 531 376 526 320 Q 516 116 541 72 Q 569 30 655 16 Q 718 6 817 11 Q 907 15 942 34 Q 973 50 959 82 Z\"], \"medians\": [[[109, 615], [141, 584], [144, 571], [173, 336]], [[174, 584], [184, 596], [198, 601], [291, 625], [307, 621], [333, 598], [303, 471], [278, 450]], [[194, 388], [206, 405], [270, 422], [321, 429], [348, 422]], [[513, 713], [527, 702], [715, 750], [739, 742], [762, 714], [727, 614], [700, 600]], [[496, 513], [511, 527], [699, 567], [739, 569], [762, 563]], [[442, 727], [467, 706], [480, 684], [476, 598], [455, 445], [434, 358], [412, 297], [371, 216], [319, 144], [252, 81], [182, 41]], [[765, 454], [774, 444], [783, 409], [684, 332], [584, 268], [577, 253]], [[524, 422], [561, 373], [550, 306], [543, 199], [551, 113], [563, 81], [600, 53], [649, 40], [758, 35], [846, 43], [912, 68], [919, 119], [916, 246]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 171 557 Q 158 564 128 569 Q 115 573 111 568 Q 104 561 113 544 Q 143 474 158 359 Q 161 325 179 301 Q 198 277 203 293 Q 210 314 208 350 L 203 384 Q 185 499 184 529 C 183 552 183 552 171 557 Z\", \"M 349 412 Q 362 512 389 544 Q 411 572 386 585 Q 365 595 336 612 Q 315 624 276 595 Q 237 577 171 557 C 142 548 155 520 184 529 Q 206 536 276 556 Q 301 563 308 553 Q 317 547 297 415 C 293 385 345 382 349 412 Z\", \"M 208 350 Q 247 363 363 381 Q 373 382 374 392 Q 374 399 349 412 L 297 415 Q 296 415 294 414 Q 243 395 203 384 C 174 376 179 341 208 350 Z\", \"M 701 420 Q 720 441 740 634 Q 750 689 786 724 Q 804 743 786 757 Q 765 773 710 795 Q 695 804 637 784 Q 621 784 537 758 Q 494 745 466 740 Q 448 739 446 733 Q 442 727 461 717 Q 497 701 519 709 Q 561 725 658 743 Q 674 744 682 742 Q 698 735 694 683 Q 675 493 662 453 Q 656 426 666 414 C 676 386 688 393 701 420 Z\", \"M 666 414 Q 617 408 544 393 Q 519 389 519 409 Q 522 580 535 609 Q 542 627 534 639 Q 516 657 489 668 Q 470 675 461 666 Q 454 660 463 648 Q 484 602 466 414 Q 463 396 459 378 Q 453 356 469 341 Q 490 326 512 340 Q 551 368 668 383 Q 785 407 810 383 Q 823 370 807 326 Q 800 251 788 172 Q 781 111 754 72 Q 747 60 722 62 Q 682 75 646 86 Q 630 90 631 83 Q 631 77 640 69 Q 704 11 727 -29 Q 736 -51 755 -40 Q 824 -4 836 75 Q 855 181 868 298 Q 875 338 895 370 Q 908 388 896 401 Q 877 422 838 444 Q 816 456 786 443 Q 746 425 707 421 Q 703 421 701 420 L 666 414 Z\", \"M 527 194 Q 659 215 748 210 Q 769 209 774 217 Q 780 229 768 239 Q 740 261 701 275 Q 688 279 667 270 Q 412 213 281 202 Q 268 201 268 191 Q 268 181 286 169 Q 301 159 329 151 Q 339 148 354 156 Q 363 160 405 169 Q 459 184 527 194 Z\"], \"medians\": [[[118, 561], [149, 534], [155, 515], [192, 300]], [[182, 554], [194, 548], [313, 585], [340, 569], [349, 559], [327, 439], [304, 428]], [[211, 356], [228, 374], [293, 392], [342, 396], [365, 390]], [[453, 731], [509, 728], [575, 749], [688, 770], [721, 752], [736, 735], [715, 644], [695, 481], [687, 449], [671, 422]], [[470, 658], [489, 643], [504, 617], [492, 403], [496, 373], [525, 372], [606, 390], [802, 419], [829, 411], [855, 383], [840, 327], [807, 102], [780, 38], [754, 17], [744, 20], [639, 82]], [[279, 191], [335, 179], [495, 212], [690, 243], [763, 224]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 292 755 Q 282 759 253 764 Q 243 767 239 762 Q 233 756 241 741 Q 266 695 283 617 Q 286 593 300 579 Q 318 558 322 573 Q 326 583 325 599 L 322 628 Q 307 709 306 731 C 305 751 305 751 292 755 Z\", \"M 449 651 Q 465 717 485 736 Q 504 758 484 771 Q 468 781 443 797 Q 427 806 383 782 Q 347 767 292 755 C 263 748 277 722 306 731 Q 333 740 388 752 Q 410 756 416 748 Q 422 744 416 716 Q 412 688 404 655 C 397 626 442 622 449 651 Z\", \"M 325 599 Q 329 599 337 601 Q 376 611 460 625 Q 469 626 469 634 Q 469 641 449 651 C 427 663 427 663 404 655 Q 403 655 401 654 Q 356 638 322 628 C 293 619 295 596 325 599 Z\", \"M 579 789 Q 567 795 538 801 Q 526 805 523 800 Q 516 794 524 779 Q 546 733 558 657 Q 559 635 573 619 Q 589 598 595 613 Q 598 622 599 636 L 597 666 Q 588 739 588 762 C 587 785 587 785 579 789 Z\", \"M 740 687 Q 758 744 777 760 Q 799 784 778 798 Q 715 831 714 832 Q 707 832 700 827 Q 664 805 579 789 C 550 783 559 753 588 762 Q 595 766 675 780 Q 700 784 705 775 Q 711 771 704 741 Q 698 717 691 689 C 684 660 731 658 740 687 Z\", \"M 599 636 Q 608 635 620 637 Q 662 647 753 655 Q 763 656 764 665 Q 764 672 740 687 C 724 697 720 696 691 689 Q 639 676 597 666 C 568 659 569 638 599 636 Z\", \"M 594 311 Q 610 338 627 429 Q 640 484 675 518 Q 694 536 675 551 Q 656 567 602 590 Q 589 597 518 580 Q 490 580 391 556 Q 334 543 299 539 Q 283 538 280 533 Q 276 529 293 517 Q 327 499 348 507 Q 406 525 537 542 Q 561 543 569 539 Q 581 535 578 500 Q 568 376 559 349 Q 550 322 564 307 C 577 280 581 284 594 311 Z\", \"M 564 307 Q 480 298 426 285 Q 393 279 390 301 Q 384 338 402 408 Q 403 417 405 418 Q 420 439 388 463 Q 358 487 342 489 Q 329 489 326 480 Q 323 470 331 462 Q 344 438 345 421 Q 346 388 339 328 Q 332 282 328 274 Q 324 267 326 261 Q 327 252 340 242 Q 353 229 360 228 Q 370 229 385 234 Q 401 244 500 263 Q 723 305 765 278 Q 777 268 775 251 Q 776 241 757 143 Q 744 85 729 64 Q 716 42 691 46 Q 661 55 630 63 Q 612 70 608 65 Q 605 59 621 47 Q 688 -29 693 -53 Q 697 -63 707 -64 Q 725 -67 758 -35 Q 789 -2 806 67 Q 843 245 864 260 Q 873 267 873 274 Q 874 281 841 307 Q 805 334 750 323 Q 684 323 594 311 L 564 307 Z\", \"M 412 125 Q 565 146 660 142 Q 681 141 685 149 Q 691 161 680 170 Q 652 192 614 207 Q 601 211 579 203 Q 573 203 374 163 Q 172 133 145 130 Q 133 129 133 119 Q 133 109 150 97 Q 165 87 193 78 Q 203 75 218 83 Q 228 87 275 98 Q 336 114 412 125 Z\"], \"medians\": [[[247, 755], [275, 733], [282, 716], [312, 578]], [[302, 753], [311, 746], [400, 772], [434, 770], [452, 751], [431, 676], [412, 662]], [[330, 607], [344, 619], [400, 634], [460, 634]], [[531, 792], [557, 769], [585, 619]], [[588, 769], [612, 784], [707, 803], [719, 799], [743, 776], [722, 712], [697, 695]], [[604, 644], [619, 655], [696, 670], [733, 671], [755, 664]], [[286, 531], [331, 524], [426, 546], [554, 566], [598, 557], [624, 529], [605, 462], [586, 354], [570, 318]], [[339, 475], [376, 431], [362, 314], [368, 266], [425, 265], [522, 286], [702, 306], [777, 301], [813, 277], [813, 243], [784, 112], [771, 67], [746, 20], [722, -1], [613, 62]], [[144, 119], [199, 107], [339, 137], [595, 175], [674, 157]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 319 161 Q 353 133 395 87 Q 411 71 420 70 Q 429 70 435 81 Q 442 91 438 122 Q 432 156 349 204 L 307 228 Q 285 241 257 256 Q 236 266 239 288 Q 258 352 276 416 L 286 456 Q 308 546 328 636 Q 335 684 354 709 Q 366 731 358 744 Q 345 762 297 788 Q 276 800 260 791 Q 247 784 257 767 Q 290 719 241 447 L 233 402 Q 230 392 228 378 Q 218 326 195 287 Q 185 265 205 248 Q 248 223 284 192 L 319 161 Z\", \"M 284 192 Q 281 189 279 185 Q 245 140 144 68 Q 131 58 143 56 Q 215 49 319 161 L 349 204 Q 391 291 404 342 Q 404 384 424 437 Q 428 455 438 471 Q 448 489 432 498 Q 384 534 358 526 Q 345 522 351 507 Q 360 491 361 472 L 361 442 Q 361 430 360 416 Q 357 326 307 228 L 284 192 Z\", \"M 361 472 Q 324 465 286 456 L 241 447 Q 180 437 116 424 Q 95 420 63 423 Q 50 423 47 414 Q 44 401 52 393 Q 71 375 101 354 Q 111 350 123 357 Q 183 393 233 402 L 276 416 Q 316 429 361 442 C 390 450 390 478 361 472 Z\", \"M 723 412 Q 747 437 767 617 Q 779 672 814 706 Q 832 725 814 739 Q 795 755 740 777 Q 725 784 665 766 Q 644 766 561 741 Q 515 728 486 723 Q 470 722 467 716 Q 463 712 481 700 Q 515 684 536 693 Q 581 709 685 728 Q 703 729 710 727 Q 726 720 721 671 Q 703 490 691 453 Q 682 426 698 409 C 709 388 709 388 723 412 Z\", \"M 698 409 Q 652 403 585 389 Q 561 385 561 405 Q 564 567 580 605 Q 586 621 579 632 Q 563 648 539 659 Q 523 666 514 658 Q 507 654 515 642 Q 533 603 514 412 Q 510 396 506 378 Q 500 359 514 343 Q 533 327 552 339 Q 571 352 610 360 Q 691 379 776 385 Q 807 386 819 374 Q 829 362 816 321 Q 807 252 793 179 Q 784 124 758 87 Q 748 75 724 78 Q 690 87 662 94 Q 646 98 647 91 Q 647 85 656 78 Q 710 27 729 -8 Q 738 -27 756 -18 Q 820 18 834 88 Q 855 185 871 294 Q 878 330 898 360 Q 911 376 899 388 Q 883 409 847 430 Q 826 442 798 430 Q 762 417 729 413 Q 725 413 723 412 L 698 409 Z\", \"M 425 224 Q 412 223 409 214 Q 405 204 421 192 Q 463 162 505 178 Q 625 218 752 238 Q 770 239 770 248 Q 771 261 752 270 Q 724 283 701 277 Q 509 234 425 224 Z\"], \"medians\": [[[267, 778], [292, 759], [313, 726], [259, 427], [216, 272], [232, 251], [345, 176], [396, 133], [420, 84]], [[361, 514], [391, 489], [398, 476], [372, 322], [332, 223], [304, 179], [267, 138], [202, 87], [149, 62]], [[61, 409], [111, 389], [161, 407], [335, 450], [355, 465]], [[473, 714], [518, 709], [701, 753], [737, 745], [765, 717], [747, 656], [724, 488], [703, 421]], [[521, 650], [531, 645], [552, 616], [536, 401], [541, 370], [579, 370], [798, 407], [838, 400], [861, 373], [844, 308], [816, 143], [795, 77], [783, 58], [755, 36], [656, 87]], [[421, 210], [472, 201], [718, 256], [758, 251]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 303 726 Q 284 725 282 719 Q 278 713 296 701 Q 333 682 357 690 Q 418 709 554 728 Q 579 731 587 726 Q 602 719 598 674 Q 582 509 570 476 Q 564 457 571 439 Q 578 423 592 425 Q 605 429 613 445 Q 629 475 648 610 Q 661 670 699 705 Q 718 724 699 741 Q 677 757 620 782 Q 605 789 533 771 Q 515 771 399 744 Q 341 731 303 726 Z\", \"M 723 386 Q 739 386 757 377 Q 770 368 769 349 Q 770 334 744 197 Q 725 116 705 87 Q 693 62 665 64 Q 626 77 586 88 Q 567 94 564 89 Q 561 83 577 71 Q 662 -8 671 -35 Q 675 -45 685 -46 Q 703 -49 737 -15 Q 770 19 779 60 Q 839 345 861 360 Q 871 367 870 375 Q 871 384 836 409 Q 802 431 794 433 Q 781 436 755 428 Q 736 424 710 423 Q 661 422 584 409 Q 484 396 423 380 Q 389 373 384 398 Q 378 461 395 536 Q 399 578 405 581 Q 420 605 385 631 Q 352 656 334 658 Q 321 659 317 648 Q 313 638 323 629 Q 336 604 339 584 Q 342 535 332 447 Q 323 378 316 367 Q 309 351 331 332 Q 344 319 352 317 Q 364 320 380 324 Q 395 334 493 355 Q 604 379 723 386 Z\", \"M 412 184 Q 575 205 672 196 Q 694 195 700 203 Q 707 216 695 227 Q 665 252 623 269 Q 617 272 503 247 Q 497 247 369 228 Q 177 201 128 198 Q 115 197 114 186 Q 114 174 133 161 Q 149 151 180 140 Q 190 136 207 145 Q 219 149 268 159 Q 332 175 412 184 Z\"], \"medians\": [[[289, 716], [339, 709], [439, 733], [570, 755], [609, 751], [630, 735], [645, 717], [623, 635], [605, 507], [589, 443]], [[331, 643], [351, 626], [372, 595], [354, 412], [360, 360], [403, 356], [560, 388], [719, 406], [782, 400], [812, 370], [762, 134], [746, 81], [723, 38], [698, 18], [669, 28], [569, 86]], [[127, 185], [188, 171], [385, 207], [613, 234], [688, 212]]]}","export const charData = \n{\"strokes\": [\"M 541 450 Q 754 474 901 462 Q 935 462 940 467 Q 949 482 935 494 Q 862 560 793 538 Q 745 529 542 499 L 482 492 Q 355 479 290 469 Q 218 457 112 455 Q 97 455 96 443 Q 95 430 116 414 Q 134 401 168 388 Q 180 384 199 393 Q 215 399 292 413 Q 377 434 482 444 L 541 450 Z\", \"M 482 444 Q 482 240 478 171 Q 475 -6 495 -40 Q 511 -56 521 -34 Q 539 21 540 425 Q 540 438 541 450 L 542 499 Q 543 722 569 763 Q 576 781 555 798 Q 528 819 482 830 Q 461 836 447 821 Q 437 812 450 799 Q 480 774 482 739 Q 482 651 482 492 L 482 444 Z\"], \"medians\": [[[109, 442], [177, 422], [373, 456], [819, 505], [869, 499], [932, 476]], [[456, 811], [484, 803], [522, 767], [512, 593], [507, -33]]]}","export const charData = \n{\"strokes\": [\"M 388 486 Q 319 225 74 56 Q 59 44 74 41 Q 92 42 133 60 Q 217 103 278 166 Q 348 230 380 303 Q 438 441 451 505 L 456 539 Q 456 593 481 702 Q 487 733 500 762 Q 510 784 490 795 Q 430 835 398 823 Q 382 817 390 799 Q 411 762 412 689 Q 402 550 396 523 L 388 486 Z\", \"M 451 505 Q 520 527 570 535 Q 592 539 598 534 Q 602 527 598 511 Q 490 112 639 36 Q 676 18 741 10 Q 877 -3 968 54 Q 989 66 980 90 Q 961 156 954 255 Q 953 274 946 273 Q 940 273 935 254 Q 925 212 913 164 Q 903 127 879 104 Q 860 86 800 80 Q 733 70 679 89 Q 631 104 616 136 Q 594 173 602 259 Q 612 350 654 464 Q 673 512 702 538 Q 718 551 717 564 Q 716 576 646 607 Q 631 617 613 602 Q 568 572 456 539 L 396 523 Q 335 510 278 493 Q 232 483 156 482 Q 141 483 144 467 Q 147 455 174 439 Q 205 421 243 437 Q 321 465 388 486 L 451 505 Z\"], \"medians\": [[[402, 808], [428, 792], [451, 765], [424, 515], [412, 464], [374, 360], [330, 274], [266, 191], [170, 103], [78, 49]], [[153, 472], [190, 458], [227, 459], [587, 561], [638, 560], [646, 551], [639, 520], [618, 464], [589, 349], [576, 202], [589, 136], [603, 107], [642, 70], [679, 55], [736, 43], [801, 43], [872, 55], [917, 78], [932, 98], [946, 267]]], \"radStrokes\": [1]}","export const charData = \n{\"strokes\": [\"M 433 375 Q 649 436 864 443 Q 889 443 895 453 Q 901 469 887 480 Q 812 531 750 510 Q 698 494 450 429 Q 441 428 434 424 L 387 414 Q 314 398 270 386 Q 204 367 103 353 Q 88 352 88 339 Q 89 326 111 313 Q 130 303 166 293 Q 179 290 196 301 Q 253 328 386 363 L 433 375 Z\", \"M 386 363 Q 386 159 409 117 Q 445 69 575 64 Q 719 58 792 93 Q 805 102 804 113 Q 800 132 779 142 Q 749 157 729 154 Q 716 154 707 147 Q 680 125 543 118 Q 473 118 450 150 Q 426 189 433 375 L 434 424 Q 437 644 465 686 Q 481 714 452 734 Q 416 759 394 765 Q 363 772 354 758 Q 347 748 357 739 Q 391 705 388 630 Q 391 551 387 414 L 386 363 Z\"], \"medians\": [[[101, 340], [172, 328], [492, 417], [767, 476], [820, 476], [882, 461]], [[364, 750], [397, 734], [424, 701], [407, 327], [414, 194], [431, 131], [477, 103], [544, 91], [658, 97], [747, 116], [784, 112]]], \"radStrokes\": [0]}","export const charData = \n{\"strokes\": [\"M 472 702 Q 502 677 534 645 Q 552 629 572 630 Q 585 631 592 649 Q 598 668 585 705 Q 578 727 541 744 Q 447 771 436 764 Q 429 758 432 742 Q 436 729 472 702 Z\", \"M 128 467 Q 103 464 121 443 Q 137 427 159 419 Q 184 412 205 418 Q 427 478 848 478 Q 875 478 901 477 Q 925 477 931 487 Q 938 502 918 519 Q 846 571 778 551 Q 514 509 128 467 Z\", \"M 346 344 Q 342 241 202 138 Q 169 116 152 101 Q 139 86 157 88 Q 220 85 332 184 Q 405 257 428 279 Q 443 291 430 311 Q 391 359 360 361 Q 347 361 346 344 Z\", \"M 611 302 Q 675 223 752 114 Q 767 86 785 79 Q 795 76 806 87 Q 822 100 815 155 Q 811 224 623 335 Q 620 338 618 338 Q 608 347 603 332 Q 600 316 611 302 Z\"], \"medians\": [[[441, 756], [455, 743], [531, 705], [568, 654]], [[125, 455], [184, 444], [454, 484], [805, 517], [851, 515], [918, 494]], [[360, 347], [383, 297], [347, 242], [292, 181], [249, 145], [162, 97]], [[611, 333], [753, 186], [774, 154], [789, 97]]], \"radStrokes\": [2, 3]}","export const charData = \n{\"strokes\": [\"M 499 673 Q 590 688 686 701 Q 750 711 761 720 Q 771 729 767 738 Q 760 753 727 762 Q 693 772 598 744 Q 453 713 314 705 Q 272 701 301 680 Q 340 653 430 664 Q 440 665 452 667 L 499 673 Z\", \"M 482 468 Q 494 520 507 568 Q 525 635 524 641 Q 512 660 499 673 C 479 695 448 697 452 667 Q 461 625 443 526 Q 436 499 428 460 L 419 421 Q 395 322 357 159 C 350 130 401 136 408 165 Q 442 307 472 429 L 482 468 Z\", \"M 641 177 Q 678 360 738 416 Q 759 438 741 459 Q 722 475 661 505 Q 640 514 614 505 Q 545 481 482 468 L 428 460 Q 355 450 280 446 Q 261 446 262 434 Q 265 424 286 416 Q 314 401 357 413 Q 388 417 419 421 L 472 429 Q 527 439 584 446 Q 614 452 625 440 Q 643 421 637 384 Q 615 266 585 174 C 576 145 635 148 641 177 Z\", \"M 357 159 Q 329 158 301 152 Q 159 130 72 134 Q 62 135 53 128 Q 46 121 52 110 Q 64 94 119 62 Q 134 55 156 64 Q 339 130 526 140 Q 670 152 937 99 Q 943 99 949 97 Q 970 93 977 103 Q 984 115 964 132 Q 883 199 844 191 Q 840 191 837 189 Q 807 183 641 177 L 585 174 Q 521 178 408 165 L 357 159 Z\"], \"medians\": [[[304, 694], [343, 685], [400, 686], [704, 735], [753, 733]], [[460, 663], [489, 633], [483, 587], [391, 195], [375, 174], [362, 168]], [[273, 435], [308, 428], [345, 430], [616, 476], [654, 467], [685, 434], [619, 200], [592, 179]], [[63, 118], [138, 97], [419, 149], [654, 161], [855, 153], [905, 138], [966, 110]]], \"radStrokes\": [0, 3]}","export const charData = \n{\"strokes\": [\"M 120 523 Q 105 453 78 389 Q 65 353 87 323 Q 97 307 116 322 Q 164 371 155 470 Q 155 504 144 527 Q 137 534 131 535 Q 124 532 120 523 Z\", \"M 287 591 Q 305 582 354 537 Q 367 527 380 528 Q 390 529 393 540 Q 397 553 387 579 Q 381 595 355 606 Q 298 622 288 619 C 258 616 261 606 287 591 Z\", \"M 288 619 Q 291 698 307 752 Q 316 767 313 781 Q 306 791 250 825 Q 226 841 205 826 Q 201 822 206 806 Q 239 758 240 691 Q 240 259 227 187 Q 221 154 212 120 Q 200 78 227 18 Q 234 0 242 -3 Q 248 -10 256 -1 Q 263 3 274 24 Q 284 49 283 81 Q 282 130 287 591 L 288 619 Z\", \"M 644 462 Q 645 458 647 453 Q 654 435 668 437 Q 684 440 691 457 Q 710 485 735 622 Q 751 679 789 712 Q 808 730 791 745 Q 772 763 717 790 Q 699 799 642 781 Q 626 781 487 735 C 459 726 485 691 511 705 Q 524 718 655 749 Q 673 752 680 749 Q 695 742 688 696 Q 660 515 645 485 C 640 471 640 471 644 462 Z\", \"M 503 574 Q 507 573 514 575 Q 575 588 621 598 Q 643 605 634 617 Q 621 630 596 632 Q 560 632 502 600 C 476 586 473 576 503 574 Z\", \"M 505 438 Q 517 438 529 440 Q 565 450 644 462 C 674 467 670 469 645 485 Q 639 489 627 496 Q 611 503 584 494 Q 541 478 505 469 C 476 462 475 437 505 438 Z\", \"M 504 410 Q 505 425 505 438 L 505 469 Q 504 524 503 574 L 502 600 Q 505 652 511 705 C 512 718 512 718 487 735 Q 471 748 456 755 Q 437 762 428 756 Q 418 749 427 734 Q 490 607 446 160 Q 442 111 400 61 Q 387 45 394 22 Q 404 -6 417 -17 Q 430 -26 443 -9 Q 462 19 633 130 Q 654 140 659 150 Q 665 160 654 161 Q 638 161 514 108 Q 493 101 494 119 Q 501 261 504 383 L 504 410 Z\", \"M 655 305 Q 697 330 723 349 Q 781 397 811 409 Q 833 419 822 437 Q 809 453 782 469 Q 757 482 744 479 Q 731 478 736 464 Q 739 431 639 317 C 619 294 629 290 655 305 Z\", \"M 639 317 Q 593 353 541 397 Q 528 412 510 411 Q 506 411 504 410 C 474 410 478 398 504 383 Q 531 370 553 345 Q 683 215 786 126 Q 805 110 831 113 Q 925 132 961 145 Q 977 149 981 157 Q 984 164 973 167 Q 805 206 726 256 Q 693 277 655 305 L 639 317 Z\"], \"medians\": [[[134, 525], [126, 426], [102, 332]], [[291, 612], [350, 578], [379, 542]], [[217, 819], [246, 796], [269, 766], [260, 276], [246, 103], [247, 11]], [[500, 737], [515, 727], [624, 760], [692, 770], [712, 759], [737, 726], [706, 632], [693, 552], [666, 457]], [[508, 581], [519, 591], [572, 609], [623, 610]], [[511, 446], [528, 458], [609, 478], [628, 476], [633, 468]], [[437, 745], [474, 700], [479, 655], [484, 403], [465, 73], [514, 81], [653, 154]], [[743, 470], [756, 459], [769, 431], [698, 355], [668, 328], [650, 323]], [[508, 403], [700, 239], [812, 165], [888, 156], [973, 158]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 290 802 Q 302 766 218 660 Q 178 611 126 560 Q 116 551 113 546 Q 109 536 121 537 Q 170 537 316 695 Q 334 722 361 742 Q 371 751 368 764 Q 367 777 343 801 Q 321 820 303 823 Q 285 824 290 802 Z\", \"M 261 379 Q 289 412 319 450 Q 347 490 372 509 Q 382 519 379 533 Q 376 546 350 573 Q 325 594 305 596 Q 286 596 292 573 Q 301 546 283 508 Q 205 372 58 226 Q 46 217 44 211 Q 40 201 54 201 Q 93 205 193 308 Q 212 327 233 348 L 261 379 Z\", \"M 233 348 Q 251 330 246 245 Q 245 169 224 91 Q 220 72 228 40 Q 238 6 250 -4 Q 266 -20 278 6 Q 293 46 292 91 Q 296 260 304 299 Q 311 326 302 336 Q 278 361 261 379 C 240 401 217 373 233 348 Z\", \"M 652 482 Q 653 475 656 468 Q 663 452 676 453 Q 691 456 698 472 Q 716 499 738 625 Q 753 680 789 713 Q 808 731 791 747 Q 772 763 718 789 Q 702 798 645 779 Q 624 779 491 735 C 463 726 488 695 517 704 Q 665 753 685 745 Q 698 738 693 695 Q 671 551 658 511 L 652 482 Z\", \"M 508 582 Q 512 581 521 582 Q 579 595 621 604 Q 643 610 634 621 Q 622 634 598 636 Q 561 636 507 606 C 481 592 478 585 508 582 Z\", \"M 537 462 Q 576 472 652 482 C 682 486 682 494 658 511 Q 654 514 649 517 Q 636 524 609 515 Q 554 499 509 488 C 480 481 508 455 537 462 Z\", \"M 491 735 Q 475 748 459 756 Q 440 763 430 757 Q 420 750 429 733 Q 496 592 443 156 Q 433 116 398 73 Q 385 57 393 32 Q 403 4 417 -9 Q 430 -18 444 0 Q 462 28 621 140 Q 642 152 647 161 Q 653 171 642 173 Q 629 173 515 124 Q 496 115 496 134 Q 506 302 508 442 L 509 488 Q 508 537 508 582 L 507 606 Q 507 673 517 704 C 519 715 516 718 491 735 Z\", \"M 670 325 Q 721 355 752 376 Q 836 434 854 440 Q 878 450 866 470 Q 853 489 825 506 Q 800 522 785 519 Q 772 518 775 503 Q 779 470 715 403 Q 687 375 655 340 C 635 318 644 310 670 325 Z\", \"M 655 340 Q 604 389 545 453 Q 541 459 537 462 C 501 502 456 480 508 442 Q 533 426 553 398 Q 760 128 798 117 Q 840 110 958 131 Q 976 134 981 142 Q 985 149 974 153 Q 797 214 704 295 Q 686 310 670 325 L 655 340 Z\"], \"medians\": [[[301, 810], [319, 785], [326, 763], [287, 704], [188, 596], [121, 545]], [[304, 581], [320, 565], [334, 530], [291, 462], [170, 313], [111, 253], [53, 210]], [[261, 370], [261, 345], [276, 312], [257, 75], [262, 6]], [[503, 737], [526, 725], [601, 750], [695, 768], [714, 759], [736, 732], [675, 472]], [[515, 588], [524, 598], [569, 613], [593, 618], [624, 615]], [[516, 487], [550, 481], [648, 506]], [[439, 746], [454, 734], [478, 698], [487, 559], [487, 407], [477, 225], [465, 124], [468, 87], [488, 87], [524, 100], [641, 166]], [[785, 508], [810, 469], [805, 458], [749, 402], [673, 341], [664, 342]], [[511, 480], [524, 450], [672, 287], [727, 233], [798, 176], [822, 163], [856, 156], [972, 144]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 555 471 Q 568 455 581 449 Q 591 442 607 463 Q 623 491 654 638 Q 661 669 686 696 Q 699 709 687 724 Q 671 740 626 767 Q 602 777 532 753 Q 528 753 422 726 Q 374 713 336 705 C 307 699 328 663 357 672 Q 429 696 554 720 Q 579 726 589 717 Q 602 701 600 684 Q 578 546 566 525 Q 562 512 546 510 L 546 509 C 528 499 534 493 555 471 Z\", \"M 351 563 Q 385 554 478 575 Q 499 579 523 585 Q 545 591 548 594 Q 555 601 551 609 Q 544 619 517 625 Q 489 629 463 618 Q 438 609 411 602 Q 383 595 350 590 C 320 585 322 569 351 563 Z\", \"M 394 443 Q 451 458 555 471 C 585 475 574 497 546 509 L 545 510 Q 529 517 498 509 Q 419 485 353 471 C 294 458 335 428 394 443 Z\", \"M 336 705 Q 317 720 299 727 Q 280 734 270 728 Q 258 721 269 705 Q 329 588 296 205 Q 295 153 252 98 Q 239 82 248 58 Q 258 30 273 17 Q 286 8 300 27 Q 318 58 482 186 Q 503 199 508 210 Q 512 220 502 220 Q 490 220 363 155 Q 347 148 347 162 Q 353 307 353 428 L 353 471 Q 352 519 351 563 L 350 590 Q 347 662 357 672 C 361 688 361 688 336 705 Z\", \"M 560 299 Q 663 363 716 385 Q 735 388 732 400 Q 728 416 710 438 Q 692 459 670 463 Q 654 464 653 445 Q 654 430 643 415 Q 607 375 541 313 C 519 292 534 283 560 299 Z\", \"M 541 313 Q 436 400 394 443 C 373 464 327 443 353 428 Q 387 410 414 380 Q 568 217 690 106 Q 712 84 745 89 Q 863 104 907 116 Q 926 120 933 130 Q 937 139 924 141 Q 734 180 679 216 Q 676 219 674 219 Q 623 250 560 299 L 541 313 Z\"], \"medians\": [[[343, 702], [365, 693], [569, 744], [586, 745], [618, 735], [640, 702], [600, 532], [584, 493], [554, 510]], [[357, 570], [487, 601], [540, 603]], [[358, 435], [372, 456], [480, 483], [525, 490], [545, 475]], [[278, 716], [304, 695], [318, 671], [325, 600], [331, 421], [317, 148], [321, 116], [370, 129], [501, 213]], [[668, 448], [684, 411], [563, 314], [550, 316]], [[361, 427], [389, 424], [402, 414], [579, 249], [671, 176], [727, 140], [807, 132], [923, 131]]]}","export const charData = \n{\"strokes\": [\"M 330 202 Q 361 175 399 134 Q 415 119 424 118 Q 433 118 439 128 Q 446 138 442 170 Q 435 206 361 247 L 319 270 Q 292 286 258 304 Q 237 314 240 335 Q 261 393 281 453 L 293 492 Q 317 568 337 644 Q 347 690 366 715 Q 379 737 373 750 Q 360 769 313 797 Q 294 810 276 801 Q 263 794 273 778 Q 303 733 247 486 L 236 442 Q 218 373 195 336 Q 185 314 206 296 Q 254 268 294 233 L 330 202 Z\", \"M 294 233 Q 287 226 281 217 Q 250 180 196 143 Q 183 134 165 124 Q 149 114 133 104 Q 120 95 131 92 Q 212 86 327 199 Q 328 200 330 202 L 361 247 Q 406 322 421 385 Q 449 488 463 510 Q 473 526 458 537 Q 416 576 387 569 Q 374 565 378 550 Q 387 531 387 507 L 385 481 Q 384 469 382 455 Q 375 376 319 270 L 294 233 Z\", \"M 387 507 Q 341 501 293 492 L 247 486 Q 183 479 115 468 Q 94 465 61 471 Q 48 471 45 462 Q 41 450 49 441 Q 68 422 96 400 Q 106 396 118 402 Q 190 436 236 442 L 281 453 Q 320 463 362 474 Q 372 478 385 481 C 414 489 417 511 387 507 Z\", \"M 671 521 Q 788 635 822 648 Q 843 655 835 672 Q 831 688 760 725 Q 739 735 716 725 Q 661 703 575 676 Q 553 669 498 669 Q 473 669 482 648 Q 491 635 511 623 Q 544 605 578 627 Q 597 636 691 676 Q 706 682 719 673 Q 732 664 726 649 Q 693 595 655 531 C 640 505 649 500 671 521 Z\", \"M 717 430 Q 702 497 671 521 L 655 531 Q 648 535 640 538 Q 618 547 608 540 Q 595 533 608 519 Q 645 491 653 444 Q 656 434 659 421 L 668 384 Q 701 204 658 103 Q 643 76 607 83 Q 576 89 548 94 Q 536 97 542 85 Q 546 78 564 65 Q 604 31 618 5 Q 628 -14 645 -11 Q 660 -10 687 17 Q 775 107 726 391 L 717 430 Z\", \"M 726 391 Q 783 397 947 397 Q 966 398 971 406 Q 977 416 960 430 Q 909 467 848 454 Q 793 445 717 430 L 659 421 Q 562 409 452 393 Q 431 392 447 375 Q 460 362 478 357 Q 497 351 514 356 Q 586 375 668 384 L 726 391 Z\"], \"medians\": [[[282, 788], [307, 769], [327, 733], [264, 465], [216, 321], [235, 298], [386, 194], [411, 166], [424, 133]], [[390, 556], [417, 530], [424, 516], [422, 504], [387, 361], [338, 255], [304, 207], [260, 165], [206, 127], [137, 97]], [[59, 457], [107, 434], [373, 491], [380, 501]], [[493, 656], [517, 646], [550, 644], [680, 692], [706, 699], [743, 696], [771, 669], [765, 657], [677, 546], [674, 535], [663, 536]], [[613, 530], [637, 519], [659, 499], [674, 474], [687, 432], [711, 289], [709, 166], [692, 92], [672, 59], [648, 41], [551, 85]], [[449, 384], [504, 377], [860, 427], [906, 426], [960, 412]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 323 537 Q 437 648 471 661 Q 490 668 484 685 Q 480 701 411 734 Q 392 743 370 733 Q 315 709 229 681 Q 207 672 153 671 Q 129 671 139 651 Q 146 638 167 628 Q 198 612 231 634 Q 250 643 347 686 Q 360 692 372 685 Q 385 678 380 663 Q 347 609 310 545 C 295 519 301 516 323 537 Z\", \"M 372 446 Q 351 518 323 537 L 310 545 Q 282 560 268 552 Q 255 546 268 532 Q 301 505 320 417 L 328 375 Q 350 215 312 121 Q 296 96 262 103 Q 234 107 208 114 Q 196 117 201 106 Q 205 99 222 86 Q 259 52 271 27 Q 281 9 297 11 Q 310 12 338 38 Q 422 120 380 405 Q 379 409 379 411 L 372 446 Z\", \"M 379 411 Q 383 415 389 418 Q 446 460 445 478 Q 438 482 425 477 Q 398 462 372 446 L 320 417 Q 229 369 129 315 Q 108 305 71 297 Q 58 293 58 281 Q 58 266 70 259 Q 98 246 139 233 Q 152 232 163 244 Q 208 296 328 375 L 379 411 Z\", \"M 637 762 Q 664 737 693 705 Q 708 689 726 690 Q 738 690 744 705 Q 751 721 742 756 Q 733 789 633 817 Q 615 821 608 819 Q 602 815 603 800 Q 607 787 637 762 Z\", \"M 637 582 Q 739 603 861 618 Q 871 617 881 630 Q 882 642 859 652 Q 831 673 739 646 Q 579 613 460 597 Q 432 593 454 576 Q 466 566 480 558 Q 493 551 515 557 Q 549 566 591 573 L 637 582 Z\", \"M 676 393 Q 619 396 557 392 Q 551 391 549 393 Q 548 397 553 405 Q 644 517 664 535 Q 676 544 670 556 Q 666 565 637 582 C 611 598 585 602 591 573 Q 591 572 592 570 Q 604 528 537 444 Q 515 414 468 387 Q 455 377 457 367 Q 461 351 482 331 Q 492 321 504 330 Q 543 351 659 366 C 689 370 706 392 676 393 Z\", \"M 659 366 Q 655 362 652 356 Q 583 260 414 127 Q 405 123 415 120 Q 479 120 616 246 Q 709 349 774 443 Q 784 458 792 464 Q 799 468 798 479 Q 795 503 755 521 Q 736 528 724 527 Q 717 526 717 513 Q 720 494 713 467 Q 697 427 676 393 L 659 366 Z\", \"M 733 178 Q 760 203 784 230 Q 824 273 843 293 Q 855 306 852 315 Q 848 330 821 338 Q 790 350 777 346 Q 770 345 766 330 Q 742 234 521 61 Q 499 45 528 49 Q 580 52 713 159 L 733 178 Z\", \"M 713 159 Q 714 158 718 154 Q 782 100 858 21 Q 874 2 889 -2 Q 898 -3 905 7 Q 917 20 903 63 Q 888 121 733 178 C 705 188 692 180 713 159 Z\"], \"medians\": [[[148, 659], [196, 647], [360, 708], [385, 710], [407, 699], [422, 681], [409, 655], [321, 548]], [[272, 542], [312, 515], [343, 447], [363, 324], [366, 246], [359, 167], [339, 100], [300, 62], [209, 106]], [[74, 281], [138, 276], [405, 447], [440, 475]], [[613, 811], [707, 745], [725, 710]], [[455, 587], [504, 579], [794, 635], [845, 637], [870, 632]], [[599, 574], [627, 544], [576, 463], [537, 417], [517, 375], [550, 370], [646, 377], [669, 388]], [[730, 515], [754, 479], [744, 455], [698, 380], [640, 304], [593, 253], [502, 174], [419, 124]], [[835, 311], [799, 304], [739, 223], [688, 171], [585, 89], [531, 59]], [[720, 161], [740, 160], [844, 85], [870, 56], [890, 14]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 204 738 Q 192 745 177 750 Q 158 757 147 752 Q 137 745 144 732 Q 165 708 170 649 Q 170 636 171 618 Q 180 453 150 328 Q 126 237 60 97 Q 56 90 54 85 Q 53 75 63 78 Q 75 81 108 131 Q 169 213 202 366 L 208 401 Q 217 470 221 523 L 222 560 Q 222 695 227 710 C 229 726 229 726 204 738 Z\", \"M 381 341 Q 374 680 392 714 Q 404 732 392 742 Q 371 760 337 774 Q 319 781 305 774 Q 277 758 258 751 Q 239 745 204 738 C 175 732 198 702 227 710 L 295 730 Q 314 736 319 726 Q 341 666 328 284 Q 319 181 313 167 Q 309 164 239 172 Q 220 176 221 167 Q 276 127 307 96 Q 320 78 335 74 Q 344 70 352 80 Q 385 125 386 196 Q 382 254 381 321 L 381 341 Z\", \"M 221 523 Q 261 533 294 538 Q 316 545 306 557 Q 293 570 268 571 Q 249 571 222 560 C 194 549 192 516 221 523 Z\", \"M 202 366 Q 205 366 209 366 Q 255 373 289 379 Q 311 385 302 397 Q 289 410 264 412 Q 242 413 208 401 C 180 391 172 366 202 366 Z\", \"M 471 639 Q 490 617 512 589 Q 522 576 537 574 Q 547 573 553 585 Q 559 598 555 626 Q 548 656 472 683 Q 459 689 452 687 Q 448 684 447 672 Q 448 662 471 639 Z\", \"M 761 720 Q 749 699 687 623 Q 677 605 694 609 Q 728 627 804 672 Q 825 688 850 698 Q 872 708 862 727 Q 849 746 821 761 Q 796 777 783 774 Q 770 773 774 758 Q 777 739 761 720 Z\", \"M 655 480 Q 790 511 795 515 Q 804 522 799 532 Q 792 544 762 551 Q 737 557 655 530 L 603 517 Q 548 504 482 498 Q 445 491 471 474 Q 516 450 573 464 Q 586 468 603 470 L 655 480 Z\", \"M 655 336 Q 722 343 922 344 Q 941 344 947 352 Q 953 364 936 378 Q 884 417 846 409 Q 774 394 655 376 L 602 369 Q 500 356 385 342 Q 381 342 381 341 C 358 337 358 337 381 321 Q 411 294 458 305 Q 524 323 602 330 L 655 336 Z\", \"M 602 330 Q 598 -27 616 -56 Q 631 -72 640 -50 Q 658 2 655 336 L 655 376 Q 655 433 655 480 L 655 530 Q 656 660 661 731 Q 662 767 681 796 Q 688 812 668 828 Q 643 847 600 859 Q 581 863 568 850 Q 558 841 570 829 Q 601 804 603 766 Q 604 676 603 517 L 603 470 Q 603 383 602 369 L 602 330 Z\"], \"medians\": [[[155, 741], [186, 715], [194, 697], [199, 573], [188, 412], [172, 325], [141, 231], [92, 129], [62, 86]], [[213, 737], [233, 728], [320, 754], [335, 747], [357, 724], [357, 354], [348, 159], [331, 130], [251, 162], [231, 164]], [[228, 529], [235, 541], [251, 550], [297, 550]], [[206, 371], [236, 390], [292, 390]], [[456, 677], [522, 624], [538, 590]], [[783, 764], [801, 743], [808, 722], [695, 618]], [[474, 487], [547, 482], [749, 528], [789, 525]], [[384, 336], [408, 325], [432, 324], [597, 350], [856, 377], [898, 372], [936, 358]], [[576, 840], [601, 834], [637, 799], [628, 546], [627, -50]]], \"radStrokes\": [0, 1, 2, 3]}","export const charData = \n{\"strokes\": [\"M 309 662 Q 334 637 361 606 Q 374 591 391 591 Q 403 591 409 605 Q 415 620 407 652 Q 403 671 372 689 Q 299 720 284 715 Q 278 711 279 698 Q 282 686 309 662 Z\", \"M 690 750 Q 672 722 612 656 Q 599 637 619 640 Q 667 661 734 696 Q 756 712 784 722 Q 809 732 798 752 Q 785 773 756 791 Q 731 809 716 806 Q 701 806 705 790 Q 708 769 690 750 Z\", \"M 543 495 Q 592 504 647 512 Q 701 522 709 529 Q 719 538 715 547 Q 708 560 677 569 Q 644 576 612 566 Q 578 556 544 547 L 482 532 Q 409 520 324 515 Q 284 511 312 491 Q 354 464 446 480 Q 462 483 482 485 L 543 495 Z\", \"M 541 337 Q 601 343 916 342 Q 941 341 947 351 Q 954 366 934 383 Q 859 438 810 419 Q 705 403 541 380 L 481 372 Q 307 354 104 334 Q 79 333 97 311 Q 113 295 135 287 Q 160 280 180 285 Q 307 316 449 329 Q 464 332 481 332 L 541 337 Z\", \"M 481 332 Q 478 -31 491 -59 Q 492 -63 495 -67 Q 511 -85 521 -61 Q 540 -18 541 337 L 541 380 Q 541 443 543 495 L 544 547 Q 545 655 551 716 Q 552 752 571 781 Q 578 799 557 816 Q 529 838 481 850 Q 459 857 445 841 Q 433 831 448 818 Q 479 791 481 754 Q 482 673 482 532 L 482 485 Q 482 430 481 372 L 481 332 Z\"], \"medians\": [[[288, 708], [361, 657], [390, 610]], [[714, 795], [734, 772], [741, 750], [670, 687], [614, 648]], [[315, 505], [344, 497], [398, 497], [646, 542], [701, 542]], [[101, 322], [160, 311], [402, 345], [838, 383], [894, 373], [935, 358]], [[453, 830], [482, 823], [521, 785], [513, 634], [507, -61]]]}","export const charData = \n{\"strokes\": [\"M 398 390 Q 410 502 412 535 L 414 566 Q 417 717 420 735 C 422 758 422 758 405 766 Q 405 767 404 767 Q 353 791 337 787 Q 316 783 334 760 Q 373 697 357 455 Q 353 356 304 239 Q 271 154 155 37 Q 140 24 137 16 Q 136 9 148 10 Q 164 11 186 26 Q 246 69 281 112 Q 333 173 363 244 Q 382 296 394 361 L 398 390 Z\", \"M 420 735 Q 429 735 609 769 Q 631 773 637 762 Q 656 713 657 390 Q 657 128 640 101 Q 634 94 612 99 Q 581 105 549 111 Q 527 117 528 107 Q 595 55 633 16 Q 649 -3 665 -9 Q 675 -13 685 -2 Q 730 53 725 113 Q 712 321 709 657 Q 708 721 723 750 Q 736 772 723 783 Q 698 804 658 820 Q 639 827 621 820 Q 569 793 536 785 Q 493 773 405 766 C 375 763 390 730 420 735 Z\", \"M 412 535 Q 442 529 533 542 Q 587 551 594 554 Q 603 561 599 569 Q 592 579 566 587 Q 538 594 511 583 Q 487 576 462 572 Q 440 568 414 566 C 384 564 382 540 412 535 Z\", \"M 394 361 Q 428 351 561 374 Q 564 375 568 375 Q 590 379 594 382 Q 603 389 599 397 Q 592 407 566 415 Q 538 421 511 411 Q 484 404 456 397 Q 428 393 398 390 C 368 387 365 368 394 361 Z\"], \"medians\": [[[339, 773], [379, 742], [387, 685], [385, 504], [366, 342], [341, 259], [296, 169], [236, 93], [184, 43], [145, 17]], [[415, 764], [429, 752], [503, 762], [634, 796], [666, 780], [681, 758], [687, 291], [683, 93], [664, 56], [632, 63], [538, 104]], [[417, 542], [430, 550], [535, 566], [588, 564]], [[399, 368], [413, 375], [535, 394], [588, 392]]]}","export const charData = \n{\"strokes\": [\"M 544 561 Q 575 580 648 638 Q 679 666 700 671 Q 737 683 739 698 Q 740 708 705 746 Q 672 782 661 780 Q 657 783 644 778 Q 575 748 344 719 Q 323 720 309 722 Q 290 726 283 715 Q 280 708 288 697 Q 298 684 322 666 Q 343 650 354 650 Q 364 649 384 662 Q 420 690 607 732 Q 632 738 637 735 Q 643 731 642 723 Q 642 714 543 589 Q 534 580 529 573 C 509 550 519 545 544 561 Z\", \"M 529 573 Q 505 588 486 592 Q 474 596 466 591 Q 462 587 474 574 Q 495 544 508 451 L 513 407 Q 541 169 492 90 Q 489 83 482 81 Q 467 77 356 100 Q 349 100 346 97 Q 345 93 354 85 Q 429 30 470 -13 Q 483 -26 492 -24 Q 505 -23 527 -1 Q 575 44 576 136 Q 583 239 562 411 L 557 457 Q 551 505 549 542 Q 549 554 544 561 L 529 573 Z\", \"M 508 451 Q 499 452 299 429 Q 227 419 121 418 Q 108 418 106 406 Q 105 393 124 378 Q 142 365 174 353 Q 186 349 204 357 Q 222 363 297 375 Q 393 397 513 407 L 562 411 Q 769 430 888 417 Q 937 417 940 418 Q 940 421 942 421 Q 949 434 937 447 Q 864 513 800 491 Q 739 479 675 469 Q 605 463 557 457 L 508 451 Z\"], \"medians\": [[[294, 711], [355, 686], [462, 717], [620, 752], [658, 752], [675, 732], [681, 708], [549, 578], [536, 574]], [[472, 588], [516, 549], [530, 478], [550, 263], [549, 179], [537, 99], [523, 64], [505, 42], [490, 34], [383, 79], [368, 91], [353, 93]], [[119, 405], [142, 394], [186, 386], [410, 420], [826, 459], [855, 457], [916, 439], [937, 422]]]}","export const charData = \n{\"strokes\": [\"M 254 700 Q 221 697 246 677 Q 282 650 305 650 Q 383 677 748 710 Q 761 709 771 722 Q 772 735 748 748 Q 703 775 642 754 Q 471 723 310 705 Q 282 704 254 700 Z\", \"M 210 363 Q 250 397 282 433 L 296 451 Q 362 545 368 551 Q 378 563 365 577 Q 326 613 302 610 Q 292 609 292 594 Q 299 501 184 383 Q 180 379 175 374 Q 144 347 130 331 Q 121 318 136 321 Q 151 322 190 347 L 210 363 Z\", \"M 282 433 Q 292 421 327 427 Q 387 440 390 431 Q 394 416 372 362 Q 351 302 284 223 Q 218 138 111 56 Q 86 41 107 42 Q 218 48 374 256 Q 407 302 437 356 Q 464 407 482 421 Q 495 431 490 445 Q 484 457 428 482 Q 415 488 391 476 Q 363 463 296 451 C 267 445 256 443 282 433 Z\", \"M 190 347 Q 194 340 210 324 Q 231 302 252 275 Q 262 265 275 263 Q 284 262 289 273 Q 295 285 290 309 Q 287 327 262 341 Q 238 354 210 363 C 182 372 173 372 190 347 Z\", \"M 566 355 Q 615 382 750 462 Q 774 478 801 486 Q 826 493 817 515 Q 804 537 777 556 Q 752 574 737 573 Q 722 573 726 557 Q 726 518 569 384 C 546 364 540 340 566 355 Z\", \"M 569 384 Q 578 502 602 560 Q 617 593 596 611 Q 542 654 525 650 Q 509 644 516 625 Q 537 583 530 523 Q 511 160 552 109 Q 571 76 655 61 Q 716 51 813 51 Q 901 52 936 70 Q 969 86 956 120 Q 940 166 931 247 Q 930 265 922 270 Q 913 276 908 254 Q 886 158 869 142 Q 842 109 714 108 Q 645 111 616 123 Q 591 136 586 153 Q 565 207 566 355 L 569 384 Z\"], \"medians\": [[[247, 689], [307, 678], [697, 735], [760, 724]], [[305, 597], [325, 569], [327, 557], [286, 474], [226, 400], [174, 352], [139, 330]], [[290, 434], [395, 454], [417, 451], [433, 430], [373, 300], [294, 195], [199, 101], [112, 48]], [[199, 346], [224, 338], [255, 315], [276, 277]], [[735, 562], [747, 550], [758, 516], [676, 446], [586, 385], [567, 362]], [[528, 636], [555, 606], [569, 580], [550, 455], [545, 300], [556, 168], [571, 126], [585, 111], [632, 91], [735, 80], [823, 84], [887, 100], [908, 114], [919, 261]]], \"radStrokes\": [0, 1, 2, 3]}","export const charData = \n{\"strokes\": [\"M 181 600 Q 160 612 138 618 Q 131 621 125 615 Q 115 608 127 596 Q 187 488 192 250 Q 193 186 231 153 Q 234 150 239 147 Q 258 141 260 176 Q 260 179 260 181 L 256 222 Q 255 237 233 382 Q 223 476 218 552 C 216 582 208 586 181 600 Z\", \"M 717 200 Q 732 151 739 143 Q 746 131 756 132 Q 768 133 780 152 Q 822 206 870 461 Q 880 527 903 564 Q 916 579 914 589 Q 915 605 874 643 Q 825 691 790 679 Q 784 679 778 677 Q 756 673 680 666 Q 451 647 302 616 Q 220 604 181 600 C 151 597 189 543 218 552 Q 222 553 236 558 Q 294 576 370 589 L 410 596 Q 485 611 523 611 L 589 618 Q 686 630 773 631 Q 798 632 810 616 Q 825 603 823 571 Q 820 493 784 354 Q 759 245 748 231 Q 747 227 739 225 Q 733 226 726 230 C 709 223 709 223 717 200 Z\", \"M 370 589 Q 391 546 349 422 Q 336 386 316 357 Q 306 341 296 326 Q 292 322 289 316 Q 286 307 295 308 Q 322 308 372 379 Q 408 436 424 507 Q 428 529 436 547 Q 443 559 439 570 Q 429 585 410 596 C 385 612 359 617 370 589 Z\", \"M 523 611 Q 524 608 529 604 Q 545 585 545 536 Q 546 493 546 439 Q 545 384 570 366 Q 592 345 691 351 Q 725 352 735 368 Q 745 378 738 386 Q 731 393 634 397 Q 589 400 587 441 Q 581 502 605 588 Q 609 603 601 612 Q 597 616 589 618 C 562 631 504 634 523 611 Z\", \"M 260 181 Q 270 180 283 180 Q 421 199 717 200 C 747 200 748 209 726 230 Q 693 269 620 252 Q 418 225 256 222 C 226 221 230 183 260 181 Z\"], \"medians\": [[[132, 606], [163, 582], [189, 529], [224, 229], [244, 159]], [[187, 595], [227, 581], [466, 625], [712, 650], [801, 654], [833, 638], [866, 588], [816, 348], [781, 226], [760, 193], [755, 149]], [[377, 587], [408, 560], [387, 462], [351, 379], [298, 316]], [[530, 611], [571, 584], [566, 446], [579, 393], [608, 377], [638, 373], [699, 371], [732, 379]], [[263, 216], [285, 201], [651, 229], [697, 224], [706, 211]]], \"radStrokes\": [0, 1, 4]}","export const charData = \n{\"strokes\": [\"M 310 637 Q 340 577 311 357 Q 299 300 269 232 Q 236 163 146 80 Q 130 67 125 59 Q 122 50 136 50 Q 178 50 258 125 Q 354 224 386 446 Q 395 524 405 602 Q 412 627 389 639 Q 334 669 315 667 Q 293 663 310 637 Z\", \"M 979 84 Q 954 144 939 247 Q 936 265 930 272 Q 920 279 916 262 Q 903 201 887 155 Q 880 124 852 105 Q 825 78 707 87 Q 641 96 622 132 Q 595 201 620 515 Q 627 621 641 666 Q 653 697 566 747 Q 547 760 526 749 Q 513 742 536 711 Q 564 671 565 570 Q 565 489 557 329 Q 542 128 591 71 Q 630 32 708 20 Q 753 16 816 16 Q 895 17 953 42 Q 993 54 979 84 Z\"], \"medians\": [[[317, 651], [326, 648], [363, 606], [351, 422], [330, 317], [293, 219], [259, 165], [191, 94], [134, 59]], [[535, 738], [564, 719], [598, 671], [580, 233], [590, 142], [613, 93], [659, 65], [704, 53], [744, 51], [839, 55], [905, 80], [917, 89], [922, 130], [925, 264]]]}","export const charData = \n{\"strokes\": [\"M 317 465 Q 318 338 155 190 Q 136 178 79 126 Q 67 110 85 113 Q 110 114 146 137 Q 258 209 325 305 Q 368 363 406 409 Q 419 422 404 441 Q 355 486 329 484 Q 316 483 317 465 Z\", \"M 446 687 Q 507 636 530 577 Q 608 343 711 190 Q 732 163 846 151 Q 892 147 958 141 Q 983 140 984 146 Q 984 152 963 163 Q 756 269 675 396 Q 621 480 551 644 Q 530 690 483 702 Q 449 709 445 702 Q 438 692 446 687 Z\"], \"medians\": [[[331, 470], [358, 421], [291, 303], [204, 206], [143, 156], [89, 123]], [[452, 695], [484, 681], [525, 640], [645, 378], [693, 302], [755, 227], [839, 190], [978, 147]]]}","export const charData = \n{\"strokes\": [\"M 386 656 Q 479 680 483 682 Q 490 689 487 697 Q 480 707 454 714 Q 421 720 390 704 L 334 687 Q 286 675 232 670 Q 198 664 223 649 Q 259 628 315 642 Q 322 645 334 645 L 386 656 Z\", \"M 374 533 Q 380 597 386 656 L 390 704 Q 391 744 409 803 Q 412 813 393 828 Q 359 847 336 852 Q 320 856 312 847 Q 305 840 312 825 Q 331 800 331 781 Q 332 736 334 687 L 334 645 Q 334 587 332 523 C 331 493 371 503 374 533 Z\", \"M 433 506 Q 499 521 580 530 Q 596 531 598 540 Q 599 553 580 563 Q 547 578 474 556 L 410 541 Q 391 538 374 533 L 332 523 Q 95 484 95 482 Q 94 481 93 478 Q 90 468 105 456 Q 145 428 189 441 Q 295 475 366 492 Q 367 493 373 493 L 433 506 Z\", \"M 333 389 Q 345 404 358 417 Q 398 466 433 506 L 474 556 Q 535 632 554 658 Q 578 692 602 706 Q 615 713 615 722 Q 614 729 602 734 Q 571 750 544 753 Q 528 754 523 738 Q 513 683 410 541 L 373 493 Q 333 447 285 390 L 265 367 Q 258 361 253 353 Q 171 263 50 160 Q 43 156 45 153 Q 46 150 54 152 Q 121 180 154 209 Q 214 261 273 322 L 333 389 Z\", \"M 285 390 Q 278 394 269 397 Q 262 398 257 391 Q 254 387 260 378 Q 261 372 265 367 L 273 322 Q 277 205 264 156 Q 252 116 279 83 Q 289 73 296 83 Q 305 93 309 114 L 314 148 Q 315 166 316 240 L 317 271 Q 317 337 320 355 L 285 390 Z\", \"M 441 123 Q 456 99 468 74 Q 478 55 488 52 Q 498 52 507 74 Q 522 117 517 215 Q 510 338 520 368 Q 527 387 516 396 Q 509 406 474 423 Q 459 429 382 402 Q 367 401 333 389 C 289 374 291 348 320 355 Q 425 382 430 382 Q 446 383 452 378 Q 462 368 459 223 Q 460 171 455 161 Q 451 151 438 154 L 436 154 C 423 152 426 149 441 123 Z\", \"M 316 240 Q 376 252 420 257 Q 442 261 433 273 Q 423 286 399 290 Q 360 293 317 271 C 290 258 287 234 316 240 Z\", \"M 309 114 Q 313 114 320 115 Q 357 122 441 123 C 471 123 460 136 436 154 Q 432 157 428 160 Q 413 169 384 162 Q 345 155 314 148 C 285 141 279 112 309 114 Z\", \"M 700 630 Q 707 633 714 636 Q 783 666 795 659 Q 805 653 797 632 Q 737 485 737 482 Q 736 470 758 462 Q 879 374 863 286 Q 859 276 852 268 Q 839 261 816 268 Q 782 278 751 286 Q 744 289 743 281 Q 744 274 758 262 Q 824 213 832 188 Q 839 173 853 170 Q 866 169 882 180 Q 921 228 922 286 Q 923 376 801 472 Q 759 493 835 587 Q 857 623 888 641 Q 916 659 891 677 Q 854 708 830 718 Q 812 724 773 697 Q 761 691 689 661 C 661 649 672 618 700 630 Z\", \"M 637 -38 Q 643 -63 650 -73 Q 656 -80 663 -78 Q 678 -69 684 -9 Q 694 81 691 170 Q 691 186 690 559 Q 690 586 700 630 C 704 651 704 651 689 661 Q 656 683 641 686 Q 628 690 612 681 Q 603 674 611 663 Q 635 596 637 592 Q 637 270 634 169 Q 631 15 637 -38 Z\"], \"medians\": [[[225, 661], [272, 655], [425, 691], [478, 691]], [[324, 837], [367, 799], [355, 559], [338, 531]], [[97, 478], [121, 467], [176, 467], [489, 540], [550, 548], [587, 543]], [[605, 721], [553, 712], [454, 564], [265, 339], [140, 217], [50, 155]], [[267, 386], [294, 345], [296, 318], [288, 88]], [[320, 364], [346, 378], [439, 401], [467, 399], [487, 378], [489, 183], [480, 132], [488, 63]], [[323, 248], [333, 261], [369, 269], [402, 273], [424, 267]], [[314, 119], [329, 134], [380, 142], [419, 142], [431, 129]], [[705, 638], [710, 653], [798, 684], [821, 683], [842, 661], [769, 515], [764, 485], [852, 398], [878, 360], [892, 312], [893, 281], [886, 258], [875, 238], [860, 226], [750, 279]], [[619, 672], [659, 637], [665, 594], [659, -69]]], \"radStrokes\": [8, 9]}","export const charData = \n{\"strokes\": [\"M 299 746 Q 359 655 388 651 Q 404 647 415 669 Q 419 685 409 711 Q 399 733 371 747 Q 328 774 308 779 Q 296 783 294 768 Q 291 758 299 746 Z\", \"M 180 682 Q 205 622 204 550 Q 205 277 161 146 Q 139 83 178 38 Q 191 22 203 38 Q 242 80 244 243 Q 250 564 267 644 Q 270 665 251 676 Q 226 698 194 708 Q 184 711 176 701 Q 172 694 180 682 Z\", \"M 519 749 Q 500 750 505 738 Q 512 725 537 712 Q 553 702 618 719 Q 732 755 754 717 Q 761 698 765 648 Q 783 405 769 128 Q 768 88 753 76 Q 738 66 666 85 Q 650 89 650 79 Q 651 72 664 64 Q 728 16 762 -21 Q 784 -42 797 -39 Q 810 -36 822 -6 Q 838 40 837 110 Q 819 498 822 642 Q 822 685 835 709 Q 848 733 836 745 Q 826 761 775 787 Q 754 797 689 779 Q 598 758 519 749 Z\"], \"medians\": [[[304, 770], [373, 704], [393, 669]], [[187, 695], [219, 664], [230, 646], [231, 631], [219, 280], [190, 93], [191, 44]], [[514, 741], [543, 732], [570, 732], [685, 757], [739, 761], [769, 753], [793, 731], [796, 721], [801, 86], [780, 33], [725, 47], [658, 79]]]}","export const charData = \n{\"strokes\": [\"M 583 687 Q 593 690 741 705 Q 753 704 764 718 Q 765 731 740 744 Q 701 768 618 745 Q 507 721 311 696 Q 292 695 274 692 Q 241 689 266 669 Q 303 639 328 644 Q 329 645 356 649 L 394 656 Q 458 669 537 680 L 583 687 Z\", \"M 243 473 Q 234 491 186 504 Q 176 505 170 497 Q 166 491 174 480 Q 219 345 175 167 Q 163 155 169 116 Q 169 115 170 113 Q 180 79 192 65 Q 204 50 214 65 Q 242 99 243 266 Q 243 374 250 434 C 253 462 253 462 243 473 Z\", \"M 602 487 Q 659 491 745 497 Q 761 497 766 489 Q 776 482 777 439 Q 787 258 767 153 Q 758 111 723 115 Q 677 125 633 132 Q 617 136 617 129 Q 617 122 630 109 Q 724 43 750 8 Q 760 -8 772 -6 Q 788 -3 801 25 Q 835 88 846 279 Q 849 457 863 481 Q 882 505 867 510 Q 851 528 809 545 Q 784 561 756 550 Q 723 540 641 532 Q 625 531 608 528 L 550 522 Q 471 515 413 503 L 363 494 Q 302 484 243 473 C 213 468 221 426 250 434 Q 292 449 352 456 Q 353 457 357 456 L 405 463 Q 481 476 546 483 L 602 487 Z\", \"M 356 649 Q 377 628 363 494 L 357 456 Q 339 366 278 263 Q 274 257 272 252 Q 269 242 278 245 Q 306 251 361 342 Q 362 345 364 347 L 374 369 Q 389 403 400 443 Q 401 453 405 463 L 413 503 Q 417 527 420 549 Q 421 588 429 609 Q 436 622 430 633 Q 417 646 394 656 C 367 669 341 675 356 649 Z\", \"M 364 347 Q 368 343 376 336 Q 446 270 454 268 Q 461 268 466 277 Q 470 287 465 307 Q 458 337 375 369 L 374 369 C 345 378 342 368 364 347 Z\", \"M 574 375 Q 595 453 602 487 L 608 528 Q 614 613 622 634 Q 629 647 623 661 Q 608 676 583 687 C 556 700 524 707 537 680 Q 537 679 539 676 Q 560 640 550 522 L 546 483 Q 545 477 545 470 Q 527 347 442 198 Q 438 192 436 186 Q 433 176 444 177 Q 469 181 532 278 Q 541 296 551 315 Q 558 331 564 348 L 574 375 Z\", \"M 564 348 Q 612 305 669 241 Q 684 222 698 218 Q 705 217 713 226 Q 723 239 713 278 Q 704 323 574 375 C 546 386 542 368 564 348 Z\"], \"medians\": [[[267, 681], [317, 670], [683, 728], [752, 720]], [[180, 492], [210, 464], [219, 432], [219, 254], [200, 128], [203, 69]], [[254, 441], [268, 460], [526, 501], [759, 523], [778, 522], [802, 507], [817, 486], [814, 293], [804, 173], [791, 113], [764, 70], [721, 81], [624, 127]], [[362, 650], [399, 618], [394, 545], [377, 441], [341, 340], [300, 274], [279, 252]], [[375, 362], [441, 307], [457, 277]], [[548, 675], [578, 656], [586, 641], [581, 542], [569, 455], [540, 351], [509, 278], [444, 185]], [[583, 364], [584, 353], [672, 285], [688, 263], [699, 232]]], \"radStrokes\": [0]}","export const charData = \n{\"strokes\": [\"M 283 702 Q 320 714 387 733 Q 412 740 430 730 Q 443 720 442 675 Q 435 363 388 268 Q 379 252 359 258 Q 290 270 293 274 Q 266 280 289 258 Q 326 227 356 192 Q 378 165 395 178 Q 455 217 473 333 Q 483 423 485 520 Q 488 686 505 709 Q 521 734 507 745 Q 482 766 444 776 Q 426 782 320 747 Q 254 732 189 724 Q 165 725 180 709 Q 198 690 247 693 L 283 702 Z\", \"M 304 562 Q 380 580 383 581 Q 390 588 386 595 Q 380 604 357 610 Q 333 614 310 605 L 257 590 Q 170 577 155 574 Q 125 570 146 555 Q 182 537 228 548 Q 238 551 252 552 L 304 562 Z\", \"M 277 428 Q 322 438 379 447 Q 392 448 393 455 Q 394 467 379 474 Q 355 486 287 467 L 237 456 Q 141 440 95 433 Q 85 432 82 425 Q 79 416 92 407 Q 129 383 161 395 Q 197 408 228 416 L 277 428 Z\", \"M 228 416 Q 198 304 95 147 Q 91 143 88 136 Q 85 127 95 129 Q 128 135 202 246 Q 211 262 221 280 Q 251 340 277 428 L 287 467 Q 297 515 304 562 L 310 605 Q 316 642 320 650 Q 327 663 322 675 Q 309 691 283 702 C 256 716 237 721 247 693 Q 262 660 259 609 Q 258 600 257 590 L 252 552 Q 246 503 237 456 L 228 416 Z\", \"M 642 701 Q 658 702 676 711 Q 751 742 767 735 Q 779 728 770 702 Q 715 555 715 553 Q 714 540 738 531 Q 825 461 839 366 Q 843 329 823 308 Q 810 298 781 302 Q 739 309 703 312 Q 694 313 695 305 Q 698 298 714 286 Q 795 241 810 215 Q 817 202 830 200 Q 842 199 857 211 Q 903 262 908 326 Q 915 425 785 543 Q 742 564 813 655 Q 831 694 869 715 Q 900 734 873 754 Q 831 788 805 799 Q 786 806 769 795 Q 741 773 635 736 C 607 726 613 694 642 701 Z\", \"M 582 -15 Q 586 -40 594 -49 Q 600 -56 607 -54 Q 623 -44 627 13 Q 637 110 634 207 Q 633 243 632 631 Q 632 661 642 701 C 648 727 648 727 635 736 Q 634 737 633 738 Q 602 760 586 762 Q 573 766 558 758 Q 549 749 557 739 Q 584 685 586 647 Q 587 476 579 208 Q 576 42 582 -15 Z\"], \"medians\": [[[183, 717], [238, 711], [415, 755], [444, 751], [473, 724], [452, 404], [442, 328], [422, 263], [401, 231], [385, 219], [286, 267]], [[148, 566], [217, 564], [348, 592], [379, 589]], [[93, 422], [149, 416], [302, 454], [362, 462], [383, 458]], [[254, 689], [281, 674], [290, 661], [275, 532], [254, 426], [217, 320], [180, 245], [116, 155], [96, 137]], [[647, 708], [657, 724], [762, 761], [793, 763], [816, 742], [819, 737], [806, 706], [757, 610], [744, 557], [830, 464], [871, 374], [872, 322], [858, 287], [835, 260], [703, 304]], [[566, 748], [585, 738], [604, 717], [610, 667], [603, -44]]], \"radStrokes\": [4, 5]}","export const charData = \n{\"strokes\": [\"M 519 700 Q 531 724 551 744 Q 560 750 558 760 Q 557 770 543 784 Q 507 815 475 811 Q 465 808 468 795 Q 486 692 300 485 Q 296 482 293 478 Q 241 423 110 316 Q 100 312 112 308 Q 178 317 306 429 Q 387 504 505 679 L 519 700 Z\", \"M 505 679 Q 614 538 756 391 Q 777 367 812 369 Q 933 373 971 381 Q 983 384 984 389 Q 984 395 967 402 Q 790 456 742 495 Q 639 579 519 700 C 498 721 487 703 505 679 Z\", \"M 472 486 Q 500 441 475 153 Q 474 143 472 131 Q 471 103 467 91 Q 454 37 508 -19 Q 509 -20 512 -22 Q 524 -23 529 -10 Q 535 8 536 92 Q 529 386 540 455 Q 541 468 535 474 Q 511 495 492 504 Q 479 508 470 500 Q 464 496 472 486 Z\"], \"medians\": [[[478, 800], [498, 780], [507, 752], [477, 686], [415, 589], [320, 473], [269, 423], [198, 365], [116, 313]], [[522, 690], [521, 679], [623, 568], [726, 467], [780, 425], [822, 408], [976, 388]], [[479, 494], [490, 488], [511, 456], [500, 70], [515, -13]]], \"radStrokes\": [2]}","export const charData = \n{\"strokes\": [\"M 468 784 Q 499 757 533 726 Q 549 711 567 712 Q 579 713 584 728 Q 590 746 579 779 Q 567 815 461 839 Q 443 843 436 839 Q 430 835 432 820 Q 436 807 468 784 Z\", \"M 254 613 L 254 614 Q 241 638 228 646 Q 209 661 208 633 Q 214 594 155 514 Q 128 505 159 434 Q 160 431 163 427 Q 179 400 199 430 Q 217 458 229 502 Q 241 547 252 576 C 261 599 261 599 254 613 Z\", \"M 252 576 Q 274 567 328 582 Q 427 612 644 646 Q 720 658 740 655 Q 761 645 760 636 Q 760 635 717 543 Q 710 530 717 525 Q 724 521 741 533 Q 801 581 851 599 Q 893 615 891 625 Q 890 635 813 690 Q 788 708 714 692 Q 555 668 254 613 C 224 608 222 580 252 576 Z\", \"M 397 261 Q 448 279 646 361 Q 671 373 699 376 Q 724 380 719 401 Q 710 423 688 446 Q 667 468 653 469 Q 640 472 639 456 Q 636 420 513 350 Q 458 319 398 285 C 372 270 369 251 397 261 Z\", \"M 374 69 Q 398 35 445 19 Q 503 0 633 3 Q 831 12 852 46 Q 859 59 849 80 Q 827 134 811 217 Q 805 236 796 240 Q 789 244 784 223 Q 754 105 739 94 Q 730 84 697 76 Q 589 54 521 57 Q 440 63 407 109 Q 391 139 397 261 L 398 285 Q 404 379 416 426 Q 423 448 399 464 Q 353 498 340 491 Q 327 484 337 466 Q 353 427 350 355 Q 349 300 348 236 Q 345 116 374 69 Z\"], \"medians\": [[[443, 830], [544, 767], [564, 732]], [[218, 639], [231, 608], [229, 596], [183, 486], [179, 431]], [[259, 582], [274, 595], [433, 628], [746, 677], [784, 665], [808, 634], [722, 532]], [[650, 459], [664, 412], [544, 341], [409, 279], [399, 267]], [[345, 479], [382, 433], [371, 225], [378, 124], [398, 79], [424, 58], [477, 37], [582, 30], [695, 40], [771, 61], [793, 75], [795, 231]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 272 447 Q 296 538 315 631 Q 322 676 340 700 Q 352 722 344 733 Q 331 751 285 776 Q 266 786 250 778 Q 238 771 248 756 Q 284 708 230 436 L 221 393 Q 211 329 184 282 Q 175 260 196 244 Q 239 223 277 195 L 314 167 Q 342 145 379 112 Q 395 99 404 98 Q 411 99 417 109 Q 423 119 416 149 Q 409 183 340 213 L 298 232 Q 276 244 245 256 Q 226 265 226 283 Q 245 344 262 408 L 272 447 Z\", \"M 277 195 Q 267 182 258 167 Q 231 130 182 95 Q 170 86 154 76 Q 139 66 124 55 Q 111 46 123 44 Q 136 43 170 55 Q 221 76 259 109 Q 293 137 314 167 L 340 213 Q 374 283 383 327 Q 398 411 416 445 Q 426 461 410 471 Q 367 507 340 498 Q 327 494 333 480 Q 337 473 339 464 L 343 437 Q 343 332 298 232 L 277 195 Z\", \"M 339 464 Q 306 457 272 447 L 230 436 Q 170 423 106 408 Q 87 404 56 406 Q 44 405 42 396 Q 39 384 47 376 Q 68 360 96 341 Q 106 338 117 345 Q 174 381 221 393 L 262 408 Q 298 421 336 435 Q 337 436 343 437 C 372 446 368 470 339 464 Z\", \"M 533 363 Q 564 381 621 408 L 667 432 Q 712 456 770 483 Q 789 490 795 478 Q 801 468 762 304 Q 755 270 732 281 Q 713 293 693 303 Q 680 307 682 300 Q 685 288 735 215 Q 754 187 774 208 Q 814 248 828 312 Q 841 372 852 432 Q 862 469 891 500 Q 904 516 887 528 Q 868 540 817 549 Q 798 553 784 539 Q 759 515 707 489 Q 689 482 672 471 L 626 449 Q 545 415 542 412 L 486 390 Q 443 374 414 365 Q 401 364 399 353 Q 398 346 441 333 Q 463 327 484 335 L 533 363 Z\", \"M 621 408 Q 614 338 605 285 Q 604 254 611 233 Q 615 220 626 226 Q 650 247 655 326 Q 661 380 667 432 L 672 471 Q 688 664 707 730 Q 717 749 705 763 Q 690 779 661 795 Q 639 805 614 798 Q 601 791 615 773 Q 636 727 638 678 Q 639 581 626 449 L 621 408 Z\", \"M 960 105 Q 941 162 931 257 Q 930 273 921 278 Q 914 282 910 263 Q 897 143 880 122 Q 844 83 693 85 Q 611 89 576 105 Q 546 121 540 143 Q 513 212 533 363 L 542 412 Q 545 431 552 446 Q 565 476 546 493 Q 495 532 480 528 Q 465 522 472 505 Q 484 480 486 390 L 484 335 Q 480 178 492 140 Q 502 100 531 76 Q 591 30 805 34 Q 902 37 941 57 Q 972 73 960 105 Z\"], \"medians\": [[[257, 766], [281, 749], [302, 717], [265, 505], [205, 268], [225, 247], [373, 159], [392, 136], [402, 110]], [[342, 487], [363, 473], [378, 449], [361, 342], [343, 278], [317, 218], [283, 163], [242, 119], [185, 77], [127, 49]], [[55, 393], [104, 375], [166, 399], [327, 446], [334, 456]], [[406, 354], [434, 351], [478, 360], [784, 509], [810, 513], [834, 500], [800, 326], [777, 263], [757, 244], [735, 256], [688, 300]], [[622, 786], [637, 779], [661, 754], [669, 742], [669, 726], [653, 484], [620, 233]], [[484, 515], [519, 465], [504, 323], [510, 162], [527, 116], [548, 93], [600, 72], [690, 60], [834, 65], [893, 82], [916, 95], [920, 270]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 250 530 Q 287 585 330 658 Q 354 707 377 731 Q 386 743 381 756 Q 377 769 346 791 Q 318 809 299 808 Q 280 805 289 783 Q 305 752 293 724 Q 236 568 86 372 Q 76 362 74 354 Q 71 344 85 346 Q 118 355 224 495 L 250 530 Z\", \"M 224 495 Q 243 435 245 429 Q 244 428 245 425 Q 251 260 220 131 Q 208 80 242 41 Q 243 38 246 36 Q 262 20 274 46 Q 289 86 288 131 Q 284 393 292 451 Q 299 478 290 488 Q 266 513 250 530 C 229 552 215 524 224 495 Z\", \"M 468 401 Q 507 423 573 456 L 618 479 Q 672 507 742 542 Q 760 549 765 539 Q 772 526 760 488 Q 745 436 725 372 Q 715 330 687 344 Q 668 353 650 360 Q 637 364 638 356 Q 642 344 698 279 Q 717 251 737 272 Q 777 312 791 377 Q 806 434 820 491 Q 830 527 860 557 Q 873 573 858 585 Q 839 598 789 608 Q 770 612 756 599 Q 726 571 668 540 Q 646 528 621 515 L 576 493 Q 477 451 475 448 L 423 426 Q 368 405 333 393 Q 320 392 319 381 Q 318 374 361 362 Q 385 355 422 376 L 468 401 Z\", \"M 573 456 Q 567 368 560 302 Q 560 274 567 252 Q 573 240 582 246 Q 600 261 610 381 Q 613 432 618 479 L 621 515 Q 633 689 644 729 Q 654 748 641 761 Q 626 777 598 791 Q 576 801 552 792 Q 540 785 554 767 Q 581 713 581 592 Q 580 547 576 493 L 573 456 Z\", \"M 960 171 Q 944 223 938 313 Q 937 329 930 334 Q 921 340 917 319 Q 898 210 880 191 Q 838 143 661 143 Q 564 147 523 164 Q 487 183 480 207 Q 453 273 468 401 L 475 448 Q 479 479 489 498 Q 501 529 482 546 Q 431 583 416 579 Q 401 573 408 556 Q 427 519 424 463 Q 423 444 423 426 L 422 376 Q 421 240 432 203 Q 444 157 478 133 Q 548 82 789 95 Q 898 102 941 126 Q 972 139 960 171 Z\"], \"medians\": [[[300, 793], [317, 780], [338, 747], [308, 679], [201, 496], [136, 410], [83, 355]], [[250, 521], [267, 436], [266, 292], [252, 106], [258, 46]], [[326, 383], [378, 384], [429, 404], [756, 569], [782, 572], [804, 560], [768, 406], [739, 327], [715, 309], [677, 329], [645, 356]], [[562, 780], [583, 769], [606, 740], [603, 552], [576, 254]], [[420, 566], [442, 543], [457, 515], [441, 364], [444, 266], [453, 212], [473, 171], [509, 143], [601, 121], [710, 117], [817, 126], [895, 150], [916, 163], [927, 326]]], \"radStrokes\": [0, 1]}","export const charData = \n{\"strokes\": [\"M 323 369 Q 375 396 449 430 L 496 452 Q 562 485 644 523 Q 663 532 669 520 Q 676 505 625 342 Q 615 291 580 308 Q 559 315 539 321 Q 523 324 527 315 Q 531 303 597 238 Q 619 208 640 231 Q 683 277 698 347 Q 714 407 729 467 Q 741 506 774 539 Q 789 555 771 569 Q 752 582 696 595 Q 674 599 660 586 Q 620 549 541 509 Q 519 499 498 486 L 451 463 Q 391 436 327 409 L 270 385 Q 158 340 92 320 Q 77 317 77 307 Q 76 300 122 285 Q 152 276 176 292 Q 198 307 271 343 L 323 369 Z\", \"M 449 430 Q 442 343 434 278 Q 435 247 442 225 Q 448 212 458 218 Q 477 239 488 359 Q 491 407 496 452 L 498 486 Q 511 699 526 753 Q 536 774 523 787 Q 507 803 477 819 Q 453 829 428 820 Q 415 811 430 794 Q 451 746 456 707 Q 456 527 451 463 L 449 430 Z\", \"M 328 97 Q 413 27 678 28 Q 835 29 923 59 Q 954 65 962 81 Q 966 91 956 115 Q 931 166 913 279 Q 909 295 900 301 Q 894 304 891 289 Q 881 228 869 176 Q 859 131 835 114 Q 811 102 689 93 Q 565 87 467 102 Q 394 114 366 134 Q 341 150 332 182 Q 320 228 322 326 Q 322 348 323 369 L 327 409 Q 331 457 343 485 Q 352 504 341 518 Q 326 531 286 548 Q 252 560 241 549 Q 232 540 247 519 Q 269 488 269 438 Q 269 413 270 385 L 271 343 Q 271 168 299 126 Q 309 111 328 97 Z\"], \"medians\": [[[84, 309], [134, 307], [165, 316], [419, 431], [662, 553], [688, 556], [713, 541], [672, 378], [651, 309], [639, 288], [621, 270], [612, 271], [588, 279], [534, 316]], [[438, 808], [462, 793], [484, 766], [487, 729], [478, 500], [452, 226]], [[251, 540], [272, 527], [303, 493], [295, 308], [308, 172], [320, 143], [338, 122], [389, 92], [479, 70], [583, 60], [759, 64], [848, 78], [900, 108], [899, 292]]], \"radStrokes\": [2]}","export const charData = \n{\"strokes\": [\"M 294 486 Q 322 496 355 504 Q 385 514 390 519 Q 397 528 392 536 Q 385 548 354 552 Q 324 556 297 542 L 245 521 Q 185 502 130 491 Q 93 481 122 467 Q 165 448 222 465 Q 232 469 245 471 L 294 486 Z\", \"M 286 300 Q 290 396 294 486 L 297 542 Q 298 626 318 727 Q 322 739 300 755 Q 263 774 236 779 Q 218 782 210 773 Q 203 764 211 749 Q 238 710 238 684 Q 242 606 245 521 L 245 471 Q 245 381 242 284 C 241 254 285 270 286 300 Z\", \"M 242 284 Q 184 265 122 239 Q 106 232 77 231 Q 64 228 63 217 Q 62 202 73 195 Q 98 180 136 163 Q 148 162 159 171 Q 190 201 331 284 Q 350 296 365 310 Q 378 320 378 329 Q 371 335 358 330 Q 322 317 286 300 L 242 284 Z\", \"M 769 396 Q 793 486 828 517 Q 844 538 829 556 Q 811 569 755 595 Q 736 602 713 593 Q 667 574 621 561 L 571 550 Q 505 537 440 530 Q 422 529 424 518 Q 427 511 446 503 Q 471 493 508 504 Q 539 510 570 515 L 619 525 Q 655 532 692 540 Q 716 546 725 536 Q 735 527 735 506 Q 726 439 713 386 C 706 357 761 367 769 396 Z\", \"M 609 329 Q 627 336 730 342 Q 919 342 926 351 Q 926 352 927 352 Q 933 364 916 378 Q 859 420 797 402 Q 784 401 769 396 L 713 386 Q 658 380 606 369 L 555 362 Q 482 355 404 342 Q 383 341 399 323 Q 429 296 478 306 Q 512 315 549 321 L 609 329 Z\", \"M 621 561 Q 628 682 655 747 Q 662 762 652 774 Q 628 795 586 807 Q 559 814 550 808 Q 540 801 548 787 Q 572 747 573 697 Q 574 624 571 550 L 570 515 Q 563 392 555 362 L 549 321 Q 528 194 450 108 Q 407 69 338 28 Q 325 21 324 15 Q 325 11 338 11 Q 354 7 395 21 Q 531 66 580 223 Q 590 257 597 296 L 606 369 Q 607 382 609 395 Q 613 462 619 525 L 621 561 Z\", \"M 597 296 Q 759 -2 819 -7 Q 886 -3 943 2 Q 968 3 968 9 Q 969 16 942 32 Q 803 104 752 158 Q 674 236 609 329 C 592 353 575 336 597 296 Z\"], \"medians\": [[[123, 480], [181, 479], [314, 521], [380, 529]], [[222, 763], [274, 721], [275, 709], [265, 316], [247, 292]], [[79, 216], [138, 204], [372, 326]], [[433, 520], [457, 515], [495, 518], [716, 567], [750, 561], [778, 532], [748, 419], [719, 392]], [[401, 333], [467, 327], [632, 355], [824, 375], [883, 370], [920, 358]], [[558, 797], [610, 751], [586, 404], [560, 250], [546, 207], [518, 152], [466, 87], [381, 33], [331, 15]], [[606, 322], [615, 290], [659, 225], [725, 139], [789, 71], [827, 42], [962, 10]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 535 428 Q 602 441 673 451 Q 739 464 749 472 Q 759 481 755 490 Q 748 505 715 514 Q 681 523 647 511 Q 592 495 537 481 L 483 470 Q 395 454 293 449 Q 251 445 280 424 Q 320 397 409 409 Q 445 415 483 420 L 535 428 Z\", \"M 521 151 Q 528 293 535 428 L 537 481 Q 538 595 566 720 Q 570 733 546 751 Q 504 773 475 779 Q 456 783 446 773 Q 436 763 447 746 Q 481 694 481 658 Q 484 567 483 470 L 483 420 Q 480 290 471 145 C 469 115 520 121 521 151 Z\", \"M 471 145 Q 314 130 132 111 Q 107 110 125 87 Q 162 50 211 60 Q 452 121 842 114 Q 875 113 903 112 Q 928 111 935 122 Q 942 137 922 154 Q 847 212 795 192 Q 689 176 521 151 L 471 145 Z\"], \"medians\": [[[283, 438], [312, 430], [379, 430], [486, 445], [692, 487], [741, 485]], [[461, 760], [517, 714], [518, 685], [498, 173], [476, 153]], [[129, 99], [188, 87], [378, 115], [818, 156], [866, 149], [922, 129]]]}","export const charData = \n{\"strokes\": [\"M 293 603 Q 387 760 389 762 Q 388 766 387 769 Q 383 782 354 803 Q 327 821 308 820 Q 290 819 299 796 Q 314 762 302 734 Q 263 637 205 546 Q 148 458 70 363 Q 60 353 58 346 Q 55 336 69 338 Q 79 339 104 363 Q 150 403 207 480 Q 240 522 275 574 L 293 603 Z\", \"M 275 574 Q 317 561 361 575 Q 406 587 453 599 Q 474 606 477 609 Q 484 616 480 625 Q 473 635 443 641 Q 419 644 339 614 Q 318 610 293 603 C 264 595 246 582 275 574 Z\", \"M 309 427 Q 352 440 399 452 Q 421 459 425 462 Q 432 469 428 478 Q 421 488 393 492 Q 365 496 339 483 Q 314 473 287 464 Q 257 457 222 451 Q 188 444 214 429 Q 233 420 260 419 L 309 427 Z\", \"M 329 289 Q 428 322 433 326 Q 440 333 436 342 Q 429 352 401 356 Q 368 359 330 337 L 283 318 Q 273 317 267 313 Q 221 297 165 287 Q 132 278 158 265 Q 197 246 247 264 Q 265 270 284 275 L 329 289 Z\", \"M 284 275 Q 280 152 257 106 Q 230 66 236 48 Q 246 21 260 10 Q 272 3 283 19 Q 296 47 428 172 Q 444 185 448 194 Q 452 204 442 203 Q 430 203 328 136 Q 322 132 320 137 Q 327 219 329 289 L 330 337 Q 330 365 334 388 Q 338 401 330 411 Q 320 421 309 427 C 284 444 249 447 260 419 Q 281 373 283 318 L 284 275 Z\", \"M 633 524 Q 684 540 740 553 Q 776 563 780 569 Q 789 576 784 585 Q 777 595 748 601 Q 721 604 625 568 L 584 556 Q 545 549 503 541 Q 469 532 494 518 Q 542 497 592 513 L 633 524 Z\", \"M 662 396 Q 720 412 834 431 Q 846 430 854 444 Q 855 457 830 466 Q 797 487 708 455 Q 674 449 652 439 L 610 428 Q 511 410 471 402 Q 441 398 465 380 Q 504 355 530 364 Q 572 376 621 386 L 662 396 Z\", \"M 706 166 Q 754 81 826 20 Q 884 -29 912 -28 Q 931 -24 925 4 Q 921 58 931 215 Q 931 237 923 239 Q 916 238 909 217 Q 894 171 881 131 Q 868 91 853 89 Q 840 89 815 110 Q 775 150 741 203 L 714 252 Q 683 316 662 396 L 652 439 Q 640 482 633 524 L 625 568 Q 610 673 619 746 Q 629 786 576 805 Q 542 820 523 812 Q 504 805 513 786 Q 559 747 559 715 Q 571 630 584 556 L 592 513 Q 601 468 610 428 L 621 386 Q 639 305 683 213 L 706 166 Z\", \"M 683 213 Q 679 210 674 204 Q 611 138 471 61 Q 462 55 468 51 Q 475 47 486 50 Q 549 62 606 93 Q 654 114 706 166 L 741 203 Q 766 236 796 279 Q 812 301 830 322 Q 840 329 836 340 Q 832 352 806 374 Q 787 390 777 389 Q 764 388 762 373 Q 759 333 714 252 L 683 213 Z\", \"M 734 715 Q 765 691 800 661 Q 813 651 827 651 Q 837 652 841 664 Q 845 677 836 705 Q 824 739 728 759 Q 713 762 708 759 Q 704 755 705 743 Q 709 733 734 715 Z\"], \"medians\": [[[309, 806], [333, 783], [345, 762], [282, 627], [176, 469], [136, 417], [67, 346]], [[283, 576], [306, 588], [348, 593], [423, 616], [469, 619]], [[215, 441], [253, 437], [364, 468], [417, 472]], [[159, 277], [182, 273], [233, 280], [373, 330], [426, 335]], [[267, 414], [295, 400], [304, 386], [306, 254], [294, 137], [299, 102], [341, 117], [442, 196]], [[496, 530], [531, 526], [579, 532], [717, 573], [774, 579]], [[466, 392], [520, 386], [791, 450], [842, 445]], [[526, 796], [558, 782], [584, 757], [608, 538], [646, 371], [679, 274], [718, 194], [776, 110], [821, 67], [861, 46], [874, 44], [892, 77], [923, 233]], [[778, 373], [791, 343], [789, 328], [734, 235], [702, 196], [603, 115], [549, 85], [473, 55]], [[713, 753], [794, 706], [825, 667]]], \"radStrokes\": [0, 1, 2, 3, 4]}","export const charData = \n{\"strokes\": [\"M 460 783 Q 502 714 482 443 Q 473 374 489 351 Q 489 348 492 344 Q 502 326 519 336 Q 529 345 531 420 Q 522 519 543 673 Q 544 704 564 743 Q 571 753 558 768 Q 501 816 468 804 Q 453 800 460 783 Z\", \"M 292 583 Q 261 510 217 446 Q 193 406 212 371 Q 219 350 244 364 Q 269 382 286 417 Q 314 469 319 517 Q 326 554 318 582 Q 314 592 306 593 Q 296 592 292 583 Z\", \"M 698 588 Q 747 542 807 475 Q 823 454 840 449 Q 849 448 857 459 Q 870 472 857 519 Q 848 561 773 593 Q 725 612 699 620 Q 689 626 687 613 Q 687 598 698 588 Z\", \"M 643 470 Q 625 293 421 130 Q 405 120 388 107 Q 325 58 176 -19 Q 166 -26 172 -31 Q 181 -35 195 -33 Q 292 -11 382 38 Q 538 117 674 338 Q 698 374 726 407 Q 738 416 734 430 Q 728 443 696 471 Q 674 490 661 490 Q 645 489 643 470 Z\"], \"medians\": [[[470, 791], [489, 781], [518, 745], [505, 478], [509, 346]], [[305, 582], [287, 502], [227, 374]], [[698, 608], [798, 540], [821, 514], [841, 466]], [[662, 471], [678, 436], [679, 417], [605, 284], [513, 172], [439, 107], [375, 64], [270, 8], [179, -27]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 371 636 Q 419 669 477 726 L 493 742 Q 512 761 532 779 Q 545 788 535 806 Q 502 848 476 850 Q 466 851 464 836 Q 449 728 308 638 Q 274 617 256 603 Q 244 590 260 592 Q 278 592 352 625 L 371 636 Z\", \"M 477 726 Q 476 726 477 725 Q 502 698 593 715 Q 612 716 618 708 Q 621 701 605 681 Q 553 605 464 527 Q 389 463 247 377 Q 231 367 246 364 Q 336 364 535 524 Q 538 528 543 531 Q 604 583 666 650 Q 690 677 729 701 Q 747 710 742 721 Q 741 731 681 764 Q 666 776 611 755 Q 512 743 493 742 C 463 739 458 739 477 726 Z\", \"M 352 625 Q 355 618 373 599 Q 391 580 411 555 Q 420 545 432 543 Q 441 543 445 553 Q 449 563 446 587 Q 443 603 421 616 Q 400 625 371 636 C 343 647 339 648 352 625 Z\", \"M 400 284 Q 499 359 524 381 L 552 409 Q 588 446 606 461 Q 616 471 614 481 Q 613 493 589 502 Q 564 512 551 511 Q 544 510 541 498 Q 511 405 285 251 Q 264 238 290 240 Q 324 243 375 270 L 400 284 Z\", \"M 524 381 Q 564 360 646 388 Q 671 392 681 385 Q 688 378 658 323 Q 529 64 193 -47 Q 181 -50 182 -56 Q 182 -62 191 -62 Q 219 -66 283 -52 Q 344 -39 410 -4 Q 489 36 569 111 Q 648 184 734 311 Q 756 341 788 358 Q 807 365 808 376 Q 809 391 779 414 Q 742 445 725 447 Q 712 447 698 439 Q 641 424 552 409 C 522 404 495 389 524 381 Z\", \"M 375 270 Q 375 267 460 175 Q 470 162 485 162 Q 495 161 501 173 Q 507 186 501 214 Q 495 247 400 284 C 372 295 358 294 375 270 Z\"], \"medians\": [[[476, 838], [494, 796], [452, 737], [366, 655], [336, 634], [262, 599]], [[484, 726], [630, 734], [666, 717], [645, 678], [606, 630], [494, 520], [354, 421], [250, 370]], [[358, 625], [407, 597], [421, 583], [432, 557]], [[596, 478], [567, 472], [505, 397], [398, 306], [331, 264], [295, 249]], [[531, 383], [672, 411], [722, 402], [734, 384], [682, 294], [619, 204], [510, 93], [428, 34], [338, -13], [270, -39], [190, -54]], [[382, 273], [402, 266], [460, 220], [486, 178]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 371 481 Q 410 518 443 557 L 463 584 Q 479 606 494 630 Q 534 697 573 751 Q 586 764 569 783 Q 523 822 492 820 Q 479 819 481 801 Q 490 657 322 489 Q 283 459 242 414 Q 232 396 249 401 Q 282 407 355 467 L 371 481 Z\", \"M 443 557 Q 500 532 631 578 Q 658 588 669 581 Q 678 575 656 510 Q 605 333 438 167 Q 320 62 207 3 Q 197 -3 198 -8 Q 199 -14 208 -13 Q 340 -7 516 168 Q 550 207 586 253 Q 659 353 732 511 Q 751 545 780 567 Q 798 577 797 587 Q 797 603 762 621 Q 720 646 703 646 Q 690 645 677 635 Q 548 592 471 585 Q 467 585 463 584 C 433 580 414 564 443 557 Z\", \"M 355 467 Q 358 460 364 454 Q 407 412 460 350 Q 475 331 489 327 Q 498 326 505 334 Q 517 347 506 388 Q 499 427 432 457 Q 393 473 371 481 C 343 491 342 492 355 467 Z\"], \"medians\": [[[494, 806], [525, 760], [462, 626], [421, 566], [354, 492], [251, 411]], [[449, 559], [479, 568], [540, 574], [676, 608], [704, 603], [722, 584], [684, 485], [635, 381], [583, 296], [520, 214], [461, 151], [352, 64], [268, 16], [206, -5]], [[365, 464], [374, 465], [453, 408], [474, 384], [491, 344]]]}","export const charData = \n{\"strokes\": [\"M 484 621 Q 599 646 707 656 Q 732 657 737 645 Q 746 623 739 568 Q 715 366 671 259 Q 649 192 625 172 Q 612 160 586 169 Q 552 179 521 192 Q 496 201 513 177 Q 559 122 582 81 Q 592 59 614 64 Q 638 67 668 99 Q 755 187 792 517 Q 799 590 829 634 Q 848 659 838 671 Q 820 693 779 711 Q 751 727 719 713 Q 622 677 474 655 Q 347 637 273 640 Q 248 644 248 630 Q 247 618 272 600 Q 303 576 335 586 Q 389 601 442 611 L 484 621 Z\", \"M 442 611 Q 442 410 281 247 Q 233 192 116 100 Q 107 91 115 88 Q 122 85 136 90 Q 314 168 401 307 Q 450 377 496 494 Q 511 530 531 563 Q 540 573 533 586 Q 518 610 484 621 C 456 633 443 638 442 611 Z\"], \"medians\": [[[260, 629], [304, 613], [336, 613], [737, 685], [769, 671], [785, 653], [738, 364], [721, 295], [678, 180], [651, 141], [617, 118], [513, 186]], [[451, 603], [481, 579], [483, 563], [446, 450], [389, 337], [341, 270], [270, 198], [155, 112], [120, 94]]]}","export const charData = \n{\"strokes\": [\"M 499 695 Q 503 661 501 132 Q 500 110 488 101 Q 478 92 448 100 Q 414 107 383 113 Q 347 123 351 112 Q 352 105 375 91 Q 456 42 479 10 Q 504 -26 523 -25 Q 538 -26 552 11 Q 568 57 564 133 Q 531 583 572 723 Q 590 754 532 778 Q 498 797 477 789 Q 459 782 475 759 Q 497 731 499 695 Z\", \"M 266 475 Q 223 408 170 349 Q 160 339 155 320 Q 148 292 154 273 Q 158 251 185 261 Q 213 274 237 308 Q 273 357 284 404 Q 297 441 293 470 Q 289 480 283 484 Q 273 484 266 475 Z\", \"M 706 472 Q 769 411 842 323 Q 860 299 878 293 Q 888 292 897 303 Q 913 318 900 370 Q 887 431 709 508 Q 699 515 696 500 Q 695 484 706 472 Z\"], \"medians\": [[[484, 773], [501, 765], [533, 730], [525, 545], [532, 191], [528, 90], [510, 54], [459, 68], [358, 112]], [[280, 476], [254, 405], [170, 274]], [[709, 494], [800, 425], [848, 380], [866, 353], [879, 311]]]}","export const charData = \n{\"strokes\": [\"M 494 476 Q 542 485 795 501 Q 817 502 822 512 Q 826 525 808 540 Q 750 580 707 569 Q 631 550 500 522 L 436 509 Q 331 490 213 469 Q 189 465 208 447 Q 241 420 294 432 Q 357 453 431 465 L 494 476 Z\", \"M 487 437 Q 491 456 494 476 L 500 522 Q 510 711 528 763 Q 534 776 523 786 Q 501 805 459 822 Q 434 832 414 825 Q 390 816 410 796 Q 444 762 444 726 Q 445 602 436 509 L 431 465 Q 398 275 310 179 Q 303 173 297 166 Q 251 118 148 55 Q 133 48 130 43 Q 124 36 144 34 Q 195 34 300 104 Q 385 173 414 218 Q 444 266 480 396 L 487 437 Z\", \"M 480 396 Q 501 357 575 245 Q 657 124 718 56 Q 746 22 774 22 Q 856 28 928 32 Q 959 33 959 41 Q 960 50 927 66 Q 753 144 719 174 Q 614 267 500 419 Q 493 429 487 437 C 469 461 465 422 480 396 Z\"], \"medians\": [[[210, 458], [268, 453], [514, 503], [719, 534], [770, 529], [810, 517]], [[416, 810], [444, 799], [482, 759], [469, 518], [448, 394], [426, 320], [386, 231], [361, 196], [307, 140], [202, 67], [138, 41]], [[486, 430], [500, 393], [576, 284], [660, 182], [722, 118], [774, 77], [953, 42]]]}","export const charData = \n{\"strokes\": [\"M 399 666 Q 499 691 503 694 Q 512 701 507 709 Q 500 719 474 726 Q 444 730 403 714 L 356 699 Q 260 678 224 674 Q 190 668 215 653 Q 251 632 307 646 Q 329 652 353 655 L 399 666 Z\", \"M 386 566 Q 477 591 480 593 Q 487 600 483 607 Q 476 616 453 621 Q 426 625 392 609 C 389 608 376 604 347 595 Q 346 595 346 594 Q 339 593 334 591 Q 294 581 246 574 Q 216 568 238 556 Q 268 540 327 553 Q 333 554 340 555 L 386 566 Z\", \"M 360 462 Q 420 478 494 492 Q 510 495 510 502 Q 511 514 494 522 Q 463 534 373 506 L 321 491 Q 201 463 135 453 Q 123 452 120 444 Q 119 434 133 423 Q 167 402 216 416 Q 262 434 304 446 L 360 462 Z\", \"M 304 446 Q 301 442 300 437 Q 267 362 183 292 Q 170 280 167 275 Q 166 269 176 269 Q 212 269 283 340 Q 325 383 360 462 L 373 506 Q 379 531 385 559 Q 385 563 386 566 L 392 609 Q 395 637 399 666 L 403 714 Q 403 736 413 798 Q 419 816 400 825 Q 357 847 344 846 Q 326 843 340 823 Q 358 790 356 699 L 353 655 Q 350 628 347 595 L 340 555 Q 333 525 321 491 L 304 446 Z\", \"M 618 725 Q 633 734 694 751 Q 698 754 709 748 Q 719 741 711 720 Q 690 659 685 651 Q 678 638 679 630 Q 679 620 698 613 Q 797 550 769 493 Q 768 493 767 491 Q 751 484 727 489 Q 687 499 654 506 Q 647 507 647 501 Q 648 494 662 485 Q 740 443 755 417 Q 762 404 774 403 Q 784 402 799 413 Q 826 447 826 489 Q 826 553 737 622 Q 698 650 758 703 Q 758 704 760 705 Q 773 723 792 731 Q 817 746 795 763 Q 761 791 741 800 Q 725 806 711 797 Q 687 779 591 750 C 562 741 591 713 618 725 Z\", \"M 566 423 Q 570 402 576 394 Q 580 388 586 391 Q 593 394 597 406 Q 610 443 608 521 Q 607 552 612 676 Q 615 700 618 725 C 619 736 618 736 591 750 Q 578 757 571 759 Q 561 763 548 755 Q 541 749 546 740 Q 558 722 560 702 Q 563 630 562 517 Q 563 447 566 423 Z\", \"M 363 322 Q 342 343 310 339 Q 298 335 304 324 Q 335 272 314 169 Q 292 135 325 91 Q 325 90 328 87 Q 335 75 344 81 Q 368 99 369 232 Q 369 272 369 289 C 369 317 369 317 363 322 Z\", \"M 542 316 Q 594 325 647 328 Q 677 329 678 309 Q 687 167 670 144 Q 664 141 607 160 Q 592 166 589 161 Q 585 157 595 145 Q 646 100 676 66 Q 691 51 704 66 Q 732 99 734 169 Q 728 265 738 316 Q 742 335 732 345 Q 707 367 688 378 Q 676 384 667 375 Q 660 366 553 345 Q 549 345 544 343 L 482 335 Q 436 331 363 322 C 333 318 339 284 369 289 L 483 307 L 542 316 Z\", \"M 486 -35 Q 492 -60 498 -69 Q 504 -76 511 -74 Q 538 -56 539 100 Q 538 146 542 316 L 544 343 Q 547 355 551 379 Q 555 397 541 406 Q 510 428 494 430 Q 482 434 466 426 Q 457 419 464 408 Q 482 378 482 335 L 483 307 Q 483 -12 486 -35 Z\"], \"medians\": [[[217, 665], [239, 659], [294, 664], [445, 702], [497, 704]], [[239, 566], [298, 564], [445, 603], [475, 601]], [[130, 441], [156, 435], [202, 438], [409, 496], [457, 506], [499, 505]], [[345, 834], [381, 799], [382, 774], [370, 605], [345, 490], [322, 433], [281, 366], [237, 318], [174, 275]], [[601, 752], [621, 744], [687, 767], [723, 772], [751, 749], [715, 683], [702, 635], [782, 557], [797, 522], [794, 474], [775, 453], [653, 500]], [[559, 746], [575, 733], [588, 710], [583, 400]], [[311, 330], [336, 313], [344, 284], [347, 220], [334, 136], [338, 90]], [[375, 296], [382, 308], [391, 310], [646, 347], [687, 345], [707, 325], [708, 316], [707, 177], [699, 130], [687, 110], [679, 111], [594, 158]], [[473, 416], [493, 406], [514, 378], [507, -65]]], \"radStrokes\": [6, 7, 8]}","export const charData = \n{\"strokes\": [\"M 128 561 Q 127 562 127 563 Q 117 570 82 577 Q 70 581 67 576 Q 60 570 68 555 Q 99 477 112 354 Q 113 317 133 291 Q 149 270 155 285 Q 164 310 156 362 L 152 392 Q 136 495 133 532 L 128 561 Z\", \"M 290 420 Q 303 517 328 546 Q 347 573 325 586 Q 304 596 277 611 Q 258 621 240 608 Q 207 584 128 561 C 99 552 106 520 133 532 Q 140 538 220 558 Q 242 564 249 556 Q 258 549 240 421 C 236 391 286 390 290 420 Z\", \"M 156 362 Q 165 361 177 365 Q 216 377 303 391 Q 313 392 314 401 Q 313 408 290 420 C 270 431 269 430 240 421 Q 191 405 152 392 C 124 383 126 363 156 362 Z\", \"M 497 271 Q 493 210 475 136 Q 459 76 499 22 Q 512 6 524 21 Q 545 49 543 178 Q 547 638 551 668 Q 555 692 550 701 Q 541 723 498 739 Q 486 745 473 739 Q 466 735 472 720 Q 476 704 482 689 Q 498 656 501 590 Q 502 574 502 556 L 503 521 Q 503 479 502 427 L 501 391 Q 500 351 499 302 Q 498 302 498 300 L 497 271 Z\", \"M 502 556 Q 484 562 407 543 Q 383 539 355 536 Q 324 530 346 516 Q 377 498 444 511 Q 471 517 503 521 C 533 525 531 550 502 556 Z\", \"M 502 427 Q 483 436 402 408 Q 372 401 342 396 Q 311 389 334 376 Q 364 361 429 375 Q 463 384 501 391 C 530 397 531 419 502 427 Z\", \"M 498 300 Q 314 234 282 233 Q 270 230 269 221 Q 268 208 277 201 Q 299 188 332 172 Q 342 169 353 178 Q 374 196 492 269 Q 493 270 497 271 C 524 284 526 310 498 300 Z\", \"M 708 302 Q 708 354 708 415 L 708 446 Q 708 498 709 558 L 710 591 Q 711 672 727 728 Q 737 744 733 757 Q 726 767 670 801 Q 646 817 625 802 Q 621 796 627 781 Q 660 733 661 665 Q 665 452 662 254 Q 662 169 639 84 Q 630 50 638 29 Q 656 -34 670 -39 Q 677 -46 684 -38 Q 711 -14 710 45 Q 709 78 708 268 L 708 302 Z\", \"M 709 558 Q 713 558 721 559 Q 812 574 881 583 Q 908 587 897 603 Q 884 619 855 625 Q 822 628 710 591 C 681 582 679 556 709 558 Z\", \"M 708 415 Q 712 415 718 415 Q 800 428 861 435 Q 888 439 877 455 Q 864 471 835 477 Q 796 481 708 446 C 680 435 678 415 708 415 Z\", \"M 708 268 Q 724 264 837 272 Q 886 275 933 277 Q 948 278 949 285 Q 950 298 928 316 Q 888 344 828 321 Q 816 320 708 302 C 678 297 678 272 708 268 Z\"], \"medians\": [[[75, 568], [102, 544], [107, 525], [145, 291]], [[132, 539], [148, 552], [236, 581], [261, 584], [280, 571], [289, 556], [268, 445], [247, 434]], [[161, 370], [177, 383], [246, 402], [283, 405], [305, 400]], [[482, 730], [519, 689], [524, 629], [523, 303], [520, 222], [506, 110], [512, 28]], [[348, 527], [375, 522], [415, 525], [484, 538], [497, 550]], [[336, 387], [397, 387], [481, 408], [497, 421]], [[283, 219], [336, 209], [475, 274], [487, 293]], [[637, 796], [690, 742], [685, 608], [687, 255], [672, 57], [676, -25]], [[715, 563], [729, 579], [800, 595], [851, 602], [886, 595]], [[713, 423], [726, 435], [812, 453], [838, 455], [866, 447]], [[711, 274], [728, 287], [882, 303], [910, 300], [940, 288]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 112 469 Q 102 476 74 481 Q 62 485 59 480 Q 52 476 60 459 Q 88 389 98 274 Q 99 240 117 216 Q 133 194 139 209 Q 146 227 144 259 L 140 291 Q 124 412 124 443 C 123 463 123 463 112 469 Z\", \"M 276 321 Q 292 421 318 453 Q 340 480 316 492 Q 297 502 269 519 Q 248 531 209 502 Q 173 487 112 469 C 83 460 95 437 124 443 Q 133 444 144 448 Q 181 458 214 466 Q 236 472 241 463 Q 251 456 243 414 Q 236 371 226 319 C 220 290 271 291 276 321 Z\", \"M 144 259 Q 150 259 157 261 Q 199 274 292 291 Q 302 292 302 301 Q 302 308 276 321 C 259 330 255 328 226 319 Q 177 303 140 291 C 111 282 114 257 144 259 Z\", \"M 456 446 Q 480 453 513 465 Q 529 471 537 463 Q 546 451 541 425 Q 528 271 507 205 Q 492 153 474 137 Q 458 118 430 131 Q 411 137 385 147 Q 370 151 371 145 Q 372 135 387 123 Q 420 86 437 58 Q 444 39 459 38 Q 475 39 501 61 Q 532 92 549 150 Q 568 216 590 387 Q 597 429 614 453 Q 627 466 623 480 Q 619 493 552 517 Q 533 524 516 511 Q 488 496 466 485 L 407 466 Q 323 454 322 451 Q 318 444 331 437 Q 349 427 398 431 L 456 446 Z\", \"M 398 431 Q 338 224 189 31 Q 183 25 181 19 Q 177 7 189 9 Q 225 15 323 144 Q 344 175 365 211 Q 425 326 456 446 L 466 485 Q 479 542 489 598 Q 504 692 514 719 Q 524 734 518 748 Q 502 767 470 784 Q 451 797 437 793 Q 424 786 430 771 Q 448 743 443 675 Q 422 534 407 466 L 398 431 Z\", \"M 677 453 Q 667 457 649 462 Q 637 466 633 461 Q 626 457 634 439 Q 662 360 670 233 Q 670 196 689 169 Q 705 145 711 161 Q 720 180 719 212 L 716 247 Q 701 394 701 427 C 701 444 701 444 677 453 Z\", \"M 868 272 Q 884 396 916 435 Q 938 462 915 476 Q 894 488 865 505 Q 846 515 826 503 Q 786 478 677 453 C 648 446 672 418 701 427 Q 716 433 801 451 Q 828 458 834 447 Q 844 438 815 272 C 810 242 864 242 868 272 Z\", \"M 719 212 Q 725 212 732 214 Q 780 226 885 237 Q 895 238 897 247 Q 897 256 868 272 C 851 282 844 280 815 272 Q 758 256 716 247 C 687 241 689 210 719 212 Z\"], \"medians\": [[[67, 472], [92, 449], [98, 430], [129, 215]], [[122, 466], [135, 460], [246, 493], [260, 489], [282, 468], [255, 344], [232, 325]], [[150, 265], [164, 282], [233, 300], [270, 305], [293, 300]], [[325, 448], [358, 444], [416, 451], [538, 492], [553, 488], [577, 466], [537, 213], [507, 125], [468, 87], [379, 142]], [[443, 779], [480, 734], [450, 540], [412, 387], [373, 286], [314, 174], [246, 76], [190, 18]], [[640, 453], [672, 415], [701, 167]], [[688, 455], [707, 445], [835, 478], [847, 478], [867, 462], [876, 449], [845, 298], [822, 285]], [[725, 218], [739, 234], [812, 250], [861, 254], [887, 247]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 521 525 Q 600 540 679 548 Q 704 549 709 537 Q 718 518 712 470 Q 693 293 656 200 Q 637 142 617 124 Q 604 111 576 120 Q 539 132 505 144 Q 480 151 497 129 Q 546 74 573 33 Q 583 9 606 16 Q 628 17 654 47 Q 732 122 767 421 Q 774 488 801 526 Q 820 551 810 563 Q 792 585 751 603 Q 723 619 691 605 Q 621 580 527 561 L 468 550 Q 303 531 241 532 Q 216 536 216 522 Q 215 510 240 492 Q 271 468 303 478 Q 382 499 461 514 L 521 525 Z\", \"M 461 514 Q 392 231 161 88 Q 142 75 123 60 Q 107 48 123 46 Q 139 45 182 62 Q 267 101 330 161 Q 402 224 449 318 Q 507 445 521 525 L 527 561 Q 558 717 573 745 Q 585 767 565 778 Q 507 820 474 810 Q 458 804 466 786 Q 496 723 468 550 L 461 514 Z\"], \"medians\": [[[228, 521], [269, 505], [303, 506], [709, 577], [724, 574], [757, 546], [720, 306], [689, 188], [654, 109], [627, 80], [604, 71], [498, 138]], [[478, 795], [511, 768], [524, 742], [490, 513], [468, 435], [436, 355], [382, 260], [319, 184], [244, 120], [127, 53]]]}","export const charData = \n{\"strokes\": [\"M 494 631 Q 534 640 711 663 Q 723 662 732 675 Q 733 688 709 699 Q 669 723 585 697 Q 510 682 503 677 L 443 665 Q 319 650 269 643 Q 238 639 262 620 Q 296 590 329 599 Q 380 611 439 620 L 494 631 Z\", \"M 470 514 Q 482 575 494 631 L 503 677 Q 509 732 537 796 Q 543 806 524 825 Q 490 849 465 856 Q 449 862 440 854 Q 430 847 437 830 Q 453 800 452 781 Q 449 726 443 665 L 439 620 Q 432 565 424 505 C 420 475 464 485 470 514 Z\", \"M 311 492 Q 298 496 270 500 Q 257 504 253 497 Q 246 490 256 473 Q 284 422 305 338 Q 309 313 326 296 Q 347 272 351 290 Q 352 294 353 299 L 353 332 Q 352 338 333 457 C 328 487 328 487 311 492 Z\", \"M 622 369 Q 655 438 684 454 Q 705 473 689 495 Q 671 511 615 542 Q 596 552 571 544 Q 519 525 470 514 L 424 505 Q 367 498 311 492 C 281 489 304 451 333 457 Q 360 463 546 492 Q 571 496 580 486 Q 589 477 585 460 Q 572 408 558 367 C 549 339 609 342 622 369 Z\", \"M 532 318 Q 581 325 642 328 Q 654 329 655 338 Q 656 347 624 369 Q 623 370 622 369 L 558 367 Q 443 343 353 332 C 323 328 324 305 353 299 Q 354 299 357 298 Q 369 295 382 298 Q 422 307 484 313 L 532 318 Z\", \"M 350 264 Q 344 143 151 23 Q 141 16 148 12 Q 155 8 168 11 Q 214 20 257 42 Q 329 75 399 179 Q 411 195 425 210 Q 435 219 431 231 Q 427 243 397 266 Q 376 282 366 282 Q 351 281 350 264 Z\", \"M 945 43 Q 926 94 912 181 Q 909 197 902 202 Q 893 206 890 186 Q 877 78 862 58 Q 829 22 695 21 Q 622 22 590 35 Q 562 50 556 68 Q 537 131 562 223 Q 572 281 573 284 Q 563 300 532 318 C 507 335 472 341 484 313 Q 484 312 486 308 Q 507 268 502 211 Q 498 90 506 65 Q 516 26 543 5 Q 603 -38 800 -31 Q 891 -27 927 -8 Q 958 10 945 43 Z\"], \"medians\": [[[264, 632], [319, 623], [637, 682], [686, 684], [721, 677]], [[452, 840], [492, 797], [451, 533], [431, 512]], [[263, 489], [289, 470], [307, 438], [339, 295]], [[318, 489], [342, 477], [441, 490], [556, 516], [598, 514], [634, 475], [602, 400], [564, 372]], [[357, 305], [377, 317], [565, 345], [622, 348], [646, 339]], [[366, 266], [384, 224], [358, 175], [319, 123], [240, 58], [154, 16]], [[490, 313], [527, 285], [535, 269], [524, 157], [531, 65], [555, 28], [602, 6], [656, -3], [766, -5], [843, 6], [898, 29], [903, 81], [900, 194]]]}","export const charData = \n{\"strokes\": [\"M 306 639 Q 349 652 398 664 Q 432 674 437 679 Q 444 688 440 696 Q 433 708 402 713 Q 375 716 284 683 Q 184 659 163 655 Q 126 646 154 631 Q 187 613 264 628 L 306 639 Z\", \"M 312 393 Q 330 615 330 616 Q 317 631 306 639 C 283 658 255 657 264 628 Q 270 622 271 524 Q 270 472 267 375 C 266 345 310 363 312 393 Z\", \"M 267 375 Q 209 353 150 328 Q 131 319 97 317 Q 82 314 82 303 Q 81 287 92 280 Q 120 264 158 247 Q 171 246 182 256 Q 221 292 391 391 Q 416 404 433 421 Q 446 431 446 442 Q 439 446 426 443 Q 371 419 312 393 L 267 375 Z\", \"M 643 675 Q 724 696 908 722 Q 920 721 929 735 Q 930 748 905 759 Q 866 781 787 754 Q 645 721 500 699 Q 469 695 493 676 Q 526 652 574 660 Q 587 663 603 666 L 643 675 Z\", \"M 553 384 Q 602 418 703 438 Q 743 448 766 441 Q 791 432 793 392 Q 781 250 716 139 Q 700 114 685 108 Q 670 104 597 125 Q 581 134 578 126 Q 577 119 590 106 Q 627 61 650 22 Q 660 7 673 7 Q 691 6 713 19 Q 774 80 802 154 Q 830 227 851 369 Q 854 403 867 423 Q 880 436 869 450 Q 850 469 808 487 Q 786 497 759 487 Q 725 475 698 470 Q 665 464 624 458 Q 597 454 610 479 Q 661 596 682 623 Q 695 638 683 654 Q 668 666 643 675 C 616 688 599 696 603 666 Q 616 624 594 555 Q 587 536 578 515 Q 565 487 521 447 Q 503 429 506 413 Q 509 398 526 383 Q 539 371 553 384 Z\"], \"medians\": [[[155, 644], [186, 640], [250, 649], [358, 681], [427, 690]], [[271, 629], [299, 605], [299, 569], [293, 412], [270, 384]], [[97, 302], [122, 293], [159, 290], [440, 438]], [[495, 688], [563, 683], [863, 743], [917, 736]], [[611, 661], [641, 641], [644, 633], [619, 554], [572, 441], [616, 437], [772, 465], [793, 461], [815, 445], [824, 435], [826, 418], [815, 325], [797, 244], [762, 148], [736, 103], [685, 59], [584, 123]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 593 768 Q 707 792 709 793 Q 718 800 714 808 Q 708 821 680 829 Q 650 838 550 808 Q 424 787 347 783 Q 311 779 336 761 Q 375 736 429 745 Q 486 754 546 762 L 593 768 Z\", \"M 300 617 Q 285 623 248 627 Q 235 628 233 623 Q 227 616 237 601 Q 270 550 295 464 Q 301 437 319 422 Q 338 403 342 418 Q 343 422 343 429 L 341 456 Q 340 466 337 476 Q 318 546 310 579 C 303 608 301 617 300 617 Z\", \"M 656 459 Q 672 431 688 421 Q 698 412 716 433 Q 728 449 761 540 Q 773 573 798 598 Q 813 611 802 626 Q 786 645 742 675 Q 721 685 704 679 Q 661 670 606 662 L 558 656 Q 507 649 452 640 L 405 633 Q 347 624 300 617 C 270 613 281 571 310 579 Q 353 591 410 600 L 453 608 Q 499 617 556 624 L 600 628 Q 619 632 641 634 Q 689 640 703 623 Q 712 613 709 601 Q 684 493 667 486 C 652 466 652 466 656 459 Z\", \"M 452 640 Q 452 665 454 673 Q 457 692 444 704 Q 425 719 400 727 Q 388 731 380 726 Q 373 720 379 707 Q 391 685 405 633 L 410 600 Q 414 554 423 466 C 426 436 459 440 458 470 Q 454 552 453 607 Q 452 608 453 608 L 452 640 Z\", \"M 606 662 Q 607 668 608 673 Q 611 688 627 733 Q 631 742 616 755 Q 604 762 593 768 C 567 783 531 788 546 762 Q 558 750 560 689 Q 559 674 558 656 L 556 624 Q 550 557 541 482 C 537 452 571 457 576 487 Q 588 560 600 628 L 606 662 Z\", \"M 450 438 Q 562 453 656 459 C 686 461 694 474 667 486 Q 660 490 652 492 Q 619 499 576 487 L 541 482 Q 498 478 458 470 L 423 466 Q 380 462 341 456 C 311 452 313 430 343 429 Q 355 428 372 429 Q 394 433 419 434 L 450 438 Z\", \"M 456 329 Q 465 353 485 381 Q 494 388 491 397 Q 487 410 450 438 C 427 457 414 464 419 434 Q 428 413 415 357 Q 409 341 404 324 L 388 283 Q 370 243 352 217 Q 342 199 345 187 Q 348 177 365 173 Q 447 152 483 125 L 526 101 Q 596 61 695 -17 Q 720 -38 738 -37 Q 759 -37 759 -17 Q 759 2 730 48 Q 714 79 561 138 L 513 157 Q 453 182 409 193 Q 388 197 400 217 Q 419 257 434 287 L 456 329 Z\", \"M 643 351 Q 631 367 616 376 Q 597 391 587 389 Q 577 386 578 375 Q 579 360 579 343 L 573 299 Q 563 232 513 157 L 483 125 Q 480 124 479 122 Q 398 62 240 39 Q 230 39 225 36 Q 218 33 227 27 Q 231 24 246 23 Q 340 17 413 39 Q 468 54 526 101 L 561 138 Q 604 196 633 278 Q 637 291 642 301 C 653 329 656 336 643 351 Z\", \"M 642 301 Q 730 305 839 301 Q 872 300 901 300 Q 925 299 930 309 Q 937 322 918 339 Q 855 388 784 373 Q 723 364 643 351 L 579 343 Q 491 337 456 329 L 404 324 Q 271 312 124 298 Q 99 297 116 275 Q 152 239 197 249 Q 288 271 388 283 L 434 287 Q 443 290 454 290 Q 506 297 573 299 L 642 301 Z\"], \"medians\": [[[339, 773], [403, 764], [536, 782], [659, 807], [705, 803]], [[243, 616], [277, 591], [331, 423]], [[308, 612], [325, 602], [661, 654], [724, 648], [753, 613], [695, 464], [696, 440]], [[387, 718], [424, 680], [439, 484], [428, 476]], [[554, 762], [591, 730], [561, 503], [546, 490]], [[349, 450], [357, 443], [410, 448], [660, 481]], [[427, 431], [445, 415], [454, 392], [371, 198], [398, 179], [482, 150], [625, 77], [687, 38], [741, -19]], [[590, 377], [611, 340], [602, 280], [580, 221], [545, 158], [505, 114], [447, 75], [375, 49], [303, 35], [233, 33]], [[120, 286], [176, 275], [499, 316], [798, 339], [869, 333], [917, 316]]], \"radStrokes\": [0, 1, 2, 3, 4, 5]}","export const charData = \n{\"strokes\": [\"M 266 582 Q 296 643 335 735 Q 350 772 350 776 Q 347 786 333 795 Q 294 819 265 807 Q 256 803 261 792 Q 292 710 178 513 Q 175 510 173 506 Q 139 452 51 344 Q 44 337 55 337 Q 109 353 207 481 Q 210 487 254 559 L 266 582 Z\", \"M 254 559 Q 272 556 361 579 Q 371 583 374 580 Q 377 577 373 568 Q 348 501 329 467 Q 323 454 322 448 Q 321 438 332 444 Q 344 451 397 516 Q 430 559 463 582 Q 479 592 467 605 Q 454 615 417 633 Q 410 636 338 607 Q 275 586 266 582 C 238 571 224 559 254 559 Z\", \"M 311 406 Q 315 419 307 430 Q 283 452 262 463 Q 243 470 235 465 Q 225 459 233 443 Q 269 362 250 200 Q 249 151 209 102 Q 197 86 205 65 Q 215 38 228 27 Q 241 20 253 36 Q 266 64 398 183 Q 416 196 420 206 Q 424 216 414 216 Q 408 216 303 157 Q 296 151 294 159 Q 306 271 306 358 Q 306 385 311 406 Z\", \"M 543 545 Q 607 599 625 606 Q 643 615 634 629 Q 622 642 601 655 Q 580 665 570 663 Q 560 662 563 651 Q 566 626 450 492 Q 443 479 456 481 Q 492 506 518 525 L 543 545 Z\", \"M 729 449 Q 748 456 771 461 Q 832 480 841 490 Q 848 497 844 505 Q 837 515 809 521 Q 782 524 722 497 L 681 480 Q 606 456 576 444 L 527 431 Q 478 421 426 411 Q 393 404 418 389 Q 460 368 507 386 Q 517 389 528 392 L 574 405 Q 629 421 688 437 L 729 449 Z\", \"M 576 444 Q 576 466 579 488 Q 583 510 579 519 Q 572 531 543 545 C 517 559 510 554 518 525 Q 517 525 518 524 Q 527 506 527 431 L 528 392 Q 528 358 528 312 L 528 273 Q 531 116 520 100 Q 513 96 447 115 Q 437 118 437 112 Q 437 105 446 97 Q 495 51 528 14 Q 538 7 549 20 Q 579 62 580 153 Q 574 271 573 303 L 573 333 Q 572 370 574 405 L 576 444 Z\", \"M 528 312 Q 414 267 406 264 Q 396 263 396 253 Q 396 243 405 238 Q 424 228 452 218 Q 461 217 469 224 Q 502 260 528 273 L 573 303 Q 621 339 623 341 Q 633 348 632 355 Q 628 359 618 355 Q 596 345 573 333 L 528 312 Z\", \"M 740 230 L 741 229 Q 792 76 887 -19 Q 914 -43 928 -44 Q 941 -45 950 -35 Q 957 -26 952 16 Q 946 55 952 142 Q 956 169 947 171 Q 940 172 930 148 Q 906 64 888 75 Q 840 108 776 264 L 762 307 Q 738 395 729 449 L 722 497 Q 695 699 705 764 Q 718 795 694 816 Q 690 820 686 822 Q 667 837 653 839 Q 641 839 641 838 Q 619 834 636 811 Q 645 807 659 707 Q 663 595 681 480 L 688 437 Q 706 335 729 264 L 740 230 Z\", \"M 729 264 Q 704 239 645 185 Q 638 181 647 179 Q 680 188 740 230 L 776 264 Q 807 297 860 368 Q 875 392 875 393 Q 874 400 864 411 Q 839 436 813 431 Q 806 430 807 420 Q 810 390 765 312 Q 764 311 762 307 L 729 264 Z\", \"M 777 658 Q 804 637 834 612 Q 847 600 863 602 Q 873 603 877 616 Q 881 631 870 659 Q 858 687 769 704 Q 753 705 748 703 Q 744 699 745 687 Q 749 677 777 658 Z\"], \"medians\": [[[274, 796], [301, 773], [305, 759], [286, 689], [230, 558], [148, 436], [96, 377], [57, 343]], [[258, 564], [376, 601], [412, 591], [365, 501], [329, 450]], [[243, 454], [279, 407], [281, 296], [268, 158], [272, 123], [303, 130], [414, 209]], [[574, 653], [588, 621], [472, 502], [461, 500], [460, 490]], [[419, 401], [456, 397], [507, 406], [786, 493], [833, 499]], [[525, 525], [545, 516], [553, 500], [551, 109], [543, 81], [531, 65], [443, 110]], [[409, 252], [452, 250], [522, 293], [578, 318], [625, 353]], [[642, 824], [666, 807], [678, 785], [694, 536], [719, 384], [740, 301], [771, 212], [806, 138], [849, 71], [891, 34], [905, 29], [922, 59], [946, 164]], [[820, 420], [837, 392], [796, 320], [734, 245], [683, 204], [653, 191], [651, 184]], [[753, 697], [842, 646], [860, 619]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 606 682 Q 630 694 746 694 Q 878 694 880 695 Q 880 696 882 697 Q 889 710 877 722 Q 804 782 746 759 Q 467 702 200 680 Q 193 681 188 680 Q 175 679 174 668 Q 173 655 192 642 Q 210 630 241 619 Q 251 615 270 624 Q 337 646 474 667 Q 504 673 560 677 L 606 682 Z\", \"M 560 677 Q 559 677 560 676 Q 561 649 550 612 Q 528 567 504 528 L 470 480 Q 463 473 457 464 Q 399 388 333 332 Q 269 274 111 165 Q 101 161 112 156 Q 157 156 322 262 Q 409 329 484 417 L 539 483 Q 635 609 644 615 Q 654 621 652 632 Q 651 644 639 658 Q 624 674 606 682 C 580 697 561 707 560 677 Z\", \"M 504 528 Q 489 550 466 559 Q 454 560 450 553 Q 444 544 470 480 L 484 417 Q 490 222 461 87 Q 448 38 485 -17 Q 486 -20 490 -23 Q 511 -41 523 -11 Q 539 35 539 86 Q 529 386 536 454 Q 540 472 539 483 C 539 486 523 505 504 528 Z\", \"M 632 397 Q 731 321 850 208 Q 868 189 884 184 Q 894 184 901 195 Q 913 210 897 255 Q 873 327 631 429 Q 621 435 620 421 Q 620 406 632 397 Z\"], \"medians\": [[[187, 667], [251, 651], [473, 690], [771, 730], [840, 720], [868, 709], [879, 698]], [[568, 677], [601, 633], [527, 510], [451, 416], [369, 331], [300, 273], [168, 187], [115, 161]], [[459, 548], [477, 527], [506, 472], [509, 231], [498, 73], [503, -13]], [[632, 417], [751, 340], [825, 284], [863, 245], [884, 200]]], \"radStrokes\": [0]}","export const charData = \n{\"strokes\": [\"M 130 534 Q 120 541 86 550 Q 74 554 71 549 Q 64 543 72 528 Q 100 449 110 324 Q 111 287 129 260 Q 145 238 151 253 Q 160 277 156 323 L 151 359 Q 138 468 135 504 C 132 533 132 533 130 534 Z\", \"M 284 391 Q 299 493 326 525 Q 347 552 323 564 Q 304 574 276 589 Q 258 598 213 568 Q 156 544 130 534 C 102 523 107 494 135 504 Q 159 513 223 534 Q 245 541 251 533 Q 261 526 252 484 Q 245 441 235 390 C 229 361 279 361 284 391 Z\", \"M 156 323 Q 219 344 300 360 Q 310 363 311 372 Q 310 379 284 391 L 235 390 Q 232 390 231 389 Q 188 371 151 359 C 122 350 128 314 156 323 Z\", \"M 448 605 Q 505 647 531 656 Q 550 663 541 679 Q 531 695 509 708 Q 488 721 477 720 Q 467 719 469 707 Q 470 679 415 625 Q 387 597 355 564 Q 345 551 360 552 Q 397 573 424 589 L 448 605 Z\", \"M 665 489 Q 668 490 675 492 Q 748 508 808 521 Q 818 520 827 534 Q 827 546 804 554 Q 762 570 715 550 Q 687 541 658 530 L 615 516 Q 612 516 611 515 Q 548 496 490 482 L 446 472 Q 400 465 350 453 Q 322 447 345 432 Q 381 408 410 419 Q 425 425 447 429 L 490 442 Q 548 460 621 478 L 665 489 Z\", \"M 490 482 Q 490 524 499 554 Q 506 570 492 581 Q 471 597 448 605 C 420 617 409 615 424 589 Q 425 589 426 587 Q 445 556 445 518 Q 445 496 446 472 L 447 429 Q 448 368 448 313 L 448 266 Q 445 89 434 80 Q 428 77 365 90 Q 355 93 355 87 Q 355 81 364 74 Q 419 20 438 -13 Q 451 -28 464 -15 Q 497 18 495 74 Q 492 113 490 295 L 490 336 Q 490 385 490 442 L 490 482 Z\", \"M 448 313 Q 372 273 289 229 Q 270 219 236 213 Q 223 209 223 198 Q 224 185 235 178 Q 262 166 299 154 Q 309 153 320 164 Q 362 212 448 266 L 490 295 Q 553 340 570 358 Q 582 368 581 377 Q 574 381 562 377 Q 528 358 490 336 L 448 313 Z\", \"M 683 234 Q 740 83 833 -3 Q 891 -55 922 -55 Q 943 -51 936 -22 Q 933 24 942 158 Q 943 182 935 183 Q 934 183 889 98 Q 871 61 846 76 Q 836 82 825 92 Q 768 155 719 263 L 703 312 Q 696 339 665 489 L 658 530 Q 639 681 655 767 Q 668 810 612 833 Q 576 849 555 843 Q 534 836 544 816 Q 590 773 590 737 Q 600 613 615 516 L 621 478 Q 636 375 669 275 L 683 234 Z\", \"M 669 275 Q 639 245 605 222 Q 569 198 551 183 Q 541 170 556 172 Q 595 171 683 234 L 719 263 Q 741 284 762 306 Q 799 349 834 383 Q 847 393 836 410 Q 800 450 775 453 Q 763 452 763 438 Q 760 378 703 312 L 669 275 Z\", \"M 735 681 Q 760 665 786 643 Q 802 633 818 635 Q 830 638 833 652 Q 834 668 821 698 Q 814 714 784 723 Q 709 735 699 727 Q 695 723 698 709 Q 704 699 735 681 Z\"], \"medians\": [[[79, 541], [105, 516], [108, 503], [141, 259]], [[137, 512], [151, 526], [248, 561], [268, 559], [290, 540], [264, 414], [241, 398]], [[161, 330], [176, 349], [232, 367], [278, 374], [303, 371]], [[480, 709], [491, 691], [493, 673], [445, 626], [364, 561]], [[346, 443], [398, 440], [744, 533], [779, 538], [816, 535]], [[430, 593], [450, 583], [470, 555], [465, 75], [451, 42], [375, 81], [362, 82]], [[238, 198], [298, 193], [576, 373]], [[557, 826], [593, 809], [619, 781], [628, 584], [655, 417], [696, 261], [743, 159], [812, 63], [844, 37], [873, 25], [885, 26], [908, 71], [936, 177]], [[775, 440], [795, 398], [749, 328], [664, 242], [615, 208], [560, 180]], [[704, 722], [781, 690], [813, 654]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 314 680 Q 377 704 437 736 Q 452 746 472 751 Q 485 758 484 767 Q 481 774 464 787 Q 425 811 401 811 Q 391 812 390 800 Q 384 748 187 664 Q 177 657 193 653 Q 238 654 272 666 L 314 680 Z\", \"M 353 523 Q 380 530 409 536 Q 442 543 447 549 Q 456 556 451 565 Q 444 575 416 583 Q 370 589 354 574 L 299 557 Q 289 556 279 552 Q 234 542 180 536 Q 146 529 171 514 Q 208 493 276 508 Q 286 511 300 512 L 353 523 Z\", \"M 341 371 Q 392 383 455 391 Q 473 394 474 402 Q 475 417 455 427 Q 421 442 347 422 L 296 411 Q 151 384 98 380 Q 85 379 80 369 Q 77 357 94 344 Q 137 314 193 331 Q 247 350 291 360 L 341 371 Z\", \"M 291 360 Q 264 189 160 78 Q 141 57 123 40 Q 108 27 106 20 Q 105 13 116 14 Q 153 14 235 102 Q 319 198 340 363 Q 340 367 341 371 L 347 422 Q 351 468 353 523 L 354 574 Q 354 601 359 637 Q 365 658 343 668 Q 327 675 314 680 C 286 691 258 693 272 666 Q 288 650 299 557 L 300 512 Q 299 470 296 411 L 291 360 Z\", \"M 668 714 Q 821 750 828 755 Q 837 764 832 772 Q 825 784 794 790 Q 763 796 733 783 Q 696 770 656 759 Q 613 749 561 742 Q 524 735 551 719 Q 575 706 607 705 L 668 714 Z\", \"M 691 575 Q 749 588 801 595 Q 828 599 817 615 Q 804 631 775 637 Q 747 640 699 626 Q 695 625 694 624 L 637 607 Q 591 595 552 584 Q 533 580 557 562 Q 564 558 637 566 L 691 575 Z\", \"M 689 449 Q 746 461 796 467 Q 824 471 813 487 Q 800 503 771 509 Q 743 513 695 499 Q 691 498 690 497 L 637 483 Q 583 470 536 456 Q 517 452 541 434 Q 554 425 579 430 Q 607 436 636 440 L 689 449 Z\", \"M 688 321 Q 772 333 946 333 Q 967 334 972 343 Q 978 355 960 369 Q 903 414 847 395 Q 784 382 688 364 L 635 356 Q 542 343 437 327 Q 415 324 431 307 Q 464 277 503 287 Q 564 305 634 313 L 688 321 Z\", \"M 636 -16 Q 642 -43 649 -53 Q 655 -60 663 -58 Q 678 -49 685 14 Q 695 105 692 196 Q 689 233 688 321 L 688 364 Q 688 403 689 449 L 690 497 Q 690 533 691 575 L 694 624 Q 698 652 703 672 Q 706 691 691 700 Q 678 709 668 714 C 642 729 594 732 607 705 Q 634 651 637 619 Q 636 618 637 614 Q 637 611 637 607 L 637 566 Q 637 527 637 483 L 636 440 Q 635 400 635 356 L 634 313 Q 628 63 636 -16 Z\"], \"medians\": [[[473, 766], [419, 769], [366, 729], [314, 702], [239, 671], [200, 664]], [[173, 526], [193, 521], [246, 523], [377, 557], [441, 559]], [[92, 365], [155, 355], [398, 408], [435, 411], [462, 406]], [[279, 667], [323, 638], [326, 582], [321, 406], [298, 275], [266, 191], [238, 143], [185, 76], [114, 21]], [[553, 732], [575, 726], [612, 727], [676, 738], [772, 766], [822, 765]], [[554, 573], [624, 582], [758, 613], [806, 607]], [[538, 445], [569, 446], [753, 486], [802, 479]], [[434, 317], [492, 310], [717, 348], [882, 367], [960, 349]], [[616, 699], [663, 672], [666, 635], [659, -48]]], \"radStrokes\": [0, 1, 2, 3]}","export const charData = \n{\"strokes\": [\"M 364 532 Q 458 562 460 563 Q 469 572 464 580 Q 455 592 426 598 Q 395 602 366 589 L 316 570 Q 226 543 148 531 Q 111 522 138 507 Q 183 483 239 501 Q 276 511 315 520 L 364 532 Z\", \"M 312 332 Q 311 247 310 141 Q 309 117 297 109 Q 291 105 237 108 Q 204 118 207 109 Q 208 102 229 87 Q 284 42 297 16 Q 313 -14 327 -15 Q 342 -16 356 19 Q 372 65 371 138 Q 364 252 362 366 L 362 399 Q 361 466 364 532 L 366 589 Q 366 688 386 757 Q 404 787 348 809 Q 314 828 295 821 Q 277 815 293 792 Q 315 764 316 731 Q 317 713 316 570 L 315 520 Q 314 459 313 375 L 312 332 Z\", \"M 362 366 Q 432 412 440 420 Q 447 433 436 433 Q 421 433 362 399 L 313 375 Q 213 327 126 281 Q 87 262 63 257 Q 50 251 46 243 Q 45 233 59 218 Q 78 200 102 190 Q 117 186 133 200 Q 199 258 312 332 L 362 366 Z\", \"M 709 517 Q 802 532 906 532 Q 925 533 929 542 Q 933 554 917 566 Q 860 605 805 584 Q 687 557 487 518 Q 466 515 483 499 Q 496 486 514 482 Q 535 478 550 484 Q 599 500 656 509 L 709 517 Z\", \"M 625 58 Q 598 65 565 72 Q 552 76 553 68 Q 554 59 565 50 Q 637 -2 684 -46 Q 697 -55 711 -38 Q 751 19 745 101 Q 730 302 738 456 Q 744 484 738 495 Q 731 505 709 517 C 684 533 647 538 656 509 Q 671 461 673 438 Q 673 435 673 432 Q 688 87 668 58 Q 656 49 625 58 Z\"], \"medians\": [[[140, 520], [163, 515], [212, 518], [405, 573], [455, 572]], [[301, 806], [318, 798], [349, 766], [337, 460], [338, 113], [317, 67], [213, 107]], [[57, 240], [108, 230], [434, 425]], [[485, 509], [532, 503], [607, 522], [841, 561], [917, 547]], [[664, 501], [693, 486], [704, 470], [708, 58], [687, 15], [642, 26], [560, 66]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 502 718 Q 550 731 590 746 Q 641 759 683 764 Q 701 763 706 771 Q 710 781 700 795 Q 679 814 634 837 Q 619 847 605 847 Q 596 844 594 832 Q 591 802 411 730 Q 365 714 310 696 Q 303 687 310 684 Q 328 678 449 707 Q 458 708 468 711 L 502 718 Z\", \"M 555 563 Q 697 591 706 599 Q 716 606 711 616 Q 704 628 674 636 Q 644 643 547 611 L 506 600 Q 496 599 486 596 Q 413 580 327 574 Q 290 568 315 550 Q 358 528 428 540 Q 468 549 513 554 L 555 563 Z\", \"M 575 389 Q 687 398 843 397 Q 927 394 935 406 Q 942 419 923 436 Q 863 479 820 471 Q 723 452 571 429 L 525 422 Q 513 422 503 420 Q 325 398 115 373 Q 90 372 108 351 Q 124 335 145 329 Q 169 322 187 328 Q 352 373 527 385 L 575 389 Z\", \"M 527 385 Q 536 154 492 78 Q 488 69 479 66 Q 467 62 376 87 Q 369 88 366 85 Q 365 81 373 73 Q 437 19 470 -22 Q 482 -35 489 -33 Q 505 -32 532 -3 Q 590 57 589 171 Q 590 237 575 389 L 571 429 Q 562 519 555 563 L 547 611 Q 541 650 540 680 Q 540 699 528 706 Q 515 713 502 718 C 475 730 454 737 468 711 Q 486 687 506 600 L 513 554 Q 520 493 525 422 L 527 385 Z\"], \"medians\": [[[696, 777], [623, 796], [504, 743], [388, 705], [314, 690]], [[319, 563], [387, 557], [515, 578], [654, 611], [700, 610]], [[111, 362], [168, 352], [395, 390], [830, 435], [869, 430], [926, 412]], [[474, 710], [512, 683], [538, 532], [557, 281], [556, 186], [548, 115], [520, 46], [492, 22], [372, 81]]]}","export const charData = \n{\"strokes\": [\"M 329 762 Q 363 731 401 693 Q 416 677 434 678 Q 446 678 452 693 Q 459 709 449 744 Q 443 769 406 789 Q 319 826 300 819 Q 294 815 295 800 Q 299 787 329 762 Z\", \"M 193 512 Q 139 496 110 494 Q 94 495 92 487 Q 88 478 99 470 Q 144 443 177 457 Q 286 505 289 504 Q 293 505 298 501 Q 307 495 299 385 Q 296 270 264 167 Q 245 131 289 78 Q 299 65 311 71 Q 320 78 333 104 Q 379 153 474 239 Q 487 249 486 258 Q 485 268 472 258 Q 427 234 383 206 Q 322 160 336 232 Q 335 296 359 456 Q 363 481 388 507 Q 401 517 391 531 Q 379 549 339 568 Q 326 575 307 563 Q 234 524 193 512 Z\", \"M 720 584 Q 789 599 925 609 Q 937 608 948 622 Q 949 635 924 648 Q 884 672 815 652 Q 631 615 486 601 Q 453 597 478 577 Q 517 547 547 554 Q 602 564 669 575 L 720 584 Z\", \"M 669 575 Q 687 521 687 493 Q 696 142 682 110 Q 679 109 679 106 Q 666 97 635 107 Q 610 114 578 120 Q 565 124 565 116 Q 565 107 577 97 Q 647 42 694 -4 Q 707 -14 722 4 Q 767 64 760 150 Q 745 342 755 517 Q 762 547 755 558 Q 746 570 720 584 C 694 599 660 604 669 575 Z\"], \"medians\": [[[305, 811], [395, 753], [433, 698]], [[103, 482], [145, 476], [181, 482], [291, 529], [330, 528], [339, 518], [303, 197], [310, 151], [365, 168], [479, 255]], [[480, 590], [531, 579], [862, 633], [936, 624]], [[677, 568], [720, 539], [720, 99], [698, 60], [655, 72], [573, 113]]], \"radStrokes\": [0, 1]}","export const charData = \n{\"strokes\": [\"M 531 651 Q 736 675 868 663 Q 893 662 899 670 Q 906 683 894 696 Q 863 724 817 744 Q 801 750 775 740 Q 712 725 483 694 Q 185 660 168 657 Q 162 658 156 657 Q 141 657 141 645 Q 140 632 160 618 Q 178 605 211 594 Q 221 590 240 599 Q 348 629 470 644 L 531 651 Z\", \"M 435 100 Q 407 107 373 116 Q 360 120 361 112 Q 361 103 373 94 Q 445 39 491 -5 Q 503 -15 518 2 Q 560 60 553 141 Q 541 447 548 561 Q 548 579 550 596 Q 556 624 549 635 Q 545 642 531 651 C 509 671 457 671 470 644 Q 485 629 485 573 Q 488 443 488 148 Q 487 112 477 99 Q 464 92 435 100 Z\"], \"medians\": [[[153, 645], [177, 634], [219, 628], [416, 663], [794, 706], [823, 702], [887, 679]], [[478, 644], [518, 610], [518, 101], [495, 55], [450, 68], [369, 110]]]}","export const charData = \n{\"strokes\": [\"M 386 759 Q 374 763 348 769 Q 336 772 333 767 Q 326 760 335 744 Q 368 674 385 561 Q 389 527 408 503 Q 426 481 431 497 Q 434 507 435 522 L 434 546 Q 433 564 420 624 L 416 648 Q 406 706 403 728 C 399 755 399 755 386 759 Z\", \"M 580 537 Q 598 513 613 505 Q 623 498 638 519 Q 653 544 681 679 Q 690 709 712 733 Q 725 745 714 758 Q 699 774 658 800 Q 643 809 572 793 Q 566 793 461 773 Q 421 766 386 759 C 357 753 374 720 403 728 Q 523 761 592 761 Q 610 764 619 755 Q 632 740 629 724 Q 608 585 591 567 C 577 541 577 541 580 537 Z\", \"M 420 624 Q 424 623 430 624 Q 506 637 563 645 Q 585 649 577 661 Q 567 674 543 678 Q 513 681 416 648 C 388 638 390 627 420 624 Z\", \"M 435 522 Q 438 521 447 522 Q 522 532 580 537 C 610 540 617 553 591 567 Q 585 571 577 572 Q 547 576 434 546 C 405 538 405 525 435 522 Z\", \"M 525 418 Q 639 433 804 433 Q 882 433 888 443 Q 892 455 876 469 Q 816 514 753 494 Q 555 455 149 403 Q 127 400 143 383 Q 176 353 215 363 Q 344 399 477 413 L 525 418 Z\", \"M 530 135 Q 534 204 538 262 L 540 287 Q 541 339 547 372 Q 554 393 525 418 C 503 438 464 440 477 413 Q 489 398 489 304 Q 488 253 487 160 C 487 130 528 105 530 135 Z\", \"M 538 262 Q 547 258 563 260 Q 648 276 710 287 Q 737 293 726 307 Q 713 323 683 327 Q 653 330 540 287 C 512 276 509 271 538 262 Z\", \"M 354 250 Q 375 292 386 301 Q 393 307 391 317 Q 388 327 375 337 Q 342 367 309 357 Q 300 354 304 342 Q 322 282 228 146 Q 224 142 220 136 Q 192 99 120 24 Q 113 18 123 16 Q 177 26 272 130 Q 278 140 287 149 Q 308 177 337 222 L 354 250 Z\", \"M 337 222 Q 521 68 686 -15 Q 711 -28 771 -16 Q 822 -4 875 9 Q 909 19 916 30 Q 922 42 902 42 Q 823 52 775 53 Q 649 62 532 134 Q 531 135 530 135 L 487 160 Q 423 200 354 250 C 330 268 314 241 337 222 Z\"], \"medians\": [[[342, 759], [364, 740], [376, 720], [420, 502]], [[394, 757], [412, 747], [476, 764], [607, 781], [645, 772], [660, 757], [669, 744], [629, 579], [615, 543], [619, 524]], [[425, 631], [451, 644], [532, 660], [567, 655]], [[441, 528], [450, 537], [566, 554], [581, 562]], [[146, 393], [193, 384], [441, 427], [792, 467], [827, 464], [880, 449]], [[483, 412], [517, 380], [509, 187], [512, 167], [528, 144]], [[545, 268], [578, 283], [666, 303], [715, 300]], [[318, 346], [345, 311], [321, 251], [286, 189], [249, 136], [196, 78], [126, 22]], [[357, 242], [359, 226], [368, 218], [463, 149], [583, 75], [686, 28], [709, 20], [755, 18], [880, 26], [907, 34]]], \"radStrokes\": [0, 1, 2, 3]}","export const charData = \n{\"strokes\": [\"M 646 688 Q 722 700 819 692 Q 835 691 839 701 Q 843 711 831 726 Q 783 765 697 744 Q 681 741 665 737 L 603 726 Q 521 713 429 699 L 381 693 Q 305 684 222 674 Q 194 670 214 655 Q 256 630 337 646 Q 362 653 389 657 L 432 666 Q 492 678 594 684 L 646 688 Z\", \"M 429 699 Q 428 733 426 760 Q 427 779 408 785 Q 369 806 347 798 Q 328 789 343 770 Q 371 736 381 693 L 389 657 Q 401 597 415 580 Q 428 570 433 581 Q 436 593 432 666 L 429 699 Z\", \"M 665 737 Q 674 761 691 789 Q 707 805 695 816 Q 682 834 645 852 Q 627 862 608 852 Q 598 845 606 833 Q 619 803 603 726 L 594 684 Q 572 609 574 588 Q 575 572 592 585 Q 610 600 646 688 L 665 737 Z\", \"M 338 466 Q 314 481 287 488 Q 274 491 265 484 Q 258 478 266 464 Q 284 440 294 414 Q 303 389 326 288 C 333 259 370 262 366 292 Q 351 403 351 433 C 350 459 350 459 338 466 Z\", \"M 709 334 Q 739 418 775 441 Q 794 460 779 479 Q 763 495 709 523 Q 690 532 667 525 Q 600 503 539 490 L 478 480 Q 408 471 338 466 C 308 464 321 430 351 433 Q 364 433 381 437 Q 427 444 477 451 L 535 460 Q 583 467 632 475 Q 663 481 676 467 Q 691 449 651 326 C 642 297 698 306 709 334 Z\", \"M 523 278 Q 599 284 916 285 Q 937 284 942 293 Q 949 306 931 321 Q 867 369 804 350 Q 761 344 709 334 L 651 326 Q 587 319 514 308 L 467 302 Q 416 301 366 292 L 326 288 Q 223 279 110 267 Q 88 266 104 247 Q 119 232 138 226 Q 160 219 177 224 Q 304 255 446 270 Q 453 271 463 272 L 523 278 Z\", \"M 463 272 Q 445 157 369 103 Q 308 58 177 20 Q 164 16 162 11 Q 163 7 174 4 Q 193 0 244 8 Q 329 21 391 66 Q 475 124 505 254 L 514 308 Q 515 312 516 317 Q 525 390 535 460 L 539 490 Q 542 506 556 529 Q 563 544 553 555 Q 531 574 492 588 Q 467 595 457 589 Q 448 582 455 569 Q 477 532 478 480 L 477 451 Q 476 375 467 302 L 463 272 Z\", \"M 505 254 Q 599 130 719 -1 Q 741 -23 777 -21 Q 898 -12 936 -4 Q 946 0 949 5 Q 948 11 837 53 Q 756 83 714 114 Q 626 181 523 278 C 501 299 486 279 505 254 Z\"], \"medians\": [[[216, 665], [236, 660], [324, 664], [439, 685], [727, 722], [770, 723], [826, 707]], [[352, 783], [393, 755], [424, 585]], [[614, 842], [631, 833], [652, 801], [620, 686], [583, 587]], [[275, 475], [317, 439], [344, 309], [358, 303]], [[346, 463], [370, 451], [526, 472], [651, 499], [693, 495], [726, 460], [689, 360], [671, 342], [657, 339]], [[107, 257], [160, 247], [432, 285], [819, 319], [871, 318], [930, 300]], [[465, 579], [512, 534], [485, 264], [455, 172], [405, 104], [349, 64], [265, 29], [169, 9]], [[517, 269], [522, 257], [638, 135], [697, 79], [759, 31], [942, 1]]], \"radStrokes\": [0, 1, 2]}","export const charData = \n{\"strokes\": [\"M 375 746 Q 394 728 415 707 Q 428 694 445 695 Q 455 695 461 709 Q 465 724 456 753 Q 450 769 425 780 Q 361 801 348 795 Q 344 791 344 778 Q 348 768 375 746 Z\", \"M 587 794 Q 572 766 518 687 Q 508 669 526 674 Q 571 702 595 722 Q 652 771 674 781 Q 696 793 683 810 Q 668 826 641 839 Q 616 852 603 848 Q 590 845 596 832 Q 600 813 587 794 Z\", \"M 505 601 Q 572 614 647 625 Q 711 638 722 646 Q 729 653 726 661 Q 720 673 694 680 Q 667 687 568 657 Q 390 620 290 613 Q 256 609 279 593 Q 318 568 368 579 Q 414 586 461 594 L 505 601 Z\", \"M 524 482 Q 651 510 654 512 Q 661 519 658 526 Q 652 536 628 543 Q 601 549 527 523 L 472 510 Q 418 500 356 496 Q 325 492 347 476 Q 380 458 461 471 Q 467 472 473 473 L 524 482 Z\", \"M 519 403 Q 520 446 524 482 L 527 523 Q 528 530 529 536 Q 535 572 529 579 Q 517 592 505 601 C 481 620 450 622 461 594 Q 468 584 472 510 L 473 473 Q 473 442 474 397 C 475 367 518 373 519 403 Z\", \"M 469 359 Q 604 380 782 394 Q 792 391 803 405 Q 804 417 782 429 Q 743 453 674 434 Q 530 407 519 403 L 474 397 Q 437 394 214 374 Q 184 371 206 352 Q 239 322 269 329 Q 342 342 429 354 L 469 359 Z\", \"M 508 230 Q 572 239 739 239 Q 758 240 764 248 Q 768 260 752 274 Q 692 317 646 299 Q 591 289 511 274 L 445 264 Q 360 252 264 238 Q 243 237 259 219 Q 286 194 343 204 Q 388 216 440 222 L 508 230 Z\", \"M 511 274 Q 512 277 513 280 Q 517 302 523 313 Q 530 320 524 331 Q 517 340 469 359 C 441 370 421 379 429 354 Q 429 351 441 320 Q 444 313 445 264 L 440 222 Q 413 102 312 34 Q 270 9 190 -25 Q 162 -37 194 -40 Q 272 -43 376 18 Q 397 33 416 54 Q 470 112 495 205 L 511 274 Z\", \"M 495 205 Q 589 90 708 -32 Q 730 -51 763 -48 Q 878 -35 913 -24 Q 923 -20 924 -15 Q 924 -9 909 -2 Q 759 43 701 80 Q 613 141 508 230 C 485 249 473 232 495 205 Z\"], \"medians\": [[[353, 789], [418, 749], [443, 713]], [[604, 838], [623, 819], [632, 800], [529, 685]], [[282, 604], [343, 596], [682, 658], [713, 656]], [[349, 487], [375, 482], [449, 486], [593, 520], [650, 521]], [[468, 594], [497, 569], [501, 550], [497, 429], [480, 406]], [[208, 364], [260, 353], [460, 376], [706, 415], [746, 416], [791, 407]], [[261, 229], [281, 223], [331, 224], [524, 255], [678, 272], [754, 253]], [[436, 353], [466, 332], [481, 310], [466, 204], [432, 121], [401, 77], [356, 34], [266, -12], [201, -30]], [[505, 222], [510, 208], [610, 112], [736, 7], [769, -3], [916, -16]]], \"radStrokes\": [0, 1, 2, 3, 4, 5]}","export const charData = \n{\"strokes\": [\"M 282 720 Q 270 741 233 755 Q 221 762 208 757 Q 198 751 205 736 Q 229 648 231 611 Q 230 608 231 602 Q 238 308 189 137 Q 170 68 211 19 Q 223 3 236 17 Q 246 30 250 44 L 255 86 Q 259 123 261 178 Q 280 626 285 676 C 287 706 288 714 282 720 Z\", \"M 751 76 Q 772 55 799 4 Q 809 -20 825 -18 Q 838 -17 847 5 Q 877 62 852 247 Q 822 661 841 685 Q 844 692 849 697 Q 861 712 860 720 Q 859 733 825 756 Q 767 795 724 781 Q 703 777 668 770 Q 517 754 335 723 Q 307 720 282 720 C 252 719 256 670 285 676 Q 297 676 314 682 Q 327 686 450 706 Q 601 730 718 737 Q 743 738 749 726 Q 774 701 782 401 Q 789 220 792 177 Q 796 117 780 98 C 771 69 735 96 751 76 Z\", \"M 514 554 Q 664 588 667 590 Q 674 597 671 605 Q 664 615 638 623 Q 614 627 516 598 Q 438 580 376 574 Q 343 568 367 553 Q 400 532 459 544 Q 463 545 470 545 L 514 554 Z\", \"M 530 382 Q 545 386 562 388 Q 602 392 634 396 Q 644 395 653 407 Q 654 417 632 428 Q 607 447 531 427 L 483 416 Q 450 410 422 406 Q 394 403 364 399 Q 337 396 358 379 Q 392 355 416 362 Q 447 369 483 374 L 530 382 Z\", \"M 525 254 Q 526 323 530 382 L 531 427 Q 534 533 535 534 Q 523 546 514 554 C 492 574 459 573 470 545 Q 482 527 483 416 L 483 374 Q 483 323 483 246 C 483 216 525 224 525 254 Z\", \"M 483 246 Q 407 233 319 218 Q 300 215 315 199 Q 328 186 346 182 Q 367 178 382 182 Q 499 215 672 217 Q 687 216 701 217 Q 720 217 724 226 Q 728 238 713 250 Q 656 290 590 268 Q 562 262 525 254 L 483 246 Z\", \"M 672 345 Q 697 324 722 299 Q 732 289 745 290 Q 754 290 757 301 Q 761 311 754 335 Q 750 351 724 364 Q 667 388 652 383 Q 648 379 649 369 Q 652 362 672 345 Z\", \"M 250 44 Q 256 44 264 45 Q 420 70 751 76 C 781 77 799 77 780 98 Q 773 108 753 124 Q 734 137 697 131 Q 451 94 255 86 C 225 85 220 41 250 44 Z\"], \"medians\": [[[216, 745], [248, 707], [256, 623], [246, 321], [219, 96], [224, 25]], [[291, 684], [303, 700], [346, 708], [722, 759], [764, 754], [798, 723], [804, 714], [803, 582], [828, 151], [825, 102], [815, 68], [823, 1]], [[369, 565], [390, 559], [430, 560], [524, 576], [618, 601], [663, 599]], [[359, 390], [407, 382], [581, 414], [643, 409]], [[478, 546], [506, 521], [509, 442], [505, 277], [489, 254]], [[318, 208], [373, 204], [632, 246], [668, 244], [713, 231]], [[657, 375], [719, 338], [745, 302]], [[257, 50], [273, 67], [320, 72], [709, 104], [772, 98]]], \"radStrokes\": [0, 1, 7]}","export const charData = \n{\"strokes\": [\"M 522 647 Q 597 660 675 672 Q 736 684 745 692 Q 755 701 751 710 Q 744 725 711 734 Q 675 743 586 714 Q 439 680 317 673 Q 275 669 304 648 Q 347 621 431 633 Q 447 636 466 638 L 522 647 Z\", \"M 537 386 Q 589 396 646 404 Q 701 414 709 421 Q 719 430 715 439 Q 708 452 677 461 Q 644 470 612 458 Q 575 448 538 437 L 484 425 Q 408 413 320 407 Q 280 403 308 383 Q 353 355 412 367 Q 446 373 483 377 L 537 386 Z\", \"M 530 162 Q 533 283 537 386 L 538 437 Q 539 545 545 598 Q 554 623 522 647 C 499 667 456 666 466 638 Q 481 602 485 499 Q 484 471 484 425 L 483 377 Q 482 289 480 157 C 480 127 529 132 530 162 Z\", \"M 512 111 Q 566 114 617 118 Q 749 128 895 112 Q 920 108 927 118 Q 936 131 922 145 Q 891 176 844 198 Q 828 205 801 196 Q 704 178 530 162 L 480 157 Q 359 147 297 140 Q 228 131 125 132 Q 110 132 109 120 Q 108 107 128 91 Q 176 55 213 68 Q 243 78 400 100 Q 452 107 512 111 Z\", \"M 732 327 Q 763 299 798 265 Q 810 252 825 252 Q 835 252 841 265 Q 845 278 838 307 Q 834 329 800 348 Q 722 378 708 375 Q 704 371 704 359 Q 707 349 732 327 Z\"], \"medians\": [[[307, 662], [353, 653], [418, 656], [659, 702], [737, 705]], [[311, 397], [335, 389], [386, 387], [486, 401], [646, 435], [701, 434]], [[474, 636], [510, 606], [512, 560], [506, 202], [504, 184], [485, 166]], [[122, 119], [150, 106], [193, 98], [400, 126], [819, 159], [834, 159], [914, 128]], [[711, 370], [800, 309], [824, 270]]]}","export const charData = \n{\"strokes\": [\"M 528 646 Q 601 659 678 670 Q 739 680 749 689 Q 761 698 755 709 Q 748 725 711 735 Q 672 745 579 716 Q 444 685 307 677 Q 261 673 293 649 Q 341 621 432 632 Q 450 635 472 638 L 528 646 Z\", \"M 539 380 Q 707 411 713 416 Q 723 425 719 434 Q 712 447 679 458 Q 645 465 610 453 Q 576 443 541 434 L 490 423 Q 421 410 341 405 Q 299 401 328 380 Q 373 355 455 367 Q 471 370 489 372 L 539 380 Z\", \"M 533 159 Q 536 277 539 380 L 541 434 Q 542 548 548 600 Q 557 627 529 645 L 528 646 C 505 665 463 666 472 638 Q 487 602 491 498 Q 490 468 490 423 L 489 372 Q 488 285 485 154 C 484 124 532 129 533 159 Z\", \"M 520 106 Q 574 107 626 112 Q 776 124 907 105 Q 934 102 940 111 Q 950 127 936 140 Q 903 171 855 195 Q 839 202 810 193 Q 740 180 668 171 Q 587 165 533 159 L 485 154 Q 361 145 299 138 Q 229 128 125 130 Q 109 130 108 117 Q 107 104 127 87 Q 146 72 181 58 Q 193 54 213 62 Q 231 68 304 78 Q 401 97 520 106 Z\"], \"medians\": [[[296, 665], [329, 657], [385, 655], [675, 704], [742, 702]], [[331, 394], [364, 387], [424, 387], [548, 407], [647, 431], [706, 428]], [[479, 636], [515, 610], [516, 575], [510, 185], [490, 163]], [[122, 116], [158, 100], [196, 94], [403, 122], [837, 156], [926, 123]]]}","export const charData = \n{\"strokes\": [\"M 254 596 Q 244 603 202 608 Q 189 611 185 605 Q 178 598 189 580 Q 228 507 254 384 Q 260 347 282 324 Q 303 300 307 318 Q 310 328 310 343 L 306 381 Q 305 390 303 399 Q 276 513 267 556 C 261 585 259 594 254 596 Z\", \"M 752 425 Q 765 462 777 498 Q 793 546 828 578 Q 853 603 821 624 Q 793 648 762 666 Q 743 679 717 668 Q 677 655 615 646 Q 575 642 535 636 L 476 628 Q 427 622 380 613 Q 307 603 254 596 C 224 592 237 551 267 556 Q 274 556 286 559 Q 400 587 476 593 L 534 600 Q 604 609 698 615 Q 717 616 724 607 Q 739 583 693 435 C 684 406 742 397 752 425 Z\", \"M 530 370 Q 630 380 764 386 Q 776 387 778 397 Q 779 406 752 425 C 730 441 723 440 693 435 Q 606 420 530 407 L 475 399 Q 385 389 306 381 C 276 378 280 341 310 343 Q 314 343 321 343 Q 382 356 475 365 L 530 370 Z\", \"M 475 365 Q 472 17 485 -11 Q 486 -12 488 -16 Q 503 -32 512 -10 Q 530 32 530 370 L 530 407 Q 531 519 534 600 L 535 636 Q 538 742 559 778 Q 566 794 545 811 Q 520 830 475 843 Q 454 847 441 833 Q 431 826 444 812 Q 472 787 475 753 Q 475 704 476 628 L 476 593 Q 476 517 476 419 Q 475 409 475 399 L 475 365 Z\"], \"medians\": [[[194, 598], [229, 572], [236, 553], [295, 323]], [[262, 591], [281, 579], [471, 611], [719, 641], [741, 638], [777, 596], [732, 460], [702, 446]], [[316, 350], [330, 365], [689, 409], [749, 405], [768, 398]], [[449, 823], [476, 817], [513, 781], [505, 656], [499, -10]]], \"radStrokes\": [3]}","export const charData = \n{\"strokes\": [\"M 475 485 Q 547 653 563 683 Q 573 695 565 708 Q 558 721 519 742 Q 491 757 480 754 Q 462 750 465 730 Q 484 537 292 308 Q 280 296 269 284 Q 212 217 68 102 Q 58 92 66 89 Q 76 86 90 92 Q 190 138 274 210 Q 380 294 462 456 L 475 485 Z\", \"M 462 456 Q 480 423 575 292 Q 666 171 733 101 Q 764 67 793 69 Q 881 75 958 79 Q 991 80 992 89 Q 993 98 956 112 Q 772 178 740 205 Q 617 304 490 466 Q 481 476 475 485 C 457 509 447 482 462 456 Z\"], \"medians\": [[[483, 736], [508, 702], [511, 678], [473, 552], [408, 416], [328, 303], [271, 244], [144, 139], [72, 95]], [[474, 477], [477, 459], [490, 439], [571, 333], [691, 200], [753, 145], [798, 119], [986, 90]]]}","export const charData = \n{\"strokes\": [\"M 501 697 Q 651 713 886 701 Q 908 701 914 710 Q 921 723 902 740 Q 836 794 786 775 Q 548 739 143 701 Q 119 700 136 679 Q 170 645 215 654 Q 317 679 432 690 L 501 697 Z\", \"M 403 479 Q 439 525 459 556 Q 510 635 529 654 Q 547 672 529 685 Q 517 692 501 697 C 473 707 419 717 432 690 Q 432 687 436 682 Q 451 658 398 524 Q 388 502 379 475 C 369 447 385 455 403 479 Z\", \"M 343 471 Q 321 489 294 496 Q 284 497 278 489 Q 274 482 282 472 Q 319 370 294 219 Q 291 200 284 177 Q 277 149 281 129 Q 291 95 304 81 Q 316 66 326 81 Q 333 90 338 104 L 347 144 Q 353 181 353 282 L 354 305 Q 355 402 360 434 C 363 456 363 456 343 471 Z\", \"M 596 126 Q 630 83 654 42 Q 664 23 676 23 Q 694 24 712 61 Q 731 103 728 154 Q 721 241 714 401 Q 713 435 731 460 Q 741 475 731 486 Q 709 508 651 534 Q 632 544 614 534 Q 547 506 403 479 L 379 475 Q 358 474 343 471 C 313 467 330 429 360 434 Q 369 434 588 477 Q 621 484 638 471 Q 666 443 649 158 Q 645 142 629 144 C 604 127 594 129 596 126 Z\", \"M 353 282 Q 363 275 386 277 Q 492 293 571 302 Q 599 306 589 322 Q 576 341 545 346 Q 512 352 354 305 C 325 296 326 295 353 282 Z\", \"M 338 104 Q 351 103 364 104 Q 439 119 596 126 C 626 127 640 128 629 144 Q 625 154 596 174 Q 577 186 540 177 Q 434 155 347 144 C 317 140 308 105 338 104 Z\"], \"medians\": [[[140, 690], [204, 679], [524, 721], [809, 742], [847, 737], [902, 717]], [[439, 689], [478, 655], [425, 538], [400, 493], [384, 481]], [[288, 484], [320, 452], [327, 429], [328, 271], [312, 138], [315, 85]], [[349, 466], [381, 456], [518, 481], [619, 507], [634, 507], [663, 493], [684, 471], [688, 145], [674, 106], [605, 123]], [[360, 287], [372, 295], [511, 320], [558, 322], [577, 315]], [[345, 109], [370, 127], [521, 148], [575, 153], [622, 145]]], \"radStrokes\": [1, 2, 3, 4, 5]}","export const charData = \n{\"strokes\": [\"M 330 536 Q 397 597 434 638 Q 518 732 544 746 Q 569 764 552 783 Q 531 802 496 815 Q 463 828 448 821 Q 432 817 440 801 Q 452 762 384 658 Q 306 538 305 535 C 289 509 308 516 330 536 Z\", \"M 227 531 Q 209 541 190 547 Q 183 550 176 543 Q 167 537 178 524 Q 236 419 241 179 Q 242 113 281 79 Q 282 78 287 75 Q 306 69 309 104 Q 309 111 309 117 L 304 156 Q 303 169 298 184 Q 292 239 283 310 Q 282 311 282 312 L 279 342 Q 272 421 270 485 C 269 510 254 517 227 531 Z\", \"M 640 134 Q 650 106 675 51 Q 684 32 695 32 Q 713 35 724 63 Q 772 150 780 268 Q 792 341 801 428 Q 808 483 834 518 Q 855 540 840 556 Q 815 581 761 606 Q 740 618 702 605 Q 555 557 330 536 L 305 535 Q 268 535 227 531 C 197 529 241 478 270 485 Q 303 497 669 549 Q 712 556 729 536 Q 739 515 739 494 Q 732 337 696 185 Q 692 158 681 156 Q 677 155 664 160 C 635 153 633 152 640 134 Z\", \"M 282 312 Q 297 305 324 308 Q 490 330 613 342 Q 643 345 633 362 Q 620 381 588 389 Q 558 396 505 384 Q 382 360 279 342 C 249 337 253 321 282 312 Z\", \"M 309 117 Q 315 116 324 117 Q 426 133 640 134 C 670 134 685 139 664 160 Q 655 170 643 179 Q 625 192 590 186 Q 431 162 304 156 C 274 154 279 118 309 117 Z\"], \"medians\": [[[449, 809], [469, 796], [487, 761], [423, 665], [330, 549], [312, 536]], [[184, 534], [210, 513], [236, 471], [271, 169], [292, 88]], [[235, 528], [277, 511], [336, 517], [550, 547], [719, 578], [742, 574], [766, 557], [784, 536], [757, 334], [727, 160], [697, 109], [695, 47]], [[287, 335], [300, 327], [315, 327], [570, 365], [620, 355]], [[311, 150], [324, 139], [337, 138], [585, 160], [655, 161]]]}","export const charData = \n{\"strokes\": [\"M 349 664 Q 348 665 347 666 Q 322 687 292 696 Q 282 697 274 689 Q 270 682 279 670 Q 331 531 294 261 Q 287 216 271 169 Q 262 141 267 118 Q 277 81 291 65 Q 304 50 314 66 Q 324 79 332 102 L 339 137 Q 349 186 350 238 Q 350 316 351 391 L 352 420 Q 353 576 361 626 C 364 652 364 652 349 664 Z\", \"M 608 120 Q 641 78 665 39 Q 675 18 688 19 Q 707 20 724 59 Q 745 104 740 157 Q 728 310 721 593 Q 720 629 738 654 Q 748 669 738 681 Q 716 703 656 730 Q 635 740 617 729 Q 512 684 349 664 C 319 660 332 620 361 626 Q 410 635 590 672 Q 624 679 640 666 Q 691 615 658 164 Q 657 163 657 159 Q 653 143 640 144 C 621 121 602 128 608 120 Z\", \"M 351 391 Q 390 378 433 387 Q 493 399 554 411 Q 582 417 587 421 Q 596 428 591 437 Q 584 447 556 455 Q 531 461 450 435 Q 375 423 352 420 C 322 416 322 400 351 391 Z\", \"M 332 102 Q 345 98 361 100 Q 440 115 608 120 C 638 121 661 122 640 144 Q 633 153 614 166 Q 596 178 561 170 Q 438 146 339 137 C 309 134 303 108 332 102 Z\"], \"medians\": [[[284, 684], [321, 646], [328, 617], [332, 516], [323, 261], [302, 136], [302, 70]], [[359, 660], [374, 648], [388, 650], [635, 703], [668, 687], [690, 665], [699, 450], [699, 159], [685, 105], [688, 37]], [[357, 413], [369, 404], [398, 404], [534, 432], [581, 431]], [[340, 106], [355, 119], [432, 130], [585, 147], [632, 143]]]}","export const charData = \n{\"strokes\": [\"M 295 571 Q 267 590 236 597 Q 227 600 221 594 Q 211 587 223 573 Q 281 477 292 248 Q 293 176 338 142 Q 339 141 343 139 Q 365 133 365 170 Q 365 174 365 177 L 360 223 Q 327 406 322 528 C 321 555 320 555 295 571 Z\", \"M 719 261 Q 755 472 821 538 Q 845 563 824 589 Q 802 607 729 642 Q 704 652 674 641 Q 515 587 295 571 C 265 569 293 522 322 528 Q 331 529 345 533 Q 493 555 634 577 Q 671 584 685 568 Q 707 549 703 505 Q 684 372 654 268 C 646 239 714 231 719 261 Z\", \"M 365 177 Q 372 177 383 178 Q 495 200 738 212 Q 751 213 754 224 Q 755 234 719 261 C 698 277 683 274 654 268 Q 491 235 360 223 C 330 220 335 176 365 177 Z\"], \"medians\": [[[229, 584], [272, 548], [287, 517], [330, 203], [348, 152]], [[304, 569], [333, 552], [488, 574], [663, 608], [700, 607], [720, 598], [759, 559], [758, 552], [694, 295], [661, 273]], [[369, 185], [394, 203], [651, 238], [710, 236], [744, 224]]]}","export const charData = \n{\"strokes\": [\"M 225 711 Q 252 690 279 665 Q 294 652 310 654 Q 320 655 325 668 Q 329 684 318 713 Q 312 732 282 744 Q 209 765 196 759 Q 192 755 193 742 Q 197 732 225 711 Z\", \"M 135 503 Q 89 485 64 481 Q 51 481 49 474 Q 45 465 56 459 Q 95 438 120 451 Q 151 470 180 489 Q 202 502 210 496 Q 220 492 216 467 Q 222 299 188 173 Q 173 140 215 96 Q 225 86 234 92 Q 241 99 251 121 Q 282 166 350 244 Q 360 254 358 262 Q 357 269 346 260 Q 315 239 284 215 Q 244 181 249 231 Q 248 298 267 462 Q 268 484 289 507 Q 299 517 291 528 Q 281 543 243 557 Q 233 563 217 552 Q 165 516 135 503 Z\", \"M 441 656 Q 495 711 535 757 Q 548 773 566 787 Q 582 800 570 813 Q 557 825 531 832 Q 509 839 498 835 Q 488 831 493 820 Q 503 796 427 662 C 412 636 420 635 441 656 Z\", \"M 427 662 Q 415 672 404 677 Q 394 680 386 677 Q 379 673 382 664 Q 394 631 399 563 Q 399 502 401 347 C 401 317 440 327 440 357 Q 440 396 441 430 L 442 456 Q 442 490 443 522 L 444 548 Q 444 590 447 631 C 449 667 448 646 427 662 Z\", \"M 447 631 Q 453 631 543 657 Q 558 664 564 656 Q 576 622 573 390 L 571 299 Q 562 85 552 71 Q 548 68 489 79 Q 473 85 473 76 Q 519 36 545 5 Q 555 -11 569 -15 Q 576 -18 584 -10 Q 620 32 618 77 Q 611 267 617 574 Q 616 623 627 644 Q 637 660 627 669 Q 608 685 578 697 Q 562 703 549 696 Q 506 669 441 656 C 412 649 418 624 447 631 Z\", \"M 443 522 Q 443 523 446 523 Q 498 535 539 543 Q 558 547 549 558 Q 539 568 518 571 Q 482 574 444 548 C 419 531 414 513 443 522 Z\", \"M 441 430 Q 442 430 447 430 Q 504 442 546 450 Q 565 454 557 465 Q 547 478 524 480 Q 494 483 442 456 C 415 442 411 430 441 430 Z\", \"M 401 347 Q 386 346 372 342 Q 356 338 331 340 Q 321 339 319 331 Q 316 321 323 314 Q 341 301 366 284 Q 373 281 383 288 Q 423 316 541 355 C 569 364 602 397 573 390 Q 509 374 440 357 L 401 347 Z\", \"M 541 355 Q 511 250 314 108 Q 298 95 313 94 Q 323 93 362 109 Q 408 127 449 160 Q 486 190 526 237 Q 553 270 571 299 C 640 406 562 418 541 355 Z\", \"M 849 507 Q 850 508 936 523 Q 946 522 954 535 Q 955 545 933 555 Q 894 570 849 553 L 799 539 Q 739 526 643 507 Q 615 503 637 487 Q 673 465 697 472 Q 743 485 800 496 L 849 507 Z\", \"M 800 496 Q 801 358 806 122 Q 805 100 794 90 Q 787 84 725 98 Q 692 111 695 101 Q 696 94 716 78 Q 777 29 792 0 Q 808 -33 824 -35 Q 839 -36 853 0 Q 871 46 868 119 Q 852 312 849 507 L 849 553 Q 849 659 864 718 Q 880 749 824 769 Q 790 787 771 780 Q 753 773 770 750 Q 792 723 794 690 Q 795 674 799 539 L 800 496 Z\", \"M 684 349 Q 703 325 722 298 Q 732 285 746 283 Q 755 282 761 293 Q 768 305 764 332 Q 763 348 738 365 Q 680 398 668 395 Q 664 392 663 381 Q 664 371 684 349 Z\"], \"medians\": [[[200, 753], [276, 711], [307, 672]], [[59, 470], [107, 469], [186, 512], [225, 523], [238, 520], [246, 508], [223, 201], [231, 168], [270, 181], [352, 258]], [[504, 825], [526, 796], [488, 733], [439, 670]], [[392, 668], [418, 636], [421, 598], [420, 372], [405, 358]], [[448, 638], [467, 650], [506, 658], [561, 680], [577, 675], [597, 651], [585, 67], [569, 36], [482, 73]], [[453, 531], [457, 541], [473, 547], [521, 556], [542, 552]], [[444, 436], [457, 448], [487, 457], [528, 464], [549, 459]], [[332, 326], [371, 314], [526, 363], [567, 385]], [[570, 382], [547, 306], [493, 232], [408, 155], [316, 101]], [[638, 498], [680, 492], [887, 539], [943, 536]], [[778, 765], [826, 726], [822, 553], [837, 109], [832, 78], [817, 48], [752, 72], [714, 91], [712, 98], [701, 98]], [[671, 386], [728, 338], [747, 298]]], \"radStrokes\": [0, 1]}"],"sourceRoot":""}